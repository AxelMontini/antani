<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1606" onload="init(evt)" viewBox="0 0 1200 1606" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1606" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1589.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1589.00"> </text><svg id="frames" x="10" width="1180" total_samples="1090"><g><title>[[heap]] (3 samples, 0.28%)</title><rect x="0.0000%" y="1525" width="0.2752%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1535.50"></text></g><g><title>__libc_recv (3 samples, 0.28%)</title><rect x="0.0000%" y="1509" width="0.2752%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1519.50"></text></g><g><title>[unknown] (3 samples, 0.28%)</title><rect x="0.0000%" y="1493" width="0.2752%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1503.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="0.3670%" y="1493" width="0.0917%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="1"/><text x="0.6170%" y="1503.50"></text></g><g><title>backend::get_stops::{{closure}} (1 samples, 0.09%)</title><rect x="0.4587%" y="1429" width="0.0917%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1439.50"></text></g><g><title>&lt;reqwest::async_impl::client::Pending as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="0.4587%" y="1413" width="0.0917%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1423.50"></text></g><g><title>&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="0.4587%" y="1397" width="0.0917%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1407.50"></text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="0.4587%" y="1381" width="0.0917%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1391.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="0.4587%" y="1365" width="0.0917%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1375.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::{{closure}} (1 samples, 0.09%)</title><rect x="0.4587%" y="1349" width="0.0917%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1359.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="0.4587%" y="1333" width="0.0917%" height="15" fill="rgb(250,228,42)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1343.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::send_request::{{closure}} (1 samples, 0.09%)</title><rect x="0.4587%" y="1317" width="0.0917%" height="15" fill="rgb(240,193,28)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1327.50"></text></g><g><title>http::header::map::Entry&lt;T&gt;::or_insert_with (1 samples, 0.09%)</title><rect x="0.4587%" y="1301" width="0.0917%" height="15" fill="rgb(216,20,37)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1311.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::send_request::{{closure}}::{{closure}} (1 samples, 0.09%)</title><rect x="0.4587%" y="1285" width="0.0917%" height="15" fill="rgb(206,188,39)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1295.50"></text></g><g><title>http::uri::Uri::host (1 samples, 0.09%)</title><rect x="0.4587%" y="1269" width="0.0917%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1279.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.09%)</title><rect x="0.4587%" y="1253" width="0.0917%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1263.50"></text></g><g><title>http::uri::Uri::host::{{closure}} (1 samples, 0.09%)</title><rect x="0.4587%" y="1237" width="0.0917%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1247.50"></text></g><g><title>http::uri::authority::Authority::host (1 samples, 0.09%)</title><rect x="0.4587%" y="1221" width="0.0917%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1231.50"></text></g><g><title>http::uri::authority::host (1 samples, 0.09%)</title><rect x="0.4587%" y="1205" width="0.0917%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1215.50"></text></g><g><title>&lt;core::str::iter::RSplitN&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="0.4587%" y="1189" width="0.0917%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1199.50"></text></g><g><title>core::str::iter::SplitNInternal&lt;P&gt;::next_back (1 samples, 0.09%)</title><rect x="0.4587%" y="1173" width="0.0917%" height="15" fill="rgb(249,33,26)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1183.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_back (1 samples, 0.09%)</title><rect x="0.4587%" y="1157" width="0.0917%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1167.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::ReverseSearcher&gt;::next_match_back (1 samples, 0.09%)</title><rect x="0.4587%" y="1141" width="0.0917%" height="15" fill="rgb(221,5,38)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1151.50"></text></g><g><title>core::slice::memchr::memrchr (1 samples, 0.09%)</title><rect x="0.4587%" y="1125" width="0.0917%" height="15" fill="rgb(247,18,42)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1135.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::align_to (1 samples, 0.09%)</title><rect x="0.4587%" y="1109" width="0.0917%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1119.50"></text></g><g><title>core::ptr::align_offset (1 samples, 0.09%)</title><rect x="0.4587%" y="1093" width="0.0917%" height="15" fill="rgb(249,31,29)" fg:x="5" fg:w="1"/><text x="0.7087%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::io::buf_stream::BufTruncator&gt; (1 samples, 0.09%)</title><rect x="0.5505%" y="485" width="0.0917%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="1"/><text x="0.8005%" y="495.50"></text></g><g><title>&lt;sqlx_core::io::buf_stream::BufTruncator as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="0.5505%" y="469" width="0.0917%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="1"/><text x="0.8005%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="0.5505%" y="805" width="0.1835%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="2"/><text x="0.8005%" y="815.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}} (2 samples, 0.18%)</title><rect x="0.5505%" y="789" width="0.1835%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="2"/><text x="0.8005%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="0.5505%" y="773" width="0.1835%" height="15" fill="rgb(209,103,24)" fg:x="6" fg:w="2"/><text x="0.8005%" y="783.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::get_or_prepare::{{closure}} (2 samples, 0.18%)</title><rect x="0.5505%" y="757" width="0.1835%" height="15" fill="rgb(229,88,8)" fg:x="6" fg:w="2"/><text x="0.8005%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="0.5505%" y="741" width="0.1835%" height="15" fill="rgb(213,181,19)" fg:x="6" fg:w="2"/><text x="0.8005%" y="751.50"></text></g><g><title>sqlx_core::postgres::connection::executor::prepare::{{closure}} (2 samples, 0.18%)</title><rect x="0.5505%" y="725" width="0.1835%" height="15" fill="rgb(254,191,54)" fg:x="6" fg:w="2"/><text x="0.8005%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="0.5505%" y="709" width="0.1835%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="2"/><text x="0.8005%" y="719.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv_expect::{{closure}} (2 samples, 0.18%)</title><rect x="0.5505%" y="693" width="0.1835%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="2"/><text x="0.8005%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="0.5505%" y="677" width="0.1835%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="2"/><text x="0.8005%" y="687.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv::{{closure}} (2 samples, 0.18%)</title><rect x="0.5505%" y="661" width="0.1835%" height="15" fill="rgb(245,192,40)" fg:x="6" fg:w="2"/><text x="0.8005%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="0.5505%" y="645" width="0.1835%" height="15" fill="rgb(238,167,29)" fg:x="6" fg:w="2"/><text x="0.8005%" y="655.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv_unchecked::{{closure}} (2 samples, 0.18%)</title><rect x="0.5505%" y="629" width="0.1835%" height="15" fill="rgb(232,182,51)" fg:x="6" fg:w="2"/><text x="0.8005%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="0.5505%" y="613" width="0.1835%" height="15" fill="rgb(231,60,39)" fg:x="6" fg:w="2"/><text x="0.8005%" y="623.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read::{{closure}} (2 samples, 0.18%)</title><rect x="0.5505%" y="597" width="0.1835%" height="15" fill="rgb(208,69,12)" fg:x="6" fg:w="2"/><text x="0.8005%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="0.5505%" y="581" width="0.1835%" height="15" fill="rgb(235,93,37)" fg:x="6" fg:w="2"/><text x="0.8005%" y="591.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_with::{{closure}} (2 samples, 0.18%)</title><rect x="0.5505%" y="565" width="0.1835%" height="15" fill="rgb(213,116,39)" fg:x="6" fg:w="2"/><text x="0.8005%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="0.5505%" y="549" width="0.1835%" height="15" fill="rgb(222,207,29)" fg:x="6" fg:w="2"/><text x="0.8005%" y="559.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_raw::{{closure}} (2 samples, 0.18%)</title><rect x="0.5505%" y="533" width="0.1835%" height="15" fill="rgb(206,96,30)" fg:x="6" fg:w="2"/><text x="0.8005%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="0.5505%" y="517" width="0.1835%" height="15" fill="rgb(218,138,4)" fg:x="6" fg:w="2"/><text x="0.8005%" y="527.50"></text></g><g><title>sqlx_core::io::buf_stream::read_raw_into::{{closure}} (2 samples, 0.18%)</title><rect x="0.5505%" y="501" width="0.1835%" height="15" fill="rgb(250,191,14)" fg:x="6" fg:w="2"/><text x="0.8005%" y="511.50"></text></g><g><title>sqlx_core::io::buf_stream::BufTruncator::is_full (1 samples, 0.09%)</title><rect x="0.6422%" y="485" width="0.0917%" height="15" fill="rgb(239,60,40)" fg:x="7" fg:w="1"/><text x="0.8922%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="0.7339%" y="421" width="0.0917%" height="15" fill="rgb(206,27,48)" fg:x="8" fg:w="1"/><text x="0.9839%" y="431.50"></text></g><g><title>sqlx_core::io::buf_stream::BufTruncator::read::{{closure}} (1 samples, 0.09%)</title><rect x="0.7339%" y="405" width="0.0917%" height="15" fill="rgb(225,35,8)" fg:x="8" fg:w="1"/><text x="0.9839%" y="415.50"></text></g><g><title>&lt;tokio::io::util::read::Read&lt;R&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="0.7339%" y="389" width="0.0917%" height="15" fill="rgb(250,213,24)" fg:x="8" fg:w="1"/><text x="0.9839%" y="399.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::new (1 samples, 0.09%)</title><rect x="0.7339%" y="373" width="0.0917%" height="15" fill="rgb(247,123,22)" fg:x="8" fg:w="1"/><text x="0.9839%" y="383.50"></text></g><g><title>tokio::io::read_buf::slice_to_uninit_mut (1 samples, 0.09%)</title><rect x="0.7339%" y="357" width="0.0917%" height="15" fill="rgb(231,138,38)" fg:x="8" fg:w="1"/><text x="0.9839%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::io::buf_stream::BufTruncator&gt; (1 samples, 0.09%)</title><rect x="0.8257%" y="421" width="0.0917%" height="15" fill="rgb(231,145,46)" fg:x="9" fg:w="1"/><text x="1.0757%" y="431.50"></text></g><g><title>bytes::bytes_mut::BytesMut::truncate (1 samples, 0.09%)</title><rect x="0.8257%" y="405" width="0.0917%" height="15" fill="rgb(251,118,11)" fg:x="9" fg:w="1"/><text x="1.0757%" y="415.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="0.4587%" y="1445" width="0.5505%" height="15" fill="rgb(217,147,25)" fg:x="5" fg:w="6"/><text x="0.7087%" y="1455.50"></text></g><g><title>sqlx_core::query::Map&lt;DB,F,A&gt;::fetch_all::{{closure}} (5 samples, 0.46%)</title><rect x="0.5505%" y="1429" width="0.4587%" height="15" fill="rgb(247,81,37)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1439.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="0.5505%" y="1413" width="0.4587%" height="15" fill="rgb(209,12,38)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1423.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (5 samples, 0.46%)</title><rect x="0.5505%" y="1397" width="0.4587%" height="15" fill="rgb(227,1,9)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1407.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.46%)</title><rect x="0.5505%" y="1381" width="0.4587%" height="15" fill="rgb(248,47,43)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1391.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.46%)</title><rect x="0.5505%" y="1365" width="0.4587%" height="15" fill="rgb(221,10,30)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1375.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (5 samples, 0.46%)</title><rect x="0.5505%" y="1349" width="0.4587%" height="15" fill="rgb(210,229,1)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1359.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.46%)</title><rect x="0.5505%" y="1333" width="0.4587%" height="15" fill="rgb(222,148,37)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1343.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.46%)</title><rect x="0.5505%" y="1317" width="0.4587%" height="15" fill="rgb(234,67,33)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1327.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="0.5505%" y="1301" width="0.4587%" height="15" fill="rgb(247,98,35)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1311.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="0.5505%" y="1285" width="0.4587%" height="15" fill="rgb(247,138,52)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1295.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="0.5505%" y="1269" width="0.4587%" height="15" fill="rgb(213,79,30)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1279.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="0.5505%" y="1253" width="0.4587%" height="15" fill="rgb(246,177,23)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1263.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (5 samples, 0.46%)</title><rect x="0.5505%" y="1237" width="0.4587%" height="15" fill="rgb(230,62,27)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="0.5505%" y="1221" width="0.4587%" height="15" fill="rgb(216,154,8)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1231.50"></text></g><g><title>sqlx_core::query::Map&lt;DB,F,A&gt;::fetch_many::{{closure}}::{{closure}} (5 samples, 0.46%)</title><rect x="0.5505%" y="1205" width="0.4587%" height="15" fill="rgb(244,35,45)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1215.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="0.5505%" y="1189" width="0.4587%" height="15" fill="rgb(251,115,12)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1199.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (5 samples, 0.46%)</title><rect x="0.5505%" y="1173" width="0.4587%" height="15" fill="rgb(240,54,50)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1183.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (5 samples, 0.46%)</title><rect x="0.5505%" y="1157" width="0.4587%" height="15" fill="rgb(233,84,52)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.46%)</title><rect x="0.5505%" y="1141" width="0.4587%" height="15" fill="rgb(207,117,47)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1151.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.46%)</title><rect x="0.5505%" y="1125" width="0.4587%" height="15" fill="rgb(249,43,39)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1135.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="0.5505%" y="1109" width="0.4587%" height="15" fill="rgb(209,38,44)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1119.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="0.5505%" y="1093" width="0.4587%" height="15" fill="rgb(236,212,23)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1103.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="0.5505%" y="1077" width="0.4587%" height="15" fill="rgb(242,79,21)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="0.5505%" y="1061" width="0.4587%" height="15" fill="rgb(211,96,35)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1071.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (5 samples, 0.46%)</title><rect x="0.5505%" y="1045" width="0.4587%" height="15" fill="rgb(253,215,40)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="0.5505%" y="1029" width="0.4587%" height="15" fill="rgb(211,81,21)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1039.50"></text></g><g><title>sqlx_core::pool::executor::&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::{{closure}}::{{closure}} (5 samples, 0.46%)</title><rect x="0.5505%" y="1013" width="0.4587%" height="15" fill="rgb(208,190,38)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1023.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="0.5505%" y="997" width="0.4587%" height="15" fill="rgb(235,213,38)" fg:x="6" fg:w="5"/><text x="0.8005%" y="1007.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (5 samples, 0.46%)</title><rect x="0.5505%" y="981" width="0.4587%" height="15" fill="rgb(237,122,38)" fg:x="6" fg:w="5"/><text x="0.8005%" y="991.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (5 samples, 0.46%)</title><rect x="0.5505%" y="965" width="0.4587%" height="15" fill="rgb(244,218,35)" fg:x="6" fg:w="5"/><text x="0.8005%" y="975.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.46%)</title><rect x="0.5505%" y="949" width="0.4587%" height="15" fill="rgb(240,68,47)" fg:x="6" fg:w="5"/><text x="0.8005%" y="959.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.46%)</title><rect x="0.5505%" y="933" width="0.4587%" height="15" fill="rgb(210,16,53)" fg:x="6" fg:w="5"/><text x="0.8005%" y="943.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="0.5505%" y="917" width="0.4587%" height="15" fill="rgb(235,124,12)" fg:x="6" fg:w="5"/><text x="0.8005%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="0.5505%" y="901" width="0.4587%" height="15" fill="rgb(224,169,11)" fg:x="6" fg:w="5"/><text x="0.8005%" y="911.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="0.5505%" y="885" width="0.4587%" height="15" fill="rgb(250,166,2)" fg:x="6" fg:w="5"/><text x="0.8005%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="0.5505%" y="869" width="0.4587%" height="15" fill="rgb(242,216,29)" fg:x="6" fg:w="5"/><text x="0.8005%" y="879.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (5 samples, 0.46%)</title><rect x="0.5505%" y="853" width="0.4587%" height="15" fill="rgb(230,116,27)" fg:x="6" fg:w="5"/><text x="0.8005%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="0.5505%" y="837" width="0.4587%" height="15" fill="rgb(228,99,48)" fg:x="6" fg:w="5"/><text x="0.8005%" y="847.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_core::postgres::connection::PgConnection&gt;::fetch_many::{{closure}}::{{closure}} (5 samples, 0.46%)</title><rect x="0.5505%" y="821" width="0.4587%" height="15" fill="rgb(253,11,6)" fg:x="6" fg:w="5"/><text x="0.8005%" y="831.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="0.7339%" y="805" width="0.2752%" height="15" fill="rgb(247,143,39)" fg:x="8" fg:w="3"/><text x="0.9839%" y="815.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (3 samples, 0.28%)</title><rect x="0.7339%" y="789" width="0.2752%" height="15" fill="rgb(236,97,10)" fg:x="8" fg:w="3"/><text x="0.9839%" y="799.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (3 samples, 0.28%)</title><rect x="0.7339%" y="773" width="0.2752%" height="15" fill="rgb(233,208,19)" fg:x="8" fg:w="3"/><text x="0.9839%" y="783.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.28%)</title><rect x="0.7339%" y="757" width="0.2752%" height="15" fill="rgb(216,164,2)" fg:x="8" fg:w="3"/><text x="0.9839%" y="767.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.28%)</title><rect x="0.7339%" y="741" width="0.2752%" height="15" fill="rgb(220,129,5)" fg:x="8" fg:w="3"/><text x="0.9839%" y="751.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="0.7339%" y="725" width="0.2752%" height="15" fill="rgb(242,17,10)" fg:x="8" fg:w="3"/><text x="0.9839%" y="735.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="0.7339%" y="709" width="0.2752%" height="15" fill="rgb(242,107,0)" fg:x="8" fg:w="3"/><text x="0.9839%" y="719.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="0.7339%" y="693" width="0.2752%" height="15" fill="rgb(251,28,31)" fg:x="8" fg:w="3"/><text x="0.9839%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="0.7339%" y="677" width="0.2752%" height="15" fill="rgb(233,223,10)" fg:x="8" fg:w="3"/><text x="0.9839%" y="687.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (3 samples, 0.28%)</title><rect x="0.7339%" y="661" width="0.2752%" height="15" fill="rgb(215,21,27)" fg:x="8" fg:w="3"/><text x="0.9839%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="0.7339%" y="645" width="0.2752%" height="15" fill="rgb(232,23,21)" fg:x="8" fg:w="3"/><text x="0.9839%" y="655.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.28%)</title><rect x="0.7339%" y="629" width="0.2752%" height="15" fill="rgb(244,5,23)" fg:x="8" fg:w="3"/><text x="0.9839%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="0.7339%" y="613" width="0.2752%" height="15" fill="rgb(226,81,46)" fg:x="8" fg:w="3"/><text x="0.9839%" y="623.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv::{{closure}} (3 samples, 0.28%)</title><rect x="0.7339%" y="597" width="0.2752%" height="15" fill="rgb(247,70,30)" fg:x="8" fg:w="3"/><text x="0.9839%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="0.7339%" y="581" width="0.2752%" height="15" fill="rgb(212,68,19)" fg:x="8" fg:w="3"/><text x="0.9839%" y="591.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv_unchecked::{{closure}} (3 samples, 0.28%)</title><rect x="0.7339%" y="565" width="0.2752%" height="15" fill="rgb(240,187,13)" fg:x="8" fg:w="3"/><text x="0.9839%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="0.7339%" y="549" width="0.2752%" height="15" fill="rgb(223,113,26)" fg:x="8" fg:w="3"/><text x="0.9839%" y="559.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read::{{closure}} (3 samples, 0.28%)</title><rect x="0.7339%" y="533" width="0.2752%" height="15" fill="rgb(206,192,2)" fg:x="8" fg:w="3"/><text x="0.9839%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="0.7339%" y="517" width="0.2752%" height="15" fill="rgb(241,108,4)" fg:x="8" fg:w="3"/><text x="0.9839%" y="527.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_with::{{closure}} (3 samples, 0.28%)</title><rect x="0.7339%" y="501" width="0.2752%" height="15" fill="rgb(247,173,49)" fg:x="8" fg:w="3"/><text x="0.9839%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="0.7339%" y="485" width="0.2752%" height="15" fill="rgb(224,114,35)" fg:x="8" fg:w="3"/><text x="0.9839%" y="495.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_raw::{{closure}} (3 samples, 0.28%)</title><rect x="0.7339%" y="469" width="0.2752%" height="15" fill="rgb(245,159,27)" fg:x="8" fg:w="3"/><text x="0.9839%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="0.7339%" y="453" width="0.2752%" height="15" fill="rgb(245,172,44)" fg:x="8" fg:w="3"/><text x="0.9839%" y="463.50"></text></g><g><title>sqlx_core::io::buf_stream::read_raw_into::{{closure}} (3 samples, 0.28%)</title><rect x="0.7339%" y="437" width="0.2752%" height="15" fill="rgb(236,23,11)" fg:x="8" fg:w="3"/><text x="0.9839%" y="447.50"></text></g><g><title>sqlx_core::io::buf_stream::BufTruncator::is_full (1 samples, 0.09%)</title><rect x="0.9174%" y="421" width="0.0917%" height="15" fill="rgb(205,117,38)" fg:x="10" fg:w="1"/><text x="1.1674%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="1.0092%" y="1077" width="0.0917%" height="15" fill="rgb(237,72,25)" fg:x="11" fg:w="1"/><text x="1.2592%" y="1087.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}} (1 samples, 0.09%)</title><rect x="1.0092%" y="1061" width="0.0917%" height="15" fill="rgb(244,70,9)" fg:x="11" fg:w="1"/><text x="1.2592%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="1.0092%" y="1045" width="0.0917%" height="15" fill="rgb(217,125,39)" fg:x="11" fg:w="1"/><text x="1.2592%" y="1055.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::get_or_prepare::{{closure}} (1 samples, 0.09%)</title><rect x="1.0092%" y="1029" width="0.0917%" height="15" fill="rgb(235,36,10)" fg:x="11" fg:w="1"/><text x="1.2592%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="1.0092%" y="1013" width="0.0917%" height="15" fill="rgb(251,123,47)" fg:x="11" fg:w="1"/><text x="1.2592%" y="1023.50"></text></g><g><title>sqlx_core::postgres::connection::executor::prepare::{{closure}} (1 samples, 0.09%)</title><rect x="1.0092%" y="997" width="0.0917%" height="15" fill="rgb(221,13,13)" fg:x="11" fg:w="1"/><text x="1.2592%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="1.0092%" y="981" width="0.0917%" height="15" fill="rgb(238,131,9)" fg:x="11" fg:w="1"/><text x="1.2592%" y="991.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv_expect::{{closure}} (1 samples, 0.09%)</title><rect x="1.0092%" y="965" width="0.0917%" height="15" fill="rgb(211,50,8)" fg:x="11" fg:w="1"/><text x="1.2592%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="1.0092%" y="949" width="0.0917%" height="15" fill="rgb(245,182,24)" fg:x="11" fg:w="1"/><text x="1.2592%" y="959.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv::{{closure}} (1 samples, 0.09%)</title><rect x="1.0092%" y="933" width="0.0917%" height="15" fill="rgb(242,14,37)" fg:x="11" fg:w="1"/><text x="1.2592%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="1.0092%" y="917" width="0.0917%" height="15" fill="rgb(246,228,12)" fg:x="11" fg:w="1"/><text x="1.2592%" y="927.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv_unchecked::{{closure}} (1 samples, 0.09%)</title><rect x="1.0092%" y="901" width="0.0917%" height="15" fill="rgb(213,55,15)" fg:x="11" fg:w="1"/><text x="1.2592%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="1.0092%" y="885" width="0.0917%" height="15" fill="rgb(209,9,3)" fg:x="11" fg:w="1"/><text x="1.2592%" y="895.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read::{{closure}} (1 samples, 0.09%)</title><rect x="1.0092%" y="869" width="0.0917%" height="15" fill="rgb(230,59,30)" fg:x="11" fg:w="1"/><text x="1.2592%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="1.0092%" y="853" width="0.0917%" height="15" fill="rgb(209,121,21)" fg:x="11" fg:w="1"/><text x="1.2592%" y="863.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_with::{{closure}} (1 samples, 0.09%)</title><rect x="1.0092%" y="837" width="0.0917%" height="15" fill="rgb(220,109,13)" fg:x="11" fg:w="1"/><text x="1.2592%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="1.0092%" y="821" width="0.0917%" height="15" fill="rgb(232,18,1)" fg:x="11" fg:w="1"/><text x="1.2592%" y="831.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_raw::{{closure}} (1 samples, 0.09%)</title><rect x="1.0092%" y="805" width="0.0917%" height="15" fill="rgb(215,41,42)" fg:x="11" fg:w="1"/><text x="1.2592%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="1.0092%" y="789" width="0.0917%" height="15" fill="rgb(224,123,36)" fg:x="11" fg:w="1"/><text x="1.2592%" y="799.50"></text></g><g><title>sqlx_core::io::buf_stream::read_raw_into::{{closure}} (1 samples, 0.09%)</title><rect x="1.0092%" y="773" width="0.0917%" height="15" fill="rgb(240,125,3)" fg:x="11" fg:w="1"/><text x="1.2592%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="1.0092%" y="757" width="0.0917%" height="15" fill="rgb(205,98,50)" fg:x="11" fg:w="1"/><text x="1.2592%" y="767.50"></text></g><g><title>sqlx_core::io::buf_stream::BufTruncator::read::{{closure}} (1 samples, 0.09%)</title><rect x="1.0092%" y="741" width="0.0917%" height="15" fill="rgb(205,185,37)" fg:x="11" fg:w="1"/><text x="1.2592%" y="751.50"></text></g><g><title>&lt;tokio::io::util::read::Read&lt;R&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="1.0092%" y="725" width="0.0917%" height="15" fill="rgb(238,207,15)" fg:x="11" fg:w="1"/><text x="1.2592%" y="735.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="1.0092%" y="709" width="0.0917%" height="15" fill="rgb(213,199,42)" fg:x="11" fg:w="1"/><text x="1.2592%" y="719.50"></text></g><g><title>&lt;sqlx_core::net::tls::MaybeTlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="1.0092%" y="693" width="0.0917%" height="15" fill="rgb(235,201,11)" fg:x="11" fg:w="1"/><text x="1.2592%" y="703.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="1.0092%" y="677" width="0.0917%" height="15" fill="rgb(207,46,11)" fg:x="11" fg:w="1"/><text x="1.2592%" y="687.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (1 samples, 0.09%)</title><rect x="1.0092%" y="661" width="0.0917%" height="15" fill="rgb(241,35,35)" fg:x="11" fg:w="1"/><text x="1.2592%" y="671.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 0.09%)</title><rect x="1.0092%" y="645" width="0.0917%" height="15" fill="rgb(243,32,47)" fg:x="11" fg:w="1"/><text x="1.2592%" y="655.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_read_io (1 samples, 0.09%)</title><rect x="1.0092%" y="629" width="0.0917%" height="15" fill="rgb(247,202,23)" fg:x="11" fg:w="1"/><text x="1.2592%" y="639.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (1 samples, 0.09%)</title><rect x="1.0092%" y="613" width="0.0917%" height="15" fill="rgb(219,102,11)" fg:x="11" fg:w="1"/><text x="1.2592%" y="623.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (1 samples, 0.09%)</title><rect x="1.0092%" y="597" width="0.0917%" height="15" fill="rgb(243,110,44)" fg:x="11" fg:w="1"/><text x="1.2592%" y="607.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.09%)</title><rect x="1.0092%" y="581" width="0.0917%" height="15" fill="rgb(222,74,54)" fg:x="11" fg:w="1"/><text x="1.2592%" y="591.50"></text></g><g><title>tokio::io::driver::Direction::mask (1 samples, 0.09%)</title><rect x="1.0092%" y="565" width="0.0917%" height="15" fill="rgb(216,99,12)" fg:x="11" fg:w="1"/><text x="1.2592%" y="575.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="1.0092%" y="1125" width="0.3670%" height="15" fill="rgb(226,22,26)" fg:x="11" fg:w="4"/><text x="1.2592%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="1.0092%" y="1109" width="0.3670%" height="15" fill="rgb(217,163,10)" fg:x="11" fg:w="4"/><text x="1.2592%" y="1119.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_core::postgres::connection::PgConnection&gt;::fetch_optional::{{closure}} (4 samples, 0.37%)</title><rect x="1.0092%" y="1093" width="0.3670%" height="15" fill="rgb(213,25,53)" fg:x="11" fg:w="4"/><text x="1.2592%" y="1103.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="1.1009%" y="1077" width="0.2752%" height="15" fill="rgb(252,105,26)" fg:x="12" fg:w="3"/><text x="1.3509%" y="1087.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (3 samples, 0.28%)</title><rect x="1.1009%" y="1061" width="0.2752%" height="15" fill="rgb(220,39,43)" fg:x="12" fg:w="3"/><text x="1.3509%" y="1071.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (3 samples, 0.28%)</title><rect x="1.1009%" y="1045" width="0.2752%" height="15" fill="rgb(229,68,48)" fg:x="12" fg:w="3"/><text x="1.3509%" y="1055.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.28%)</title><rect x="1.1009%" y="1029" width="0.2752%" height="15" fill="rgb(252,8,32)" fg:x="12" fg:w="3"/><text x="1.3509%" y="1039.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.28%)</title><rect x="1.1009%" y="1013" width="0.2752%" height="15" fill="rgb(223,20,43)" fg:x="12" fg:w="3"/><text x="1.3509%" y="1023.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="1.1009%" y="997" width="0.2752%" height="15" fill="rgb(229,81,49)" fg:x="12" fg:w="3"/><text x="1.3509%" y="1007.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="1.1009%" y="981" width="0.2752%" height="15" fill="rgb(236,28,36)" fg:x="12" fg:w="3"/><text x="1.3509%" y="991.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="1.1009%" y="965" width="0.2752%" height="15" fill="rgb(249,185,26)" fg:x="12" fg:w="3"/><text x="1.3509%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="1.1009%" y="949" width="0.2752%" height="15" fill="rgb(249,174,33)" fg:x="12" fg:w="3"/><text x="1.3509%" y="959.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (3 samples, 0.28%)</title><rect x="1.1009%" y="933" width="0.2752%" height="15" fill="rgb(233,201,37)" fg:x="12" fg:w="3"/><text x="1.3509%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="1.1009%" y="917" width="0.2752%" height="15" fill="rgb(221,78,26)" fg:x="12" fg:w="3"/><text x="1.3509%" y="927.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.28%)</title><rect x="1.1009%" y="901" width="0.2752%" height="15" fill="rgb(250,127,30)" fg:x="12" fg:w="3"/><text x="1.3509%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="1.1009%" y="885" width="0.2752%" height="15" fill="rgb(230,49,44)" fg:x="12" fg:w="3"/><text x="1.3509%" y="895.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv::{{closure}} (3 samples, 0.28%)</title><rect x="1.1009%" y="869" width="0.2752%" height="15" fill="rgb(229,67,23)" fg:x="12" fg:w="3"/><text x="1.3509%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="1.1009%" y="853" width="0.2752%" height="15" fill="rgb(249,83,47)" fg:x="12" fg:w="3"/><text x="1.3509%" y="863.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv_unchecked::{{closure}} (3 samples, 0.28%)</title><rect x="1.1009%" y="837" width="0.2752%" height="15" fill="rgb(215,43,3)" fg:x="12" fg:w="3"/><text x="1.3509%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="1.1009%" y="821" width="0.2752%" height="15" fill="rgb(238,154,13)" fg:x="12" fg:w="3"/><text x="1.3509%" y="831.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read::{{closure}} (3 samples, 0.28%)</title><rect x="1.1009%" y="805" width="0.2752%" height="15" fill="rgb(219,56,2)" fg:x="12" fg:w="3"/><text x="1.3509%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="1.1009%" y="789" width="0.2752%" height="15" fill="rgb(233,0,4)" fg:x="12" fg:w="3"/><text x="1.3509%" y="799.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_with::{{closure}} (3 samples, 0.28%)</title><rect x="1.1009%" y="773" width="0.2752%" height="15" fill="rgb(235,30,7)" fg:x="12" fg:w="3"/><text x="1.3509%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="1.1009%" y="757" width="0.2752%" height="15" fill="rgb(250,79,13)" fg:x="12" fg:w="3"/><text x="1.3509%" y="767.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_raw::{{closure}} (3 samples, 0.28%)</title><rect x="1.1009%" y="741" width="0.2752%" height="15" fill="rgb(211,146,34)" fg:x="12" fg:w="3"/><text x="1.3509%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="1.1009%" y="725" width="0.2752%" height="15" fill="rgb(228,22,38)" fg:x="12" fg:w="3"/><text x="1.3509%" y="735.50"></text></g><g><title>sqlx_core::io::buf_stream::read_raw_into::{{closure}} (3 samples, 0.28%)</title><rect x="1.1009%" y="709" width="0.2752%" height="15" fill="rgb(235,168,5)" fg:x="12" fg:w="3"/><text x="1.3509%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="1.1009%" y="693" width="0.2752%" height="15" fill="rgb(221,155,16)" fg:x="12" fg:w="3"/><text x="1.3509%" y="703.50"></text></g><g><title>sqlx_core::io::buf_stream::BufTruncator::read::{{closure}} (3 samples, 0.28%)</title><rect x="1.1009%" y="677" width="0.2752%" height="15" fill="rgb(215,215,53)" fg:x="12" fg:w="3"/><text x="1.3509%" y="687.50"></text></g><g><title>&lt;tokio::io::util::read::Read&lt;R&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="1.1009%" y="661" width="0.2752%" height="15" fill="rgb(223,4,10)" fg:x="12" fg:w="3"/><text x="1.3509%" y="671.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.28%)</title><rect x="1.1009%" y="645" width="0.2752%" height="15" fill="rgb(234,103,6)" fg:x="12" fg:w="3"/><text x="1.3509%" y="655.50"></text></g><g><title>&lt;sqlx_core::net::tls::MaybeTlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.28%)</title><rect x="1.1009%" y="629" width="0.2752%" height="15" fill="rgb(227,97,0)" fg:x="12" fg:w="3"/><text x="1.3509%" y="639.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.28%)</title><rect x="1.1009%" y="613" width="0.2752%" height="15" fill="rgb(234,150,53)" fg:x="12" fg:w="3"/><text x="1.3509%" y="623.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (3 samples, 0.28%)</title><rect x="1.1009%" y="597" width="0.2752%" height="15" fill="rgb(228,201,54)" fg:x="12" fg:w="3"/><text x="1.3509%" y="607.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (3 samples, 0.28%)</title><rect x="1.1009%" y="581" width="0.2752%" height="15" fill="rgb(222,22,37)" fg:x="12" fg:w="3"/><text x="1.3509%" y="591.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_read_io (3 samples, 0.28%)</title><rect x="1.1009%" y="565" width="0.2752%" height="15" fill="rgb(237,53,32)" fg:x="12" fg:w="3"/><text x="1.3509%" y="575.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (3 samples, 0.28%)</title><rect x="1.1009%" y="549" width="0.2752%" height="15" fill="rgb(233,25,53)" fg:x="12" fg:w="3"/><text x="1.3509%" y="559.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (3 samples, 0.28%)</title><rect x="1.1009%" y="533" width="0.2752%" height="15" fill="rgb(210,40,34)" fg:x="12" fg:w="3"/><text x="1.3509%" y="543.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (3 samples, 0.28%)</title><rect x="1.1009%" y="517" width="0.2752%" height="15" fill="rgb(241,220,44)" fg:x="12" fg:w="3"/><text x="1.3509%" y="527.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.28%)</title><rect x="1.1009%" y="501" width="0.2752%" height="15" fill="rgb(235,28,35)" fg:x="12" fg:w="3"/><text x="1.3509%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.28%)</title><rect x="1.1009%" y="485" width="0.2752%" height="15" fill="rgb(210,56,17)" fg:x="12" fg:w="3"/><text x="1.3509%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (3 samples, 0.28%)</title><rect x="1.1009%" y="469" width="0.2752%" height="15" fill="rgb(224,130,29)" fg:x="12" fg:w="3"/><text x="1.3509%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (3 samples, 0.28%)</title><rect x="1.1009%" y="453" width="0.2752%" height="15" fill="rgb(235,212,8)" fg:x="12" fg:w="3"/><text x="1.3509%" y="463.50"></text></g><g><title>___pthread_mutex_lock (3 samples, 0.28%)</title><rect x="1.1009%" y="437" width="0.2752%" height="15" fill="rgb(223,33,50)" fg:x="12" fg:w="3"/><text x="1.3509%" y="447.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (1 samples, 0.09%)</title><rect x="1.3761%" y="1029" width="0.0917%" height="15" fill="rgb(219,149,13)" fg:x="15" fg:w="1"/><text x="1.6261%" y="1039.50"></text></g><g><title>backend::fill_occupancy::{{closure}}::{{closure}}::{{closure}} (12 samples, 1.10%)</title><rect x="0.4587%" y="1493" width="1.1009%" height="15" fill="rgb(250,156,29)" fg:x="5" fg:w="12"/><text x="0.7087%" y="1503.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 1.10%)</title><rect x="0.4587%" y="1477" width="1.1009%" height="15" fill="rgb(216,193,19)" fg:x="5" fg:w="12"/><text x="0.7087%" y="1487.50"></text></g><g><title>backend::occupancy::{{closure}} (12 samples, 1.10%)</title><rect x="0.4587%" y="1461" width="1.1009%" height="15" fill="rgb(216,135,14)" fg:x="5" fg:w="12"/><text x="0.7087%" y="1471.50"></text></g><g><title>&lt;futures_util::future::join_all::JoinAll&lt;F&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="1.0092%" y="1445" width="0.5505%" height="15" fill="rgb(241,47,5)" fg:x="11" fg:w="6"/><text x="1.2592%" y="1455.50"></text></g><g><title>&lt;futures_util::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="1.0092%" y="1429" width="0.5505%" height="15" fill="rgb(233,42,35)" fg:x="11" fg:w="6"/><text x="1.2592%" y="1439.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="1.0092%" y="1413" width="0.5505%" height="15" fill="rgb(231,13,6)" fg:x="11" fg:w="6"/><text x="1.2592%" y="1423.50"></text></g><g><title>backend::get_abbrev::{{closure}} (6 samples, 0.55%)</title><rect x="1.0092%" y="1397" width="0.5505%" height="15" fill="rgb(207,181,40)" fg:x="11" fg:w="6"/><text x="1.2592%" y="1407.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="1.0092%" y="1381" width="0.5505%" height="15" fill="rgb(254,173,49)" fg:x="11" fg:w="6"/><text x="1.2592%" y="1391.50"></text></g><g><title>sqlx_core::query::Map&lt;DB,F,A&gt;::fetch_one::{{closure}} (6 samples, 0.55%)</title><rect x="1.0092%" y="1365" width="0.5505%" height="15" fill="rgb(221,1,38)" fg:x="11" fg:w="6"/><text x="1.2592%" y="1375.50"></text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="1.0092%" y="1349" width="0.5505%" height="15" fill="rgb(206,124,46)" fg:x="11" fg:w="6"/><text x="1.2592%" y="1359.50"></text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="1.0092%" y="1333" width="0.5505%" height="15" fill="rgb(249,21,11)" fg:x="11" fg:w="6"/><text x="1.2592%" y="1343.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="1.0092%" y="1317" width="0.5505%" height="15" fill="rgb(222,201,40)" fg:x="11" fg:w="6"/><text x="1.2592%" y="1327.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (6 samples, 0.55%)</title><rect x="1.0092%" y="1301" width="0.5505%" height="15" fill="rgb(235,61,29)" fg:x="11" fg:w="6"/><text x="1.2592%" y="1311.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="1.0092%" y="1285" width="0.5505%" height="15" fill="rgb(219,207,3)" fg:x="11" fg:w="6"/><text x="1.2592%" y="1295.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="1.0092%" y="1269" width="0.5505%" height="15" fill="rgb(222,56,46)" fg:x="11" fg:w="6"/><text x="1.2592%" y="1279.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="1.0092%" y="1253" width="0.5505%" height="15" fill="rgb(239,76,54)" fg:x="11" fg:w="6"/><text x="1.2592%" y="1263.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="1.0092%" y="1237" width="0.5505%" height="15" fill="rgb(231,124,27)" fg:x="11" fg:w="6"/><text x="1.2592%" y="1247.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (6 samples, 0.55%)</title><rect x="1.0092%" y="1221" width="0.5505%" height="15" fill="rgb(249,195,6)" fg:x="11" fg:w="6"/><text x="1.2592%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="1.0092%" y="1205" width="0.5505%" height="15" fill="rgb(237,174,47)" fg:x="11" fg:w="6"/><text x="1.2592%" y="1215.50"></text></g><g><title>sqlx_core::query::Map&lt;DB,F,A&gt;::fetch_optional::{{closure}} (6 samples, 0.55%)</title><rect x="1.0092%" y="1189" width="0.5505%" height="15" fill="rgb(206,201,31)" fg:x="11" fg:w="6"/><text x="1.2592%" y="1199.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="1.0092%" y="1173" width="0.5505%" height="15" fill="rgb(231,57,52)" fg:x="11" fg:w="6"/><text x="1.2592%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="1.0092%" y="1157" width="0.5505%" height="15" fill="rgb(248,177,22)" fg:x="11" fg:w="6"/><text x="1.2592%" y="1167.50"></text></g><g><title>sqlx_core::pool::executor::&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_optional::{{closure}} (6 samples, 0.55%)</title><rect x="1.0092%" y="1141" width="0.5505%" height="15" fill="rgb(215,211,37)" fg:x="11" fg:w="6"/><text x="1.2592%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_core::postgres::database::Postgres&gt;&gt; (2 samples, 0.18%)</title><rect x="1.3761%" y="1125" width="0.1835%" height="15" fill="rgb(241,128,51)" fg:x="15" fg:w="2"/><text x="1.6261%" y="1135.50"></text></g><g><title>&lt;sqlx_core::pool::connection::PoolConnection&lt;DB&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.18%)</title><rect x="1.3761%" y="1109" width="0.1835%" height="15" fill="rgb(227,165,31)" fg:x="15" fg:w="2"/><text x="1.6261%" y="1119.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn (2 samples, 0.18%)</title><rect x="1.3761%" y="1093" width="0.1835%" height="15" fill="rgb(228,167,24)" fg:x="15" fg:w="2"/><text x="1.6261%" y="1103.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (2 samples, 0.18%)</title><rect x="1.3761%" y="1077" width="0.1835%" height="15" fill="rgb(228,143,12)" fg:x="15" fg:w="2"/><text x="1.6261%" y="1087.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (2 samples, 0.18%)</title><rect x="1.3761%" y="1061" width="0.1835%" height="15" fill="rgb(249,149,8)" fg:x="15" fg:w="2"/><text x="1.6261%" y="1071.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::bind_new_task (2 samples, 0.18%)</title><rect x="1.3761%" y="1045" width="0.1835%" height="15" fill="rgb(243,35,44)" fg:x="15" fg:w="2"/><text x="1.6261%" y="1055.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (1 samples, 0.09%)</title><rect x="1.4679%" y="1029" width="0.0917%" height="15" fill="rgb(246,89,9)" fg:x="16" fg:w="1"/><text x="1.7179%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="1.5596%" y="1365" width="0.0917%" height="15" fill="rgb(233,213,13)" fg:x="17" fg:w="1"/><text x="1.8096%" y="1375.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::connection_for::{{closure}} (1 samples, 0.09%)</title><rect x="1.5596%" y="1349" width="0.0917%" height="15" fill="rgb(233,141,41)" fg:x="17" fg:w="1"/><text x="1.8096%" y="1359.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::connect_to (1 samples, 0.09%)</title><rect x="1.5596%" y="1333" width="0.0917%" height="15" fill="rgb(239,167,4)" fg:x="17" fg:w="1"/><text x="1.8096%" y="1343.50"></text></g><g><title>hyper::client::client::domain_as_uri (1 samples, 0.09%)</title><rect x="1.5596%" y="1317" width="0.0917%" height="15" fill="rgb(209,217,16)" fg:x="17" fg:w="1"/><text x="1.8096%" y="1327.50"></text></g><g><title>http::uri::builder::Builder::path_and_query (1 samples, 0.09%)</title><rect x="1.5596%" y="1301" width="0.0917%" height="15" fill="rgb(219,88,35)" fg:x="17" fg:w="1"/><text x="1.8096%" y="1311.50"></text></g><g><title>http::uri::builder::Builder::map (1 samples, 0.09%)</title><rect x="1.5596%" y="1285" width="0.0917%" height="15" fill="rgb(220,193,23)" fg:x="17" fg:w="1"/><text x="1.8096%" y="1295.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.09%)</title><rect x="1.5596%" y="1269" width="0.0917%" height="15" fill="rgb(230,90,52)" fg:x="17" fg:w="1"/><text x="1.8096%" y="1279.50"></text></g><g><title>http::uri::builder::Builder::path_and_query::{{closure}} (1 samples, 0.09%)</title><rect x="1.5596%" y="1253" width="0.0917%" height="15" fill="rgb(252,106,19)" fg:x="17" fg:w="1"/><text x="1.8096%" y="1263.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.09%)</title><rect x="1.5596%" y="1237" width="0.0917%" height="15" fill="rgb(206,74,20)" fg:x="17" fg:w="1"/><text x="1.8096%" y="1247.50"></text></g><g><title>&lt;http::uri::path::PathAndQuery as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (1 samples, 0.09%)</title><rect x="1.5596%" y="1221" width="0.0917%" height="15" fill="rgb(230,138,44)" fg:x="17" fg:w="1"/><text x="1.8096%" y="1231.50"></text></g><g><title>&lt;http::uri::path::PathAndQuery as core::convert::TryFrom&lt;&amp;[u8]&gt;&gt;::try_from (1 samples, 0.09%)</title><rect x="1.5596%" y="1205" width="0.0917%" height="15" fill="rgb(235,182,43)" fg:x="17" fg:w="1"/><text x="1.8096%" y="1215.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (1 samples, 0.09%)</title><rect x="1.5596%" y="1189" width="0.0917%" height="15" fill="rgb(242,16,51)" fg:x="17" fg:w="1"/><text x="1.8096%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.09%)</title><rect x="1.5596%" y="1173" width="0.0917%" height="15" fill="rgb(248,9,4)" fg:x="17" fg:w="1"/><text x="1.8096%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.09%)</title><rect x="1.5596%" y="1157" width="0.0917%" height="15" fill="rgb(210,31,22)" fg:x="17" fg:w="1"/><text x="1.8096%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.09%)</title><rect x="1.5596%" y="1141" width="0.0917%" height="15" fill="rgb(239,54,39)" fg:x="17" fg:w="1"/><text x="1.8096%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.09%)</title><rect x="1.5596%" y="1125" width="0.0917%" height="15" fill="rgb(230,99,41)" fg:x="17" fg:w="1"/><text x="1.8096%" y="1135.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.09%)</title><rect x="1.5596%" y="1109" width="0.0917%" height="15" fill="rgb(253,106,12)" fg:x="17" fg:w="1"/><text x="1.8096%" y="1119.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.09%)</title><rect x="1.5596%" y="1093" width="0.0917%" height="15" fill="rgb(213,46,41)" fg:x="17" fg:w="1"/><text x="1.8096%" y="1103.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="1.5596%" y="1077" width="0.0917%" height="15" fill="rgb(215,133,35)" fg:x="17" fg:w="1"/><text x="1.8096%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.09%)</title><rect x="1.6514%" y="1205" width="0.0917%" height="15" fill="rgb(213,28,5)" fg:x="18" fg:w="1"/><text x="1.9014%" y="1215.50"></text></g><g><title>http::extensions::Extensions::insert::{{closure}} (1 samples, 0.09%)</title><rect x="1.6514%" y="1189" width="0.0917%" height="15" fill="rgb(215,77,49)" fg:x="18" fg:w="1"/><text x="1.9014%" y="1199.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="1.6514%" y="1173" width="0.0917%" height="15" fill="rgb(248,100,22)" fg:x="18" fg:w="1"/><text x="1.9014%" y="1183.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.09%)</title><rect x="1.6514%" y="1157" width="0.0917%" height="15" fill="rgb(208,67,9)" fg:x="18" fg:w="1"/><text x="1.9014%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="1.6514%" y="1141" width="0.0917%" height="15" fill="rgb(219,133,21)" fg:x="18" fg:w="1"/><text x="1.9014%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="1.6514%" y="1125" width="0.0917%" height="15" fill="rgb(246,46,29)" fg:x="18" fg:w="1"/><text x="1.9014%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="1.6514%" y="1109" width="0.0917%" height="15" fill="rgb(246,185,52)" fg:x="18" fg:w="1"/><text x="1.9014%" y="1119.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="1.6514%" y="1093" width="0.0917%" height="15" fill="rgb(252,136,11)" fg:x="18" fg:w="1"/><text x="1.9014%" y="1103.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="1.6514%" y="1365" width="0.2752%" height="15" fill="rgb(219,138,53)" fg:x="18" fg:w="3"/><text x="1.9014%" y="1375.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="1.6514%" y="1349" width="0.2752%" height="15" fill="rgb(211,51,23)" fg:x="18" fg:w="3"/><text x="1.9014%" y="1359.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="1.6514%" y="1333" width="0.2752%" height="15" fill="rgb(247,221,28)" fg:x="18" fg:w="3"/><text x="1.9014%" y="1343.50"></text></g><g><title>&lt;futures_util::fns::MapOkFn&lt;F&gt; as futures_util::fns::FnOnce1&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::call_once (3 samples, 0.28%)</title><rect x="1.6514%" y="1317" width="0.2752%" height="15" fill="rgb(251,222,45)" fg:x="18" fg:w="3"/><text x="1.9014%" y="1327.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (3 samples, 0.28%)</title><rect x="1.6514%" y="1301" width="0.2752%" height="15" fill="rgb(217,162,53)" fg:x="18" fg:w="3"/><text x="1.9014%" y="1311.50"></text></g><g><title>&lt;futures_util::fns::MapOkFn&lt;F&gt; as futures_util::fns::FnOnce1&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::call_once::{{closure}} (3 samples, 0.28%)</title><rect x="1.6514%" y="1285" width="0.2752%" height="15" fill="rgb(229,93,14)" fg:x="18" fg:w="3"/><text x="1.9014%" y="1295.50"></text></g><g><title>&lt;T as futures_util::fns::FnOnce1&lt;A&gt;&gt;::call_once (3 samples, 0.28%)</title><rect x="1.6514%" y="1269" width="0.2752%" height="15" fill="rgb(209,67,49)" fg:x="18" fg:w="3"/><text x="1.9014%" y="1279.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::send_request::{{closure}}::{{closure}} (3 samples, 0.28%)</title><rect x="1.6514%" y="1253" width="0.2752%" height="15" fill="rgb(213,87,29)" fg:x="18" fg:w="3"/><text x="1.9014%" y="1263.50"></text></g><g><title>&lt;hyper::client::connect::ExtraEnvelope&lt;T&gt; as hyper::client::connect::ExtraInner&gt;::set (3 samples, 0.28%)</title><rect x="1.6514%" y="1237" width="0.2752%" height="15" fill="rgb(205,151,52)" fg:x="18" fg:w="3"/><text x="1.9014%" y="1247.50"></text></g><g><title>http::extensions::Extensions::insert (3 samples, 0.28%)</title><rect x="1.6514%" y="1221" width="0.2752%" height="15" fill="rgb(253,215,39)" fg:x="18" fg:w="3"/><text x="1.9014%" y="1231.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2 samples, 0.18%)</title><rect x="1.7431%" y="1205" width="0.1835%" height="15" fill="rgb(221,220,41)" fg:x="19" fg:w="2"/><text x="1.9931%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.18%)</title><rect x="1.7431%" y="1189" width="0.1835%" height="15" fill="rgb(218,133,21)" fg:x="19" fg:w="2"/><text x="1.9931%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.18%)</title><rect x="1.7431%" y="1173" width="0.1835%" height="15" fill="rgb(221,193,43)" fg:x="19" fg:w="2"/><text x="1.9931%" y="1183.50"></text></g><g><title>backend::get_stops::{{closure}} (5 samples, 0.46%)</title><rect x="1.5596%" y="1493" width="0.4587%" height="15" fill="rgb(240,128,52)" fg:x="17" fg:w="5"/><text x="1.8096%" y="1503.50"></text></g><g><title>&lt;reqwest::async_impl::client::Pending as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="1.5596%" y="1477" width="0.4587%" height="15" fill="rgb(253,114,12)" fg:x="17" fg:w="5"/><text x="1.8096%" y="1487.50"></text></g><g><title>&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="1.5596%" y="1461" width="0.4587%" height="15" fill="rgb(215,223,47)" fg:x="17" fg:w="5"/><text x="1.8096%" y="1471.50"></text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="1.5596%" y="1445" width="0.4587%" height="15" fill="rgb(248,225,23)" fg:x="17" fg:w="5"/><text x="1.8096%" y="1455.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="1.5596%" y="1429" width="0.4587%" height="15" fill="rgb(250,108,0)" fg:x="17" fg:w="5"/><text x="1.8096%" y="1439.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::{{closure}} (5 samples, 0.46%)</title><rect x="1.5596%" y="1413" width="0.4587%" height="15" fill="rgb(228,208,7)" fg:x="17" fg:w="5"/><text x="1.8096%" y="1423.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="1.5596%" y="1397" width="0.4587%" height="15" fill="rgb(244,45,10)" fg:x="17" fg:w="5"/><text x="1.8096%" y="1407.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::send_request::{{closure}} (5 samples, 0.46%)</title><rect x="1.5596%" y="1381" width="0.4587%" height="15" fill="rgb(207,125,25)" fg:x="17" fg:w="5"/><text x="1.8096%" y="1391.50"></text></g><g><title>core::mem::drop (1 samples, 0.09%)</title><rect x="1.9266%" y="1365" width="0.0917%" height="15" fill="rgb(210,195,18)" fg:x="21" fg:w="1"/><text x="2.1766%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="1.9266%" y="1349" width="0.0917%" height="15" fill="rgb(249,80,12)" fg:x="21" fg:w="1"/><text x="2.1766%" y="1359.50"></text></g><g><title>&lt;hyper::client::pool::Pooled&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="1.9266%" y="1333" width="0.0917%" height="15" fill="rgb(221,65,9)" fg:x="21" fg:w="1"/><text x="2.1766%" y="1343.50"></text></g><g><title>hyper::client::pool::PoolInner&lt;T&gt;::put (1 samples, 0.09%)</title><rect x="1.9266%" y="1317" width="0.0917%" height="15" fill="rgb(235,49,36)" fg:x="21" fg:w="1"/><text x="2.1766%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.09%)</title><rect x="1.9266%" y="1301" width="0.0917%" height="15" fill="rgb(225,32,20)" fg:x="21" fg:w="1"/><text x="2.1766%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.09%)</title><rect x="1.9266%" y="1285" width="0.0917%" height="15" fill="rgb(215,141,46)" fg:x="21" fg:w="1"/><text x="2.1766%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.09%)</title><rect x="1.9266%" y="1269" width="0.0917%" height="15" fill="rgb(250,160,47)" fg:x="21" fg:w="1"/><text x="2.1766%" y="1279.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="1.9266%" y="1253" width="0.0917%" height="15" fill="rgb(216,222,40)" fg:x="21" fg:w="1"/><text x="2.1766%" y="1263.50"></text></g><g><title>__rdl_alloc (1 samples, 0.09%)</title><rect x="1.9266%" y="1237" width="0.0917%" height="15" fill="rgb(234,217,39)" fg:x="21" fg:w="1"/><text x="2.1766%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="2.1101%" y="1429" width="0.0917%" height="15" fill="rgb(207,178,40)" fg:x="23" fg:w="1"/><text x="2.3601%" y="1439.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="3.1193%" y="981" width="0.0917%" height="15" fill="rgb(221,136,13)" fg:x="34" fg:w="1"/><text x="3.3693%" y="991.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}} (1 samples, 0.09%)</title><rect x="3.1193%" y="965" width="0.0917%" height="15" fill="rgb(249,199,10)" fg:x="34" fg:w="1"/><text x="3.3693%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="3.1193%" y="949" width="0.0917%" height="15" fill="rgb(249,222,13)" fg:x="34" fg:w="1"/><text x="3.3693%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="3.1193%" y="933" width="0.0917%" height="15" fill="rgb(244,185,38)" fg:x="34" fg:w="1"/><text x="3.3693%" y="943.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="3.5780%" y="549" width="0.0917%" height="15" fill="rgb(236,202,9)" fg:x="39" fg:w="1"/><text x="3.8280%" y="559.50"></text></g><g><title>&lt;sqlx_core::net::tls::MaybeTlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="3.5780%" y="533" width="0.0917%" height="15" fill="rgb(250,229,37)" fg:x="39" fg:w="1"/><text x="3.8280%" y="543.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="3.5780%" y="517" width="0.0917%" height="15" fill="rgb(206,174,23)" fg:x="39" fg:w="1"/><text x="3.8280%" y="527.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (1 samples, 0.09%)</title><rect x="3.5780%" y="501" width="0.0917%" height="15" fill="rgb(211,33,43)" fg:x="39" fg:w="1"/><text x="3.8280%" y="511.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 0.09%)</title><rect x="3.5780%" y="485" width="0.0917%" height="15" fill="rgb(245,58,50)" fg:x="39" fg:w="1"/><text x="3.8280%" y="495.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_read_io (1 samples, 0.09%)</title><rect x="3.5780%" y="469" width="0.0917%" height="15" fill="rgb(244,68,36)" fg:x="39" fg:w="1"/><text x="3.8280%" y="479.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (1 samples, 0.09%)</title><rect x="3.5780%" y="453" width="0.0917%" height="15" fill="rgb(232,229,15)" fg:x="39" fg:w="1"/><text x="3.8280%" y="463.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read::{{closure}} (1 samples, 0.09%)</title><rect x="3.5780%" y="437" width="0.0917%" height="15" fill="rgb(254,30,23)" fg:x="39" fg:w="1"/><text x="3.8280%" y="447.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.09%)</title><rect x="3.5780%" y="421" width="0.0917%" height="15" fill="rgb(235,160,14)" fg:x="39" fg:w="1"/><text x="3.8280%" y="431.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.09%)</title><rect x="3.5780%" y="405" width="0.0917%" height="15" fill="rgb(212,155,44)" fg:x="39" fg:w="1"/><text x="3.8280%" y="415.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (1 samples, 0.09%)</title><rect x="3.5780%" y="389" width="0.0917%" height="15" fill="rgb(226,2,50)" fg:x="39" fg:w="1"/><text x="3.8280%" y="399.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (1 samples, 0.09%)</title><rect x="3.5780%" y="373" width="0.0917%" height="15" fill="rgb(234,177,6)" fg:x="39" fg:w="1"/><text x="3.8280%" y="383.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.09%)</title><rect x="3.5780%" y="357" width="0.0917%" height="15" fill="rgb(217,24,9)" fg:x="39" fg:w="1"/><text x="3.8280%" y="367.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.09%)</title><rect x="3.5780%" y="341" width="0.0917%" height="15" fill="rgb(220,13,46)" fg:x="39" fg:w="1"/><text x="3.8280%" y="351.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.09%)</title><rect x="3.5780%" y="325" width="0.0917%" height="15" fill="rgb(239,221,27)" fg:x="39" fg:w="1"/><text x="3.8280%" y="335.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.09%)</title><rect x="3.5780%" y="309" width="0.0917%" height="15" fill="rgb(222,198,25)" fg:x="39" fg:w="1"/><text x="3.8280%" y="319.50"></text></g><g><title>__libc_recv (1 samples, 0.09%)</title><rect x="3.5780%" y="293" width="0.0917%" height="15" fill="rgb(211,99,13)" fg:x="39" fg:w="1"/><text x="3.8280%" y="303.50"></text></g><g><title>__GI___pthread_enable_asynccancel (1 samples, 0.09%)</title><rect x="3.5780%" y="277" width="0.0917%" height="15" fill="rgb(232,111,31)" fg:x="39" fg:w="1"/><text x="3.8280%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="3.6697%" y="549" width="0.0917%" height="15" fill="rgb(245,82,37)" fg:x="40" fg:w="1"/><text x="3.9197%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="3.6697%" y="533" width="0.0917%" height="15" fill="rgb(227,149,46)" fg:x="40" fg:w="1"/><text x="3.9197%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="3.6697%" y="517" width="0.0917%" height="15" fill="rgb(218,36,50)" fg:x="40" fg:w="1"/><text x="3.9197%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="3.6697%" y="501" width="0.0917%" height="15" fill="rgb(226,80,48)" fg:x="40" fg:w="1"/><text x="3.9197%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="3.6697%" y="485" width="0.0917%" height="15" fill="rgb(238,224,15)" fg:x="40" fg:w="1"/><text x="3.9197%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="3.6697%" y="469" width="0.0917%" height="15" fill="rgb(241,136,10)" fg:x="40" fg:w="1"/><text x="3.9197%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="3.5780%" y="597" width="0.2752%" height="15" fill="rgb(208,32,45)" fg:x="39" fg:w="3"/><text x="3.8280%" y="607.50"></text></g><g><title>sqlx_core::io::buf_stream::BufTruncator::read::{{closure}} (3 samples, 0.28%)</title><rect x="3.5780%" y="581" width="0.2752%" height="15" fill="rgb(207,135,9)" fg:x="39" fg:w="3"/><text x="3.8280%" y="591.50"></text></g><g><title>&lt;tokio::io::util::read::Read&lt;R&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="3.5780%" y="565" width="0.2752%" height="15" fill="rgb(206,86,44)" fg:x="39" fg:w="3"/><text x="3.8280%" y="575.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::new (1 samples, 0.09%)</title><rect x="3.7615%" y="549" width="0.0917%" height="15" fill="rgb(245,177,15)" fg:x="41" fg:w="1"/><text x="4.0115%" y="559.50"></text></g><g><title>tokio::io::read_buf::slice_to_uninit_mut (1 samples, 0.09%)</title><rect x="3.7615%" y="533" width="0.0917%" height="15" fill="rgb(206,64,50)" fg:x="41" fg:w="1"/><text x="4.0115%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="3.5780%" y="661" width="0.3670%" height="15" fill="rgb(234,36,40)" fg:x="39" fg:w="4"/><text x="3.8280%" y="671.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_raw::{{closure}} (4 samples, 0.37%)</title><rect x="3.5780%" y="645" width="0.3670%" height="15" fill="rgb(213,64,8)" fg:x="39" fg:w="4"/><text x="3.8280%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="3.5780%" y="629" width="0.3670%" height="15" fill="rgb(210,75,36)" fg:x="39" fg:w="4"/><text x="3.8280%" y="639.50"></text></g><g><title>sqlx_core::io::buf_stream::read_raw_into::{{closure}} (4 samples, 0.37%)</title><rect x="3.5780%" y="613" width="0.3670%" height="15" fill="rgb(229,88,21)" fg:x="39" fg:w="4"/><text x="3.8280%" y="623.50"></text></g><g><title>bytes::bytes_mut::BytesMut::resize (1 samples, 0.09%)</title><rect x="3.8532%" y="597" width="0.0917%" height="15" fill="rgb(252,204,47)" fg:x="42" fg:w="1"/><text x="4.1032%" y="607.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.09%)</title><rect x="3.8532%" y="581" width="0.0917%" height="15" fill="rgb(208,77,27)" fg:x="42" fg:w="1"/><text x="4.1032%" y="591.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.09%)</title><rect x="3.8532%" y="565" width="0.0917%" height="15" fill="rgb(221,76,26)" fg:x="42" fg:w="1"/><text x="4.1032%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="3.5780%" y="725" width="0.4587%" height="15" fill="rgb(225,139,18)" fg:x="39" fg:w="5"/><text x="3.8280%" y="735.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read::{{closure}} (5 samples, 0.46%)</title><rect x="3.5780%" y="709" width="0.4587%" height="15" fill="rgb(230,137,11)" fg:x="39" fg:w="5"/><text x="3.8280%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="3.5780%" y="693" width="0.4587%" height="15" fill="rgb(212,28,1)" fg:x="39" fg:w="5"/><text x="3.8280%" y="703.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_with::{{closure}} (5 samples, 0.46%)</title><rect x="3.5780%" y="677" width="0.4587%" height="15" fill="rgb(248,164,17)" fg:x="39" fg:w="5"/><text x="3.8280%" y="687.50"></text></g><g><title>bytes::bytes_mut::BytesMut::freeze (1 samples, 0.09%)</title><rect x="3.9450%" y="661" width="0.0917%" height="15" fill="rgb(222,171,42)" fg:x="43" fg:w="1"/><text x="4.1950%" y="671.50"></text></g><g><title>bytes::bytes::Bytes::with_vtable (1 samples, 0.09%)</title><rect x="3.9450%" y="645" width="0.0917%" height="15" fill="rgb(243,84,45)" fg:x="43" fg:w="1"/><text x="4.1950%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="3.5780%" y="789" width="0.5505%" height="15" fill="rgb(252,49,23)" fg:x="39" fg:w="6"/><text x="3.8280%" y="799.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv::{{closure}} (6 samples, 0.55%)</title><rect x="3.5780%" y="773" width="0.5505%" height="15" fill="rgb(215,19,7)" fg:x="39" fg:w="6"/><text x="3.8280%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="3.5780%" y="757" width="0.5505%" height="15" fill="rgb(238,81,41)" fg:x="39" fg:w="6"/><text x="3.8280%" y="767.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv_unchecked::{{closure}} (6 samples, 0.55%)</title><rect x="3.5780%" y="741" width="0.5505%" height="15" fill="rgb(210,199,37)" fg:x="39" fg:w="6"/><text x="3.8280%" y="751.50"></text></g><g><title>sqlx_core::postgres::message::MessageFormat::try_from_u8 (1 samples, 0.09%)</title><rect x="4.0367%" y="725" width="0.0917%" height="15" fill="rgb(244,192,49)" fg:x="44" fg:w="1"/><text x="4.2867%" y="735.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="3.2110%" y="901" width="1.0092%" height="15" fill="rgb(226,211,11)" fg:x="35" fg:w="11"/><text x="3.4610%" y="911.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="3.2110%" y="885" width="1.0092%" height="15" fill="rgb(236,162,54)" fg:x="35" fg:w="11"/><text x="3.4610%" y="895.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="3.2110%" y="869" width="1.0092%" height="15" fill="rgb(220,229,9)" fg:x="35" fg:w="11"/><text x="3.4610%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.73%)</title><rect x="3.4862%" y="853" width="0.7339%" height="15" fill="rgb(250,87,22)" fg:x="38" fg:w="8"/><text x="3.7362%" y="863.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (8 samples, 0.73%)</title><rect x="3.4862%" y="837" width="0.7339%" height="15" fill="rgb(239,43,17)" fg:x="38" fg:w="8"/><text x="3.7362%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.64%)</title><rect x="3.5780%" y="821" width="0.6422%" height="15" fill="rgb(231,177,25)" fg:x="39" fg:w="7"/><text x="3.8280%" y="831.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}}::{{closure}} (7 samples, 0.64%)</title><rect x="3.5780%" y="805" width="0.6422%" height="15" fill="rgb(219,179,1)" fg:x="39" fg:w="7"/><text x="3.8280%" y="815.50"></text></g><g><title>&lt;futures_util::sink::send::Send&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="4.1284%" y="789" width="0.0917%" height="15" fill="rgb(238,219,53)" fg:x="45" fg:w="1"/><text x="4.3784%" y="799.50"></text></g><g><title>&lt;futures_util::sink::feed::Feed&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="4.1284%" y="773" width="0.0917%" height="15" fill="rgb(232,167,36)" fg:x="45" fg:w="1"/><text x="4.3784%" y="783.50"></text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::start_send (1 samples, 0.09%)</title><rect x="4.1284%" y="757" width="0.0917%" height="15" fill="rgb(244,19,51)" fg:x="45" fg:w="1"/><text x="4.3784%" y="767.50"></text></g><g><title>futures_channel::mpsc::sink_impl::&lt;impl futures_sink::Sink&lt;T&gt; for futures_channel::mpsc::Sender&lt;T&gt;&gt;::start_send (1 samples, 0.09%)</title><rect x="4.1284%" y="741" width="0.0917%" height="15" fill="rgb(224,6,22)" fg:x="45" fg:w="1"/><text x="4.3784%" y="751.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::start_send (1 samples, 0.09%)</title><rect x="4.1284%" y="725" width="0.0917%" height="15" fill="rgb(224,145,5)" fg:x="45" fg:w="1"/><text x="4.3784%" y="735.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (1 samples, 0.09%)</title><rect x="4.1284%" y="709" width="0.0917%" height="15" fill="rgb(234,130,49)" fg:x="45" fg:w="1"/><text x="4.3784%" y="719.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::try_send (1 samples, 0.09%)</title><rect x="4.1284%" y="693" width="0.0917%" height="15" fill="rgb(254,6,2)" fg:x="45" fg:w="1"/><text x="4.3784%" y="703.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (12 samples, 1.10%)</title><rect x="3.2110%" y="981" width="1.1009%" height="15" fill="rgb(208,96,46)" fg:x="35" fg:w="12"/><text x="3.4610%" y="991.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (12 samples, 1.10%)</title><rect x="3.2110%" y="965" width="1.1009%" height="15" fill="rgb(239,3,39)" fg:x="35" fg:w="12"/><text x="3.4610%" y="975.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (12 samples, 1.10%)</title><rect x="3.2110%" y="949" width="1.1009%" height="15" fill="rgb(233,210,1)" fg:x="35" fg:w="12"/><text x="3.4610%" y="959.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 1.10%)</title><rect x="3.2110%" y="933" width="1.1009%" height="15" fill="rgb(244,137,37)" fg:x="35" fg:w="12"/><text x="3.4610%" y="943.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 1.10%)</title><rect x="3.2110%" y="917" width="1.1009%" height="15" fill="rgb(240,136,2)" fg:x="35" fg:w="12"/><text x="3.4610%" y="927.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="4.2202%" y="901" width="0.0917%" height="15" fill="rgb(239,18,37)" fg:x="46" fg:w="1"/><text x="4.4702%" y="911.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="4.2202%" y="885" width="0.0917%" height="15" fill="rgb(218,185,22)" fg:x="46" fg:w="1"/><text x="4.4702%" y="895.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (1 samples, 0.09%)</title><rect x="4.2202%" y="869" width="0.0917%" height="15" fill="rgb(225,218,4)" fg:x="46" fg:w="1"/><text x="4.4702%" y="879.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (14 samples, 1.28%)</title><rect x="3.1193%" y="1029" width="1.2844%" height="15" fill="rgb(230,182,32)" fg:x="34" fg:w="14"/><text x="3.3693%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 1.28%)</title><rect x="3.1193%" y="1013" width="1.2844%" height="15" fill="rgb(242,56,43)" fg:x="34" fg:w="14"/><text x="3.3693%" y="1023.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_core::postgres::connection::PgConnection&gt;::fetch_optional::{{closure}} (14 samples, 1.28%)</title><rect x="3.1193%" y="997" width="1.2844%" height="15" fill="rgb(233,99,24)" fg:x="34" fg:w="14"/><text x="3.3693%" y="1007.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run (1 samples, 0.09%)</title><rect x="4.3119%" y="981" width="0.0917%" height="15" fill="rgb(234,209,42)" fg:x="47" fg:w="1"/><text x="4.5619%" y="991.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.09%)</title><rect x="4.4037%" y="1029" width="0.0917%" height="15" fill="rgb(227,7,12)" fg:x="48" fg:w="1"/><text x="4.6537%" y="1039.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (16 samples, 1.47%)</title><rect x="3.1193%" y="1077" width="1.4679%" height="15" fill="rgb(245,203,43)" fg:x="34" fg:w="16"/><text x="3.3693%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 1.47%)</title><rect x="3.1193%" y="1061" width="1.4679%" height="15" fill="rgb(238,205,33)" fg:x="34" fg:w="16"/><text x="3.3693%" y="1071.50"></text></g><g><title>sqlx_core::pool::executor::&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_optional::{{closure}} (16 samples, 1.47%)</title><rect x="3.1193%" y="1045" width="1.4679%" height="15" fill="rgb(231,56,7)" fg:x="34" fg:w="16"/><text x="3.3693%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;core::option::Option&lt;sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="4.4954%" y="1029" width="0.0917%" height="15" fill="rgb(244,186,29)" fg:x="49" fg:w="1"/><text x="4.7454%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;core::option::Option&lt;sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (1 samples, 0.09%)</title><rect x="4.4954%" y="1013" width="0.0917%" height="15" fill="rgb(234,111,31)" fg:x="49" fg:w="1"/><text x="4.7454%" y="1023.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.09%)</title><rect x="4.4954%" y="997" width="0.0917%" height="15" fill="rgb(241,149,10)" fg:x="49" fg:w="1"/><text x="4.7454%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="4.4954%" y="981" width="0.0917%" height="15" fill="rgb(249,206,44)" fg:x="49" fg:w="1"/><text x="4.7454%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="4.4954%" y="965" width="0.0917%" height="15" fill="rgb(251,153,30)" fg:x="49" fg:w="1"/><text x="4.7454%" y="975.50"></text></g><g><title>__free (1 samples, 0.09%)</title><rect x="4.4954%" y="949" width="0.0917%" height="15" fill="rgb(239,152,38)" fg:x="49" fg:w="1"/><text x="4.7454%" y="959.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="4.4954%" y="933" width="0.0917%" height="15" fill="rgb(249,139,47)" fg:x="49" fg:w="1"/><text x="4.7454%" y="943.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (18 samples, 1.65%)</title><rect x="3.0275%" y="1141" width="1.6514%" height="15" fill="rgb(244,64,35)" fg:x="33" fg:w="18"/><text x="3.2775%" y="1151.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (18 samples, 1.65%)</title><rect x="3.0275%" y="1125" width="1.6514%" height="15" fill="rgb(216,46,15)" fg:x="33" fg:w="18"/><text x="3.2775%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 1.65%)</title><rect x="3.0275%" y="1109" width="1.6514%" height="15" fill="rgb(250,74,19)" fg:x="33" fg:w="18"/><text x="3.2775%" y="1119.50"></text></g><g><title>sqlx_core::query::Map&lt;DB,F,A&gt;::fetch_optional::{{closure}} (18 samples, 1.65%)</title><rect x="3.0275%" y="1093" width="1.6514%" height="15" fill="rgb(249,42,33)" fg:x="33" fg:w="18"/><text x="3.2775%" y="1103.50"></text></g><g><title>backend::get_capacity::{{closure}}::{{closure}} (1 samples, 0.09%)</title><rect x="4.5872%" y="1077" width="0.0917%" height="15" fill="rgb(242,149,17)" fg:x="50" fg:w="1"/><text x="4.8372%" y="1087.50"></text></g><g><title>sqlx_core::row::Row::try_get_unchecked (1 samples, 0.09%)</title><rect x="4.5872%" y="1061" width="0.0917%" height="15" fill="rgb(244,29,21)" fg:x="50" fg:w="1"/><text x="4.8372%" y="1071.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as sqlx_core::decode::Decode&lt;DB&gt;&gt;::decode (1 samples, 0.09%)</title><rect x="4.5872%" y="1045" width="0.0917%" height="15" fill="rgb(220,130,37)" fg:x="50" fg:w="1"/><text x="4.8372%" y="1055.50"></text></g><g><title>sqlx_core::postgres::types::int::&lt;impl sqlx_core::decode::Decode&lt;sqlx_core::postgres::database::Postgres&gt; for i32&gt;::decode (1 samples, 0.09%)</title><rect x="4.5872%" y="1029" width="0.0917%" height="15" fill="rgb(211,67,2)" fg:x="50" fg:w="1"/><text x="4.8372%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 1.83%)</title><rect x="2.9358%" y="1285" width="1.8349%" height="15" fill="rgb(235,68,52)" fg:x="32" fg:w="20"/><text x="3.1858%" y="1295.50">&lt;..</text></g><g><title>sqlx_core::query::Map&lt;DB,F,A&gt;::fetch_one::{{closure}} (20 samples, 1.83%)</title><rect x="2.9358%" y="1269" width="1.8349%" height="15" fill="rgb(246,142,3)" fg:x="32" fg:w="20"/><text x="3.1858%" y="1279.50">s..</text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (20 samples, 1.83%)</title><rect x="2.9358%" y="1253" width="1.8349%" height="15" fill="rgb(241,25,7)" fg:x="32" fg:w="20"/><text x="3.1858%" y="1263.50">&lt;..</text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (19 samples, 1.74%)</title><rect x="3.0275%" y="1237" width="1.7431%" height="15" fill="rgb(242,119,39)" fg:x="33" fg:w="19"/><text x="3.2775%" y="1247.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (19 samples, 1.74%)</title><rect x="3.0275%" y="1221" width="1.7431%" height="15" fill="rgb(241,98,45)" fg:x="33" fg:w="19"/><text x="3.2775%" y="1231.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (19 samples, 1.74%)</title><rect x="3.0275%" y="1205" width="1.7431%" height="15" fill="rgb(254,28,30)" fg:x="33" fg:w="19"/><text x="3.2775%" y="1215.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (19 samples, 1.74%)</title><rect x="3.0275%" y="1189" width="1.7431%" height="15" fill="rgb(241,142,54)" fg:x="33" fg:w="19"/><text x="3.2775%" y="1199.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (19 samples, 1.74%)</title><rect x="3.0275%" y="1173" width="1.7431%" height="15" fill="rgb(222,85,15)" fg:x="33" fg:w="19"/><text x="3.2775%" y="1183.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (19 samples, 1.74%)</title><rect x="3.0275%" y="1157" width="1.7431%" height="15" fill="rgb(210,85,47)" fg:x="33" fg:w="19"/><text x="3.2775%" y="1167.50"></text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project (1 samples, 0.09%)</title><rect x="4.6789%" y="1141" width="0.0917%" height="15" fill="rgb(224,206,25)" fg:x="51" fg:w="1"/><text x="4.9289%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 0.09%)</title><rect x="4.7706%" y="1253" width="0.0917%" height="15" fill="rgb(243,201,19)" fg:x="52" fg:w="1"/><text x="5.0206%" y="1263.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.09%)</title><rect x="4.7706%" y="1237" width="0.0917%" height="15" fill="rgb(236,59,4)" fg:x="52" fg:w="1"/><text x="5.0206%" y="1247.50"></text></g><g><title>&lt;&amp;T as sqlx_core::types::Type&lt;DB&gt;&gt;::type_info (1 samples, 0.09%)</title><rect x="4.7706%" y="1221" width="0.0917%" height="15" fill="rgb(254,179,45)" fg:x="52" fg:w="1"/><text x="5.0206%" y="1231.50"></text></g><g><title>sqlx_core::postgres::types::chrono::date::&lt;impl sqlx_core::types::Type&lt;sqlx_core::postgres::database::Postgres&gt; for chrono::naive::date::NaiveDate&gt;::type_info (1 samples, 0.09%)</title><rect x="4.7706%" y="1205" width="0.0917%" height="15" fill="rgb(226,14,10)" fg:x="52" fg:w="1"/><text x="5.0206%" y="1215.50"></text></g><g><title>backend::get_capacity::{{closure}} (23 samples, 2.11%)</title><rect x="2.8440%" y="1301" width="2.1101%" height="15" fill="rgb(244,27,41)" fg:x="31" fg:w="23"/><text x="3.0940%" y="1311.50">b..</text></g><g><title>&lt;sqlx_core::postgres::arguments::PgArguments as sqlx_core::arguments::Arguments&gt;::add (2 samples, 0.18%)</title><rect x="4.7706%" y="1285" width="0.1835%" height="15" fill="rgb(235,35,32)" fg:x="52" fg:w="2"/><text x="5.0206%" y="1295.50"></text></g><g><title>sqlx_core::postgres::arguments::PgArguments::add (2 samples, 0.18%)</title><rect x="4.7706%" y="1269" width="0.1835%" height="15" fill="rgb(218,68,31)" fg:x="52" fg:w="2"/><text x="5.0206%" y="1279.50"></text></g><g><title>sqlx_core::postgres::arguments::PgArgumentBuffer::encode (1 samples, 0.09%)</title><rect x="4.8624%" y="1253" width="0.0917%" height="15" fill="rgb(207,120,37)" fg:x="53" fg:w="1"/><text x="5.1124%" y="1263.50"></text></g><g><title>&lt;&amp;T as sqlx_core::encode::Encode&lt;DB&gt;&gt;::encode (1 samples, 0.09%)</title><rect x="4.8624%" y="1237" width="0.0917%" height="15" fill="rgb(227,98,0)" fg:x="53" fg:w="1"/><text x="5.1124%" y="1247.50"></text></g><g><title>sqlx_core::postgres::types::chrono::date::&lt;impl sqlx_core::encode::Encode&lt;sqlx_core::postgres::database::Postgres&gt; for chrono::naive::date::NaiveDate&gt;::encode_by_ref (1 samples, 0.09%)</title><rect x="4.8624%" y="1221" width="0.0917%" height="15" fill="rgb(207,7,3)" fg:x="53" fg:w="1"/><text x="5.1124%" y="1231.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_ymd (1 samples, 0.09%)</title><rect x="4.8624%" y="1205" width="0.0917%" height="15" fill="rgb(206,98,19)" fg:x="53" fg:w="1"/><text x="5.1124%" y="1215.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_ymd_opt (1 samples, 0.09%)</title><rect x="4.8624%" y="1189" width="0.0917%" height="15" fill="rgb(217,5,26)" fg:x="53" fg:w="1"/><text x="5.1124%" y="1199.50"></text></g><g><title>chrono::naive::internals::YearFlags::from_year (1 samples, 0.09%)</title><rect x="4.8624%" y="1173" width="0.0917%" height="15" fill="rgb(235,190,38)" fg:x="53" fg:w="1"/><text x="5.1124%" y="1183.50"></text></g><g><title>num_integer::mod_floor (1 samples, 0.09%)</title><rect x="4.8624%" y="1157" width="0.0917%" height="15" fill="rgb(247,86,24)" fg:x="53" fg:w="1"/><text x="5.1124%" y="1167.50"></text></g><g><title>&lt;i32 as num_integer::Integer&gt;::mod_floor (1 samples, 0.09%)</title><rect x="4.8624%" y="1141" width="0.0917%" height="15" fill="rgb(205,101,16)" fg:x="53" fg:w="1"/><text x="5.1124%" y="1151.50"></text></g><g><title>&lt;http_body::next::Data&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="4.9541%" y="1189" width="0.2752%" height="15" fill="rgb(246,168,33)" fg:x="54" fg:w="3"/><text x="5.2041%" y="1199.50"></text></g><g><title>&lt;&amp;mut T as http_body::Body&gt;::poll_data (3 samples, 0.28%)</title><rect x="4.9541%" y="1173" width="0.2752%" height="15" fill="rgb(231,114,1)" fg:x="54" fg:w="3"/><text x="5.2041%" y="1183.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as http_body::Body&gt;::poll_data (3 samples, 0.28%)</title><rect x="4.9541%" y="1157" width="0.2752%" height="15" fill="rgb(207,184,53)" fg:x="54" fg:w="3"/><text x="5.2041%" y="1167.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (3 samples, 0.28%)</title><rect x="4.9541%" y="1141" width="0.2752%" height="15" fill="rgb(224,95,51)" fg:x="54" fg:w="3"/><text x="5.2041%" y="1151.50"></text></g><g><title>&lt;reqwest::async_impl::decoder::Decoder as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.28%)</title><rect x="4.9541%" y="1125" width="0.2752%" height="15" fill="rgb(212,188,45)" fg:x="54" fg:w="3"/><text x="5.2041%" y="1135.50"></text></g><g><title>&lt;reqwest::async_impl::body::ImplStream as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.28%)</title><rect x="4.9541%" y="1109" width="0.2752%" height="15" fill="rgb(223,154,38)" fg:x="54" fg:w="3"/><text x="5.2041%" y="1119.50"></text></g><g><title>&lt;reqwest::async_impl::body::ImplStream as http_body::Body&gt;::poll_data (3 samples, 0.28%)</title><rect x="4.9541%" y="1093" width="0.2752%" height="15" fill="rgb(251,22,52)" fg:x="54" fg:w="3"/><text x="5.2041%" y="1103.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as http_body::Body&gt;::poll_data (1 samples, 0.09%)</title><rect x="5.1376%" y="1077" width="0.0917%" height="15" fill="rgb(229,209,22)" fg:x="56" fg:w="1"/><text x="5.3876%" y="1087.50"></text></g><g><title>&lt;reqwest::async_impl::body::WrapHyper as http_body::Body&gt;::poll_data (1 samples, 0.09%)</title><rect x="5.1376%" y="1061" width="0.0917%" height="15" fill="rgb(234,138,34)" fg:x="56" fg:w="1"/><text x="5.3876%" y="1071.50"></text></g><g><title>&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data (1 samples, 0.09%)</title><rect x="5.1376%" y="1045" width="0.0917%" height="15" fill="rgb(212,95,11)" fg:x="56" fg:w="1"/><text x="5.3876%" y="1055.50"></text></g><g><title>hyper::body::body::Body::poll_eof (1 samples, 0.09%)</title><rect x="5.1376%" y="1029" width="0.0917%" height="15" fill="rgb(240,179,47)" fg:x="56" fg:w="1"/><text x="5.3876%" y="1039.50"></text></g><g><title>hyper::body::body::Body::poll_inner (1 samples, 0.09%)</title><rect x="5.1376%" y="1013" width="0.0917%" height="15" fill="rgb(240,163,11)" fg:x="56" fg:w="1"/><text x="5.3876%" y="1023.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="5.1376%" y="997" width="0.0917%" height="15" fill="rgb(236,37,12)" fg:x="56" fg:w="1"/><text x="5.3876%" y="1007.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (1 samples, 0.09%)</title><rect x="5.1376%" y="981" width="0.0917%" height="15" fill="rgb(232,164,16)" fg:x="56" fg:w="1"/><text x="5.3876%" y="991.50"></text></g><g><title>futures_channel::mpsc::State::is_closed (1 samples, 0.09%)</title><rect x="5.1376%" y="965" width="0.0917%" height="15" fill="rgb(244,205,15)" fg:x="56" fg:w="1"/><text x="5.3876%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::Receiver&lt;core::result::Result&lt;bytes::bytes::Bytes,hyper::error::Error&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="5.2294%" y="1029" width="0.0917%" height="15" fill="rgb(223,117,47)" fg:x="57" fg:w="1"/><text x="5.4794%" y="1039.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="5.2294%" y="1013" width="0.0917%" height="15" fill="rgb(244,107,35)" fg:x="57" fg:w="1"/><text x="5.4794%" y="1023.50"></text></g><g><title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (1 samples, 0.09%)</title><rect x="5.3211%" y="949" width="0.0917%" height="15" fill="rgb(205,140,8)" fg:x="58" fg:w="1"/><text x="5.5711%" y="959.50"></text></g><g><title>tokio::io::driver::Handle::wakeup (1 samples, 0.09%)</title><rect x="5.3211%" y="933" width="0.0917%" height="15" fill="rgb(228,84,46)" fg:x="58" fg:w="1"/><text x="5.5711%" y="943.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (1 samples, 0.09%)</title><rect x="5.3211%" y="917" width="0.0917%" height="15" fill="rgb(254,188,9)" fg:x="58" fg:w="1"/><text x="5.5711%" y="927.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.09%)</title><rect x="5.3211%" y="901" width="0.0917%" height="15" fill="rgb(206,112,54)" fg:x="58" fg:w="1"/><text x="5.5711%" y="911.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.09%)</title><rect x="5.3211%" y="885" width="0.0917%" height="15" fill="rgb(216,84,49)" fg:x="58" fg:w="1"/><text x="5.5711%" y="895.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.09%)</title><rect x="5.3211%" y="869" width="0.0917%" height="15" fill="rgb(214,194,35)" fg:x="58" fg:w="1"/><text x="5.5711%" y="879.50"></text></g><g><title>__GI___write (1 samples, 0.09%)</title><rect x="5.3211%" y="853" width="0.0917%" height="15" fill="rgb(249,28,3)" fg:x="58" fg:w="1"/><text x="5.5711%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="4.9541%" y="1221" width="0.5505%" height="15" fill="rgb(222,56,52)" fg:x="54" fg:w="6"/><text x="5.2041%" y="1231.50"></text></g><g><title>hyper::body::to_bytes::to_bytes::{{closure}} (6 samples, 0.55%)</title><rect x="4.9541%" y="1205" width="0.5505%" height="15" fill="rgb(245,217,50)" fg:x="54" fg:w="6"/><text x="5.2041%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;reqwest::async_impl::decoder::Decoder&gt; (3 samples, 0.28%)</title><rect x="5.2294%" y="1189" width="0.2752%" height="15" fill="rgb(213,201,24)" fg:x="57" fg:w="3"/><text x="5.4794%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;reqwest::async_impl::decoder::Inner&gt; (3 samples, 0.28%)</title><rect x="5.2294%" y="1173" width="0.2752%" height="15" fill="rgb(248,116,28)" fg:x="57" fg:w="3"/><text x="5.4794%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;reqwest::async_impl::body::ImplStream&gt; (3 samples, 0.28%)</title><rect x="5.2294%" y="1157" width="0.2752%" height="15" fill="rgb(219,72,43)" fg:x="57" fg:w="3"/><text x="5.4794%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;reqwest::async_impl::body::Body&gt; (3 samples, 0.28%)</title><rect x="5.2294%" y="1141" width="0.2752%" height="15" fill="rgb(209,138,14)" fg:x="57" fg:w="3"/><text x="5.4794%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;reqwest::async_impl::body::Inner&gt; (3 samples, 0.28%)</title><rect x="5.2294%" y="1125" width="0.2752%" height="15" fill="rgb(222,18,33)" fg:x="57" fg:w="3"/><text x="5.4794%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn http_body::Body+Data = bytes::bytes::Bytes+Error = alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;+core::marker::Sync+core::marker::Send&gt;&gt;&gt; (3 samples, 0.28%)</title><rect x="5.2294%" y="1109" width="0.2752%" height="15" fill="rgb(213,199,7)" fg:x="57" fg:w="3"/><text x="5.4794%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn http_body::Body+Data = bytes::bytes::Bytes+Error = alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;+core::marker::Sync+core::marker::Send&gt;&gt; (3 samples, 0.28%)</title><rect x="5.2294%" y="1093" width="0.2752%" height="15" fill="rgb(250,110,10)" fg:x="57" fg:w="3"/><text x="5.4794%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;reqwest::async_impl::body::WrapHyper&gt; (3 samples, 0.28%)</title><rect x="5.2294%" y="1077" width="0.2752%" height="15" fill="rgb(248,123,6)" fg:x="57" fg:w="3"/><text x="5.4794%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::body::body::Body&gt; (3 samples, 0.28%)</title><rect x="5.2294%" y="1061" width="0.2752%" height="15" fill="rgb(206,91,31)" fg:x="57" fg:w="3"/><text x="5.4794%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::body::body::Kind&gt; (3 samples, 0.28%)</title><rect x="5.2294%" y="1045" width="0.2752%" height="15" fill="rgb(211,154,13)" fg:x="57" fg:w="3"/><text x="5.4794%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::common::watch::Sender&gt; (2 samples, 0.18%)</title><rect x="5.3211%" y="1029" width="0.1835%" height="15" fill="rgb(225,148,7)" fg:x="58" fg:w="2"/><text x="5.5711%" y="1039.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (2 samples, 0.18%)</title><rect x="5.3211%" y="1013" width="0.1835%" height="15" fill="rgb(220,160,43)" fg:x="58" fg:w="2"/><text x="5.5711%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (2 samples, 0.18%)</title><rect x="5.3211%" y="997" width="0.1835%" height="15" fill="rgb(213,52,39)" fg:x="58" fg:w="2"/><text x="5.5711%" y="1007.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (2 samples, 0.18%)</title><rect x="5.3211%" y="981" width="0.1835%" height="15" fill="rgb(243,137,7)" fg:x="58" fg:w="2"/><text x="5.5711%" y="991.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (2 samples, 0.18%)</title><rect x="5.3211%" y="965" width="0.1835%" height="15" fill="rgb(230,79,13)" fg:x="58" fg:w="2"/><text x="5.5711%" y="975.50"></text></g><g><title>__GI___pthread_cond_signal (1 samples, 0.09%)</title><rect x="5.4128%" y="949" width="0.0917%" height="15" fill="rgb(247,105,23)" fg:x="59" fg:w="1"/><text x="5.6628%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::extensions::Extensions&gt; (1 samples, 0.09%)</title><rect x="5.5046%" y="1221" width="0.0917%" height="15" fill="rgb(223,179,41)" fg:x="60" fg:w="1"/><text x="5.7546%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="5.5046%" y="1205" width="0.0917%" height="15" fill="rgb(218,9,34)" fg:x="60" fg:w="1"/><text x="5.7546%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="5.5046%" y="1189" width="0.0917%" height="15" fill="rgb(222,106,8)" fg:x="60" fg:w="1"/><text x="5.7546%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="5.5046%" y="1173" width="0.0917%" height="15" fill="rgb(211,220,0)" fg:x="60" fg:w="1"/><text x="5.7546%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="5.5046%" y="1157" width="0.0917%" height="15" fill="rgb(229,52,16)" fg:x="60" fg:w="1"/><text x="5.7546%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;)&gt;&gt; (1 samples, 0.09%)</title><rect x="5.5046%" y="1141" width="0.0917%" height="15" fill="rgb(212,155,18)" fg:x="60" fg:w="1"/><text x="5.7546%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="5.5046%" y="1125" width="0.0917%" height="15" fill="rgb(242,21,14)" fg:x="60" fg:w="1"/><text x="5.7546%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.09%)</title><rect x="5.5046%" y="1109" width="0.0917%" height="15" fill="rgb(222,19,48)" fg:x="60" fg:w="1"/><text x="5.7546%" y="1119.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.09%)</title><rect x="5.5046%" y="1093" width="0.0917%" height="15" fill="rgb(232,45,27)" fg:x="60" fg:w="1"/><text x="5.7546%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.09%)</title><rect x="5.5046%" y="1077" width="0.0917%" height="15" fill="rgb(249,103,42)" fg:x="60" fg:w="1"/><text x="5.7546%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;)&gt; (1 samples, 0.09%)</title><rect x="5.5046%" y="1061" width="0.0917%" height="15" fill="rgb(246,81,33)" fg:x="60" fg:w="1"/><text x="5.7546%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;&gt; (1 samples, 0.09%)</title><rect x="5.5046%" y="1045" width="0.0917%" height="15" fill="rgb(252,33,42)" fg:x="60" fg:w="1"/><text x="5.7546%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[http::header::map::Pos]&gt;&gt; (1 samples, 0.09%)</title><rect x="5.5963%" y="1205" width="0.0917%" height="15" fill="rgb(209,212,41)" fg:x="61" fg:w="1"/><text x="5.8463%" y="1215.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.09%)</title><rect x="5.5963%" y="1189" width="0.0917%" height="15" fill="rgb(207,154,6)" fg:x="61" fg:w="1"/><text x="5.8463%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="5.5963%" y="1173" width="0.0917%" height="15" fill="rgb(223,64,47)" fg:x="61" fg:w="1"/><text x="5.8463%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="5.5963%" y="1157" width="0.0917%" height="15" fill="rgb(211,161,38)" fg:x="61" fg:w="1"/><text x="5.8463%" y="1167.50"></text></g><g><title>__free (1 samples, 0.09%)</title><rect x="5.5963%" y="1141" width="0.0917%" height="15" fill="rgb(219,138,40)" fg:x="61" fg:w="1"/><text x="5.8463%" y="1151.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="5.5963%" y="1125" width="0.0917%" height="15" fill="rgb(241,228,46)" fg:x="61" fg:w="1"/><text x="5.8463%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.83%)</title><rect x="4.9541%" y="1253" width="0.8257%" height="15" fill="rgb(223,209,38)" fg:x="54" fg:w="9"/><text x="5.2041%" y="1263.50"></text></g><g><title>reqwest::async_impl::response::Response::bytes::{{closure}} (9 samples, 0.83%)</title><rect x="4.9541%" y="1237" width="0.8257%" height="15" fill="rgb(236,164,45)" fg:x="54" fg:w="9"/><text x="5.2041%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (2 samples, 0.18%)</title><rect x="5.5963%" y="1221" width="0.1835%" height="15" fill="rgb(231,15,5)" fg:x="61" fg:w="2"/><text x="5.8463%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="5.6881%" y="1205" width="0.0917%" height="15" fill="rgb(252,35,15)" fg:x="62" fg:w="1"/><text x="5.9381%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="5.6881%" y="1189" width="0.0917%" height="15" fill="rgb(248,181,18)" fg:x="62" fg:w="1"/><text x="5.9381%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;]&gt; (1 samples, 0.09%)</title><rect x="5.6881%" y="1173" width="0.0917%" height="15" fill="rgb(233,39,42)" fg:x="62" fg:w="1"/><text x="5.9381%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt; (1 samples, 0.09%)</title><rect x="5.6881%" y="1157" width="0.0917%" height="15" fill="rgb(238,110,33)" fg:x="62" fg:w="1"/><text x="5.9381%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::HeaderName&gt; (1 samples, 0.09%)</title><rect x="5.6881%" y="1141" width="0.0917%" height="15" fill="rgb(233,195,10)" fg:x="62" fg:w="1"/><text x="5.9381%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::Repr&lt;http::header::name::Custom&gt;&gt; (1 samples, 0.09%)</title><rect x="5.6881%" y="1125" width="0.0917%" height="15" fill="rgb(254,105,3)" fg:x="62" fg:w="1"/><text x="5.9381%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::Custom&gt; (1 samples, 0.09%)</title><rect x="5.6881%" y="1109" width="0.0917%" height="15" fill="rgb(221,225,9)" fg:x="62" fg:w="1"/><text x="5.9381%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; (1 samples, 0.09%)</title><rect x="5.6881%" y="1093" width="0.0917%" height="15" fill="rgb(224,227,45)" fg:x="62" fg:w="1"/><text x="5.9381%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (1 samples, 0.09%)</title><rect x="5.6881%" y="1077" width="0.0917%" height="15" fill="rgb(229,198,43)" fg:x="62" fg:w="1"/><text x="5.9381%" y="1087.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="5.6881%" y="1061" width="0.0917%" height="15" fill="rgb(206,209,35)" fg:x="62" fg:w="1"/><text x="5.9381%" y="1071.50"></text></g><g><title>__free (1 samples, 0.09%)</title><rect x="5.6881%" y="1045" width="0.0917%" height="15" fill="rgb(245,195,53)" fg:x="62" fg:w="1"/><text x="5.9381%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (1 samples, 0.09%)</title><rect x="5.7798%" y="1253" width="0.0917%" height="15" fill="rgb(240,92,26)" fg:x="63" fg:w="1"/><text x="6.0298%" y="1263.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="5.7798%" y="1237" width="0.0917%" height="15" fill="rgb(207,40,23)" fg:x="63" fg:w="1"/><text x="6.0298%" y="1247.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (1 samples, 0.09%)</title><rect x="5.7798%" y="1221" width="0.0917%" height="15" fill="rgb(223,111,35)" fg:x="63" fg:w="1"/><text x="6.0298%" y="1231.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (1 samples, 0.09%)</title><rect x="5.7798%" y="1205" width="0.0917%" height="15" fill="rgb(229,147,28)" fg:x="63" fg:w="1"/><text x="6.0298%" y="1215.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::{{closure}} (1 samples, 0.09%)</title><rect x="5.7798%" y="1189" width="0.0917%" height="15" fill="rgb(211,29,28)" fg:x="63" fg:w="1"/><text x="6.0298%" y="1199.50"></text></g><g><title>bytes::bytes_mut::release_shared (1 samples, 0.09%)</title><rect x="5.7798%" y="1173" width="0.0917%" height="15" fill="rgb(228,72,33)" fg:x="63" fg:w="1"/><text x="6.0298%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (1 samples, 0.09%)</title><rect x="5.7798%" y="1157" width="0.0917%" height="15" fill="rgb(205,214,31)" fg:x="63" fg:w="1"/><text x="6.0298%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (1 samples, 0.09%)</title><rect x="5.7798%" y="1141" width="0.0917%" height="15" fill="rgb(224,111,15)" fg:x="63" fg:w="1"/><text x="6.0298%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.09%)</title><rect x="5.7798%" y="1125" width="0.0917%" height="15" fill="rgb(253,21,26)" fg:x="63" fg:w="1"/><text x="6.0298%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.09%)</title><rect x="5.7798%" y="1109" width="0.0917%" height="15" fill="rgb(245,139,43)" fg:x="63" fg:w="1"/><text x="6.0298%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="5.7798%" y="1093" width="0.0917%" height="15" fill="rgb(252,170,7)" fg:x="63" fg:w="1"/><text x="6.0298%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="5.7798%" y="1077" width="0.0917%" height="15" fill="rgb(231,118,14)" fg:x="63" fg:w="1"/><text x="6.0298%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="5.7798%" y="1061" width="0.0917%" height="15" fill="rgb(238,83,0)" fg:x="63" fg:w="1"/><text x="6.0298%" y="1071.50"></text></g><g><title>__free (1 samples, 0.09%)</title><rect x="5.7798%" y="1045" width="0.0917%" height="15" fill="rgb(221,39,39)" fg:x="63" fg:w="1"/><text x="6.0298%" y="1055.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="5.7798%" y="1029" width="0.0917%" height="15" fill="rgb(222,119,46)" fg:x="63" fg:w="1"/><text x="6.0298%" y="1039.50"></text></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.09%)</title><rect x="6.0550%" y="981" width="0.0917%" height="15" fill="rgb(222,165,49)" fg:x="66" fg:w="1"/><text x="6.3050%" y="991.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.09%)</title><rect x="6.0550%" y="965" width="0.0917%" height="15" fill="rgb(219,113,52)" fg:x="66" fg:w="1"/><text x="6.3050%" y="975.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.09%)</title><rect x="6.0550%" y="949" width="0.0917%" height="15" fill="rgb(214,7,15)" fg:x="66" fg:w="1"/><text x="6.3050%" y="959.50"></text></g><g><title>&lt;backend::_::&lt;impl serde::de::Deserialize for backend::Record&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.09%)</title><rect x="6.0550%" y="933" width="0.0917%" height="15" fill="rgb(235,32,4)" fg:x="66" fg:w="1"/><text x="6.3050%" y="943.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.09%)</title><rect x="6.0550%" y="917" width="0.0917%" height="15" fill="rgb(238,90,54)" fg:x="66" fg:w="1"/><text x="6.3050%" y="927.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.09%)</title><rect x="6.0550%" y="901" width="0.0917%" height="15" fill="rgb(213,208,19)" fg:x="66" fg:w="1"/><text x="6.3050%" y="911.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.09%)</title><rect x="6.0550%" y="885" width="0.0917%" height="15" fill="rgb(233,156,4)" fg:x="66" fg:w="1"/><text x="6.3050%" y="895.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.09%)</title><rect x="6.0550%" y="869" width="0.0917%" height="15" fill="rgb(207,194,5)" fg:x="66" fg:w="1"/><text x="6.3050%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.09%)</title><rect x="6.0550%" y="853" width="0.0917%" height="15" fill="rgb(206,111,30)" fg:x="66" fg:w="1"/><text x="6.3050%" y="863.50"></text></g><g><title>serde_json::read::as_str (1 samples, 0.09%)</title><rect x="6.0550%" y="837" width="0.0917%" height="15" fill="rgb(243,70,54)" fg:x="66" fg:w="1"/><text x="6.3050%" y="847.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.09%)</title><rect x="6.0550%" y="821" width="0.0917%" height="15" fill="rgb(242,28,8)" fg:x="66" fg:w="1"/><text x="6.3050%" y="831.50"></text></g><g><title>&lt;serde::de::ignored_any::IgnoredAny as serde::de::Deserialize&gt;::deserialize (2 samples, 0.18%)</title><rect x="6.1468%" y="933" width="0.1835%" height="15" fill="rgb(219,106,18)" fg:x="67" fg:w="2"/><text x="6.3968%" y="943.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_ignored_any (2 samples, 0.18%)</title><rect x="6.1468%" y="917" width="0.1835%" height="15" fill="rgb(244,222,10)" fg:x="67" fg:w="2"/><text x="6.3968%" y="927.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::ignore_value (2 samples, 0.18%)</title><rect x="6.1468%" y="901" width="0.1835%" height="15" fill="rgb(236,179,52)" fg:x="67" fg:w="2"/><text x="6.3968%" y="911.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::ignore_str (2 samples, 0.18%)</title><rect x="6.1468%" y="885" width="0.1835%" height="15" fill="rgb(213,23,39)" fg:x="67" fg:w="2"/><text x="6.3968%" y="895.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.46%)</title><rect x="6.4220%" y="853" width="0.4587%" height="15" fill="rgb(238,48,10)" fg:x="70" fg:w="5"/><text x="6.6720%" y="863.50"></text></g><g><title>&lt;backend::_::&lt;impl serde::de::Deserialize for backend::Fields&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (5 samples, 0.46%)</title><rect x="6.4220%" y="837" width="0.4587%" height="15" fill="rgb(251,196,23)" fg:x="70" fg:w="5"/><text x="6.6720%" y="847.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (5 samples, 0.46%)</title><rect x="6.4220%" y="821" width="0.4587%" height="15" fill="rgb(250,152,24)" fg:x="70" fg:w="5"/><text x="6.6720%" y="831.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.46%)</title><rect x="6.4220%" y="805" width="0.4587%" height="15" fill="rgb(209,150,17)" fg:x="70" fg:w="5"/><text x="6.6720%" y="815.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (5 samples, 0.46%)</title><rect x="6.4220%" y="789" width="0.4587%" height="15" fill="rgb(234,202,34)" fg:x="70" fg:w="5"/><text x="6.6720%" y="799.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (5 samples, 0.46%)</title><rect x="6.4220%" y="773" width="0.4587%" height="15" fill="rgb(253,148,53)" fg:x="70" fg:w="5"/><text x="6.6720%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.28%)</title><rect x="6.6055%" y="757" width="0.2752%" height="15" fill="rgb(218,129,16)" fg:x="72" fg:w="3"/><text x="6.8555%" y="767.50"></text></g><g><title>serde_json::read::as_str (3 samples, 0.28%)</title><rect x="6.6055%" y="741" width="0.2752%" height="15" fill="rgb(216,85,19)" fg:x="72" fg:w="3"/><text x="6.8555%" y="751.50"></text></g><g><title>core::str::converts::from_utf8 (3 samples, 0.28%)</title><rect x="6.6055%" y="725" width="0.2752%" height="15" fill="rgb(235,228,7)" fg:x="72" fg:w="3"/><text x="6.8555%" y="735.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.09%)</title><rect x="6.7890%" y="709" width="0.0917%" height="15" fill="rgb(245,175,0)" fg:x="74" fg:w="1"/><text x="7.0390%" y="719.50"></text></g><g><title>serde::de::MapAccess::next_key (7 samples, 0.64%)</title><rect x="6.3303%" y="885" width="0.6422%" height="15" fill="rgb(208,168,36)" fg:x="69" fg:w="7"/><text x="6.5803%" y="895.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (7 samples, 0.64%)</title><rect x="6.3303%" y="869" width="0.6422%" height="15" fill="rgb(246,171,24)" fg:x="69" fg:w="7"/><text x="6.5803%" y="879.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.09%)</title><rect x="6.8807%" y="853" width="0.0917%" height="15" fill="rgb(215,142,24)" fg:x="75" fg:w="1"/><text x="7.1307%" y="863.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.09%)</title><rect x="6.8807%" y="837" width="0.0917%" height="15" fill="rgb(250,187,7)" fg:x="75" fg:w="1"/><text x="7.1307%" y="847.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.09%)</title><rect x="6.8807%" y="821" width="0.0917%" height="15" fill="rgb(228,66,33)" fg:x="75" fg:w="1"/><text x="7.1307%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 2.20%)</title><rect x="4.9541%" y="1285" width="2.2018%" height="15" fill="rgb(234,215,21)" fg:x="54" fg:w="24"/><text x="5.2041%" y="1295.50">&lt;..</text></g><g><title>reqwest::async_impl::response::Response::json::{{closure}} (24 samples, 2.20%)</title><rect x="4.9541%" y="1269" width="2.2018%" height="15" fill="rgb(222,191,20)" fg:x="54" fg:w="24"/><text x="5.2041%" y="1279.50">r..</text></g><g><title>serde_json::de::from_slice (14 samples, 1.28%)</title><rect x="5.8716%" y="1253" width="1.2844%" height="15" fill="rgb(245,79,54)" fg:x="64" fg:w="14"/><text x="6.1216%" y="1263.50"></text></g><g><title>serde_json::de::from_trait (14 samples, 1.28%)</title><rect x="5.8716%" y="1237" width="1.2844%" height="15" fill="rgb(240,10,37)" fg:x="64" fg:w="14"/><text x="6.1216%" y="1247.50"></text></g><g><title>backend::_::&lt;impl serde::de::Deserialize for backend::Response&gt;::deserialize (14 samples, 1.28%)</title><rect x="5.8716%" y="1221" width="1.2844%" height="15" fill="rgb(214,192,32)" fg:x="64" fg:w="14"/><text x="6.1216%" y="1231.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (14 samples, 1.28%)</title><rect x="5.8716%" y="1205" width="1.2844%" height="15" fill="rgb(209,36,54)" fg:x="64" fg:w="14"/><text x="6.1216%" y="1215.50"></text></g><g><title>&lt;backend::_::&lt;impl serde::de::Deserialize for backend::Response&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.28%)</title><rect x="5.8716%" y="1189" width="1.2844%" height="15" fill="rgb(220,10,11)" fg:x="64" fg:w="14"/><text x="6.1216%" y="1199.50"></text></g><g><title>serde::de::MapAccess::next_value (14 samples, 1.28%)</title><rect x="5.8716%" y="1173" width="1.2844%" height="15" fill="rgb(221,106,17)" fg:x="64" fg:w="14"/><text x="6.1216%" y="1183.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (14 samples, 1.28%)</title><rect x="5.8716%" y="1157" width="1.2844%" height="15" fill="rgb(251,142,44)" fg:x="64" fg:w="14"/><text x="6.1216%" y="1167.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14 samples, 1.28%)</title><rect x="5.8716%" y="1141" width="1.2844%" height="15" fill="rgb(238,13,15)" fg:x="64" fg:w="14"/><text x="6.1216%" y="1151.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (14 samples, 1.28%)</title><rect x="5.8716%" y="1125" width="1.2844%" height="15" fill="rgb(208,107,27)" fg:x="64" fg:w="14"/><text x="6.1216%" y="1135.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (14 samples, 1.28%)</title><rect x="5.8716%" y="1109" width="1.2844%" height="15" fill="rgb(205,136,37)" fg:x="64" fg:w="14"/><text x="6.1216%" y="1119.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (14 samples, 1.28%)</title><rect x="5.8716%" y="1093" width="1.2844%" height="15" fill="rgb(250,205,27)" fg:x="64" fg:w="14"/><text x="6.1216%" y="1103.50"></text></g><g><title>serde::de::SeqAccess::next_element (13 samples, 1.19%)</title><rect x="5.9633%" y="1077" width="1.1927%" height="15" fill="rgb(210,80,43)" fg:x="65" fg:w="13"/><text x="6.2133%" y="1087.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (13 samples, 1.19%)</title><rect x="5.9633%" y="1061" width="1.1927%" height="15" fill="rgb(247,160,36)" fg:x="65" fg:w="13"/><text x="6.2133%" y="1071.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (13 samples, 1.19%)</title><rect x="5.9633%" y="1045" width="1.1927%" height="15" fill="rgb(234,13,49)" fg:x="65" fg:w="13"/><text x="6.2133%" y="1055.50"></text></g><g><title>backend::_::&lt;impl serde::de::Deserialize for backend::Record&gt;::deserialize (13 samples, 1.19%)</title><rect x="5.9633%" y="1029" width="1.1927%" height="15" fill="rgb(234,122,0)" fg:x="65" fg:w="13"/><text x="6.2133%" y="1039.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (13 samples, 1.19%)</title><rect x="5.9633%" y="1013" width="1.1927%" height="15" fill="rgb(207,146,38)" fg:x="65" fg:w="13"/><text x="6.2133%" y="1023.50"></text></g><g><title>&lt;backend::_::&lt;impl serde::de::Deserialize for backend::Record&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (12 samples, 1.10%)</title><rect x="6.0550%" y="997" width="1.1009%" height="15" fill="rgb(207,177,25)" fg:x="66" fg:w="12"/><text x="6.3050%" y="1007.50"></text></g><g><title>serde::de::MapAccess::next_value (11 samples, 1.01%)</title><rect x="6.1468%" y="981" width="1.0092%" height="15" fill="rgb(211,178,42)" fg:x="67" fg:w="11"/><text x="6.3968%" y="991.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11 samples, 1.01%)</title><rect x="6.1468%" y="965" width="1.0092%" height="15" fill="rgb(230,69,54)" fg:x="67" fg:w="11"/><text x="6.3968%" y="975.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11 samples, 1.01%)</title><rect x="6.1468%" y="949" width="1.0092%" height="15" fill="rgb(214,135,41)" fg:x="67" fg:w="11"/><text x="6.3968%" y="959.50"></text></g><g><title>backend::_::&lt;impl serde::de::Deserialize for backend::Fields&gt;::deserialize (9 samples, 0.83%)</title><rect x="6.3303%" y="933" width="0.8257%" height="15" fill="rgb(237,67,25)" fg:x="69" fg:w="9"/><text x="6.5803%" y="943.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (9 samples, 0.83%)</title><rect x="6.3303%" y="917" width="0.8257%" height="15" fill="rgb(222,189,50)" fg:x="69" fg:w="9"/><text x="6.5803%" y="927.50"></text></g><g><title>&lt;backend::_::&lt;impl serde::de::Deserialize for backend::Fields&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.83%)</title><rect x="6.3303%" y="901" width="0.8257%" height="15" fill="rgb(245,148,34)" fg:x="69" fg:w="9"/><text x="6.5803%" y="911.50"></text></g><g><title>serde::de::MapAccess::next_value (2 samples, 0.18%)</title><rect x="6.9725%" y="885" width="0.1835%" height="15" fill="rgb(222,29,6)" fg:x="76" fg:w="2"/><text x="7.2225%" y="895.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.09%)</title><rect x="7.0642%" y="869" width="0.0917%" height="15" fill="rgb(221,189,43)" fg:x="77" fg:w="1"/><text x="7.3142%" y="879.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.09%)</title><rect x="7.0642%" y="853" width="0.0917%" height="15" fill="rgb(207,36,27)" fg:x="77" fg:w="1"/><text x="7.3142%" y="863.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.09%)</title><rect x="7.0642%" y="837" width="0.0917%" height="15" fill="rgb(217,90,24)" fg:x="77" fg:w="1"/><text x="7.3142%" y="847.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.09%)</title><rect x="7.0642%" y="821" width="0.0917%" height="15" fill="rgb(224,66,35)" fg:x="77" fg:w="1"/><text x="7.3142%" y="831.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.09%)</title><rect x="7.0642%" y="805" width="0.0917%" height="15" fill="rgb(221,13,50)" fg:x="77" fg:w="1"/><text x="7.3142%" y="815.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.09%)</title><rect x="7.0642%" y="789" width="0.0917%" height="15" fill="rgb(236,68,49)" fg:x="77" fg:w="1"/><text x="7.3142%" y="799.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.09%)</title><rect x="7.0642%" y="773" width="0.0917%" height="15" fill="rgb(229,146,28)" fg:x="77" fg:w="1"/><text x="7.3142%" y="783.50"></text></g><g><title>serde_json::read::parse_escape (1 samples, 0.09%)</title><rect x="7.0642%" y="757" width="0.0917%" height="15" fill="rgb(225,31,38)" fg:x="77" fg:w="1"/><text x="7.3142%" y="767.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::decode_hex_escape (1 samples, 0.09%)</title><rect x="7.0642%" y="741" width="0.0917%" height="15" fill="rgb(250,208,3)" fg:x="77" fg:w="1"/><text x="7.3142%" y="751.50"></text></g><g><title>&lt;reqwest::async_impl::client::Pending as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="7.1560%" y="1285" width="0.1835%" height="15" fill="rgb(246,54,23)" fg:x="78" fg:w="2"/><text x="7.4060%" y="1295.50"></text></g><g><title>&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="7.2477%" y="1269" width="0.0917%" height="15" fill="rgb(243,76,11)" fg:x="79" fg:w="1"/><text x="7.4977%" y="1279.50"></text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="7.2477%" y="1253" width="0.0917%" height="15" fill="rgb(245,21,50)" fg:x="79" fg:w="1"/><text x="7.4977%" y="1263.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="7.2477%" y="1237" width="0.0917%" height="15" fill="rgb(228,9,43)" fg:x="79" fg:w="1"/><text x="7.4977%" y="1247.50"></text></g><g><title>&lt;url::Url as reqwest::into_url::IntoUrlSealed&gt;::into_url (1 samples, 0.09%)</title><rect x="7.3394%" y="1237" width="0.0917%" height="15" fill="rgb(208,100,47)" fg:x="80" fg:w="1"/><text x="7.5894%" y="1247.50"></text></g><g><title>url::Url::has_host (1 samples, 0.09%)</title><rect x="7.3394%" y="1221" width="0.0917%" height="15" fill="rgb(232,26,8)" fg:x="80" fg:w="1"/><text x="7.5894%" y="1231.50"></text></g><g><title>url::parser::Parser::after_double_slash (1 samples, 0.09%)</title><rect x="7.4312%" y="1157" width="0.0917%" height="15" fill="rgb(216,166,38)" fg:x="81" fg:w="1"/><text x="7.6812%" y="1167.50"></text></g><g><title>idna::domain_to_ascii (1 samples, 0.09%)</title><rect x="7.5229%" y="1109" width="0.0917%" height="15" fill="rgb(251,202,51)" fg:x="82" fg:w="1"/><text x="7.7729%" y="1119.50"></text></g><g><title>idna::uts46::Config::to_ascii (1 samples, 0.09%)</title><rect x="7.5229%" y="1093" width="0.0917%" height="15" fill="rgb(254,216,34)" fg:x="82" fg:w="1"/><text x="7.7729%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;idna::uts46::Idna&gt; (1 samples, 0.09%)</title><rect x="7.5229%" y="1077" width="0.0917%" height="15" fill="rgb(251,32,27)" fg:x="82" fg:w="1"/><text x="7.7729%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.09%)</title><rect x="7.5229%" y="1061" width="0.0917%" height="15" fill="rgb(208,127,28)" fg:x="82" fg:w="1"/><text x="7.7729%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.09%)</title><rect x="7.5229%" y="1045" width="0.0917%" height="15" fill="rgb(224,137,22)" fg:x="82" fg:w="1"/><text x="7.7729%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.09%)</title><rect x="7.5229%" y="1029" width="0.0917%" height="15" fill="rgb(254,70,32)" fg:x="82" fg:w="1"/><text x="7.7729%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="7.5229%" y="1013" width="0.0917%" height="15" fill="rgb(229,75,37)" fg:x="82" fg:w="1"/><text x="7.7729%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="7.5229%" y="997" width="0.0917%" height="15" fill="rgb(252,64,23)" fg:x="82" fg:w="1"/><text x="7.7729%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="7.5229%" y="981" width="0.0917%" height="15" fill="rgb(232,162,48)" fg:x="82" fg:w="1"/><text x="7.7729%" y="991.50"></text></g><g><title>__free (1 samples, 0.09%)</title><rect x="7.5229%" y="965" width="0.0917%" height="15" fill="rgb(246,160,12)" fg:x="82" fg:w="1"/><text x="7.7729%" y="975.50"></text></g><g><title>percent_encoding::PercentDecode::decode_utf8_lossy (1 samples, 0.09%)</title><rect x="7.6147%" y="1109" width="0.0917%" height="15" fill="rgb(247,166,0)" fg:x="83" fg:w="1"/><text x="7.8647%" y="1119.50"></text></g><g><title>url::ParseOptions::parse (4 samples, 0.37%)</title><rect x="7.4312%" y="1221" width="0.3670%" height="15" fill="rgb(249,219,21)" fg:x="81" fg:w="4"/><text x="7.6812%" y="1231.50"></text></g><g><title>url::parser::Parser::parse_url (4 samples, 0.37%)</title><rect x="7.4312%" y="1205" width="0.3670%" height="15" fill="rgb(205,209,3)" fg:x="81" fg:w="4"/><text x="7.6812%" y="1215.50"></text></g><g><title>url::parser::Parser::parse_url (4 samples, 0.37%)</title><rect x="7.4312%" y="1189" width="0.3670%" height="15" fill="rgb(243,44,1)" fg:x="81" fg:w="4"/><text x="7.6812%" y="1199.50"></text></g><g><title>url::parser::Parser::after_double_slash (4 samples, 0.37%)</title><rect x="7.4312%" y="1173" width="0.3670%" height="15" fill="rgb(206,159,16)" fg:x="81" fg:w="4"/><text x="7.6812%" y="1183.50"></text></g><g><title>url::parser::Parser::parse_host_and_port (3 samples, 0.28%)</title><rect x="7.5229%" y="1157" width="0.2752%" height="15" fill="rgb(244,77,30)" fg:x="82" fg:w="3"/><text x="7.7729%" y="1167.50"></text></g><g><title>url::parser::Parser::parse_host (3 samples, 0.28%)</title><rect x="7.5229%" y="1141" width="0.2752%" height="15" fill="rgb(218,69,12)" fg:x="82" fg:w="3"/><text x="7.7729%" y="1151.50"></text></g><g><title>url::host::Host::parse (3 samples, 0.28%)</title><rect x="7.5229%" y="1125" width="0.2752%" height="15" fill="rgb(212,87,7)" fg:x="82" fg:w="3"/><text x="7.7729%" y="1135.50"></text></g><g><title>url::host::parse_ipv4addr (1 samples, 0.09%)</title><rect x="7.7064%" y="1109" width="0.0917%" height="15" fill="rgb(245,114,25)" fg:x="84" fg:w="1"/><text x="7.9564%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.09%)</title><rect x="7.7064%" y="1093" width="0.0917%" height="15" fill="rgb(210,61,42)" fg:x="84" fg:w="1"/><text x="7.9564%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="7.7064%" y="1077" width="0.0917%" height="15" fill="rgb(211,52,33)" fg:x="84" fg:w="1"/><text x="7.9564%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="7.7064%" y="1061" width="0.0917%" height="15" fill="rgb(234,58,33)" fg:x="84" fg:w="1"/><text x="7.9564%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="7.7064%" y="1045" width="0.0917%" height="15" fill="rgb(220,115,36)" fg:x="84" fg:w="1"/><text x="7.9564%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.09%)</title><rect x="7.7064%" y="1029" width="0.0917%" height="15" fill="rgb(243,153,54)" fg:x="84" fg:w="1"/><text x="7.9564%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.09%)</title><rect x="7.7064%" y="1013" width="0.0917%" height="15" fill="rgb(251,47,18)" fg:x="84" fg:w="1"/><text x="7.9564%" y="1023.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="7.7064%" y="997" width="0.0917%" height="15" fill="rgb(242,102,42)" fg:x="84" fg:w="1"/><text x="7.9564%" y="1007.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.09%)</title><rect x="7.7064%" y="981" width="0.0917%" height="15" fill="rgb(234,31,38)" fg:x="84" fg:w="1"/><text x="7.9564%" y="991.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.09%)</title><rect x="7.7064%" y="965" width="0.0917%" height="15" fill="rgb(221,117,51)" fg:x="84" fg:w="1"/><text x="7.9564%" y="975.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.09%)</title><rect x="7.7064%" y="949" width="0.0917%" height="15" fill="rgb(212,20,18)" fg:x="84" fg:w="1"/><text x="7.9564%" y="959.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.09%)</title><rect x="7.7064%" y="933" width="0.0917%" height="15" fill="rgb(245,133,36)" fg:x="84" fg:w="1"/><text x="7.9564%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="7.7064%" y="917" width="0.0917%" height="15" fill="rgb(212,6,19)" fg:x="84" fg:w="1"/><text x="7.9564%" y="927.50"></text></g><g><title>reqwest::async_impl::client::Client::get (6 samples, 0.55%)</title><rect x="7.3394%" y="1285" width="0.5505%" height="15" fill="rgb(218,1,36)" fg:x="80" fg:w="6"/><text x="7.5894%" y="1295.50"></text></g><g><title>reqwest::async_impl::client::Client::request (6 samples, 0.55%)</title><rect x="7.3394%" y="1269" width="0.5505%" height="15" fill="rgb(246,84,54)" fg:x="80" fg:w="6"/><text x="7.5894%" y="1279.50"></text></g><g><title>&lt;&amp;str as reqwest::into_url::IntoUrlSealed&gt;::into_url (6 samples, 0.55%)</title><rect x="7.3394%" y="1253" width="0.5505%" height="15" fill="rgb(242,110,6)" fg:x="80" fg:w="6"/><text x="7.5894%" y="1263.50"></text></g><g><title>url::Url::parse (5 samples, 0.46%)</title><rect x="7.4312%" y="1237" width="0.4587%" height="15" fill="rgb(214,47,5)" fg:x="81" fg:w="5"/><text x="7.6812%" y="1247.50"></text></g><g><title>url::Url::options (1 samples, 0.09%)</title><rect x="7.7982%" y="1221" width="0.0917%" height="15" fill="rgb(218,159,25)" fg:x="85" fg:w="1"/><text x="8.0482%" y="1231.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 3]&gt;::serialize (1 samples, 0.09%)</title><rect x="7.8899%" y="1269" width="0.0917%" height="15" fill="rgb(215,211,28)" fg:x="86" fg:w="1"/><text x="8.1399%" y="1279.50"></text></g><g><title>&lt;serde_urlencoded::ser::TupleSerializer&lt;Target&gt; as serde::ser::SerializeTuple&gt;::serialize_element (1 samples, 0.09%)</title><rect x="7.8899%" y="1253" width="0.0917%" height="15" fill="rgb(238,59,32)" fg:x="86" fg:w="1"/><text x="8.1399%" y="1263.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for (T0,T1)&gt;::serialize (1 samples, 0.09%)</title><rect x="7.8899%" y="1237" width="0.0917%" height="15" fill="rgb(226,82,3)" fg:x="86" fg:w="1"/><text x="8.1399%" y="1247.50"></text></g><g><title>&lt;serde_urlencoded::ser::pair::PairSerializer&lt;Target&gt; as serde::ser::SerializeTuple&gt;::serialize_element (1 samples, 0.09%)</title><rect x="7.8899%" y="1221" width="0.0917%" height="15" fill="rgb(240,164,32)" fg:x="86" fg:w="1"/><text x="8.1399%" y="1231.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.09%)</title><rect x="7.8899%" y="1205" width="0.0917%" height="15" fill="rgb(232,46,7)" fg:x="86" fg:w="1"/><text x="8.1399%" y="1215.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.09%)</title><rect x="7.8899%" y="1189" width="0.0917%" height="15" fill="rgb(229,129,53)" fg:x="86" fg:w="1"/><text x="8.1399%" y="1199.50"></text></g><g><title>&lt;serde_urlencoded::ser::part::PartSerializer&lt;S&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.09%)</title><rect x="7.8899%" y="1173" width="0.0917%" height="15" fill="rgb(234,188,29)" fg:x="86" fg:w="1"/><text x="8.1399%" y="1183.50"></text></g><g><title>&lt;serde_urlencoded::ser::value::ValueSink&lt;Target&gt; as serde_urlencoded::ser::part::Sink&gt;::serialize_str (1 samples, 0.09%)</title><rect x="7.8899%" y="1157" width="0.0917%" height="15" fill="rgb(246,141,4)" fg:x="86" fg:w="1"/><text x="8.1399%" y="1167.50"></text></g><g><title>form_urlencoded::Serializer&lt;T&gt;::append_pair (1 samples, 0.09%)</title><rect x="7.8899%" y="1141" width="0.0917%" height="15" fill="rgb(229,23,39)" fg:x="86" fg:w="1"/><text x="8.1399%" y="1151.50"></text></g><g><title>form_urlencoded::append_pair (1 samples, 0.09%)</title><rect x="7.8899%" y="1125" width="0.0917%" height="15" fill="rgb(206,12,3)" fg:x="86" fg:w="1"/><text x="8.1399%" y="1135.50"></text></g><g><title>form_urlencoded::append_encoded (1 samples, 0.09%)</title><rect x="7.8899%" y="1109" width="0.0917%" height="15" fill="rgb(252,226,20)" fg:x="86" fg:w="1"/><text x="8.1399%" y="1119.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;str&gt;&gt;::extend (1 samples, 0.09%)</title><rect x="7.8899%" y="1093" width="0.0917%" height="15" fill="rgb(216,123,35)" fg:x="86" fg:w="1"/><text x="8.1399%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.09%)</title><rect x="7.8899%" y="1077" width="0.0917%" height="15" fill="rgb(212,68,40)" fg:x="86" fg:w="1"/><text x="8.1399%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.09%)</title><rect x="7.8899%" y="1061" width="0.0917%" height="15" fill="rgb(254,125,32)" fg:x="86" fg:w="1"/><text x="8.1399%" y="1071.50"></text></g><g><title>&lt;form_urlencoded::ByteSerialize as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="7.8899%" y="1045" width="0.0917%" height="15" fill="rgb(253,97,22)" fg:x="86" fg:w="1"/><text x="8.1399%" y="1055.50"></text></g><g><title>reqwest::async_impl::request::RequestBuilder::query (2 samples, 0.18%)</title><rect x="7.8899%" y="1285" width="0.1835%" height="15" fill="rgb(241,101,14)" fg:x="86" fg:w="2"/><text x="8.1399%" y="1295.50"></text></g><g><title>url::Url::query (1 samples, 0.09%)</title><rect x="7.9817%" y="1269" width="0.0917%" height="15" fill="rgb(238,103,29)" fg:x="87" fg:w="1"/><text x="8.2317%" y="1279.50"></text></g><g><title>backend::get_stops::{{closure}} (36 samples, 3.30%)</title><rect x="4.9541%" y="1301" width="3.3028%" height="15" fill="rgb(233,195,47)" fg:x="54" fg:w="36"/><text x="5.2041%" y="1311.50">bac..</text></g><g><title>reqwest::async_impl::request::RequestBuilder::send (2 samples, 0.18%)</title><rect x="8.0734%" y="1285" width="0.1835%" height="15" fill="rgb(246,218,30)" fg:x="88" fg:w="2"/><text x="8.3234%" y="1295.50"></text></g><g><title>reqwest::async_impl::client::Client::execute_request (2 samples, 0.18%)</title><rect x="8.0734%" y="1269" width="0.1835%" height="15" fill="rgb(219,145,47)" fg:x="88" fg:w="2"/><text x="8.3234%" y="1279.50"></text></g><g><title>reqwest::into_url::expect_uri (2 samples, 0.18%)</title><rect x="8.0734%" y="1253" width="0.1835%" height="15" fill="rgb(243,12,26)" fg:x="88" fg:w="2"/><text x="8.3234%" y="1263.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (2 samples, 0.18%)</title><rect x="8.0734%" y="1237" width="0.1835%" height="15" fill="rgb(214,87,16)" fg:x="88" fg:w="2"/><text x="8.3234%" y="1247.50"></text></g><g><title>&lt;http::uri::Uri as core::str::traits::FromStr&gt;::from_str (2 samples, 0.18%)</title><rect x="8.0734%" y="1221" width="0.1835%" height="15" fill="rgb(208,99,42)" fg:x="88" fg:w="2"/><text x="8.3234%" y="1231.50"></text></g><g><title>&lt;http::uri::Uri as core::convert::TryFrom&lt;&amp;[u8]&gt;&gt;::try_from (2 samples, 0.18%)</title><rect x="8.0734%" y="1205" width="0.1835%" height="15" fill="rgb(253,99,2)" fg:x="88" fg:w="2"/><text x="8.3234%" y="1215.50"></text></g><g><title>http::uri::Uri::from_shared (2 samples, 0.18%)</title><rect x="8.0734%" y="1189" width="0.1835%" height="15" fill="rgb(220,168,23)" fg:x="88" fg:w="2"/><text x="8.3234%" y="1199.50"></text></g><g><title>http::uri::parse_full (1 samples, 0.09%)</title><rect x="8.1651%" y="1173" width="0.0917%" height="15" fill="rgb(242,38,24)" fg:x="89" fg:w="1"/><text x="8.4151%" y="1183.50"></text></g><g><title>http::uri::path::PathAndQuery::from_shared (1 samples, 0.09%)</title><rect x="8.1651%" y="1157" width="0.0917%" height="15" fill="rgb(225,182,9)" fg:x="89" fg:w="1"/><text x="8.4151%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="8.7156%" y="645" width="0.0917%" height="15" fill="rgb(243,178,37)" fg:x="95" fg:w="1"/><text x="8.9656%" y="655.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::get_or_prepare::{{closure}} (1 samples, 0.09%)</title><rect x="8.7156%" y="629" width="0.0917%" height="15" fill="rgb(232,139,19)" fg:x="95" fg:w="1"/><text x="8.9656%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="8.7156%" y="613" width="0.0917%" height="15" fill="rgb(225,201,24)" fg:x="95" fg:w="1"/><text x="8.9656%" y="623.50"></text></g><g><title>sqlx_core::postgres::connection::executor::prepare::{{closure}} (1 samples, 0.09%)</title><rect x="8.7156%" y="597" width="0.0917%" height="15" fill="rgb(221,47,46)" fg:x="95" fg:w="1"/><text x="8.9656%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="8.7156%" y="581" width="0.0917%" height="15" fill="rgb(249,23,13)" fg:x="95" fg:w="1"/><text x="8.9656%" y="591.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv_expect::{{closure}} (1 samples, 0.09%)</title><rect x="8.7156%" y="565" width="0.0917%" height="15" fill="rgb(219,9,5)" fg:x="95" fg:w="1"/><text x="8.9656%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="8.7156%" y="549" width="0.0917%" height="15" fill="rgb(254,171,16)" fg:x="95" fg:w="1"/><text x="8.9656%" y="559.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv::{{closure}} (1 samples, 0.09%)</title><rect x="8.7156%" y="533" width="0.0917%" height="15" fill="rgb(230,171,20)" fg:x="95" fg:w="1"/><text x="8.9656%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="8.7156%" y="517" width="0.0917%" height="15" fill="rgb(210,71,41)" fg:x="95" fg:w="1"/><text x="8.9656%" y="527.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv_unchecked::{{closure}} (1 samples, 0.09%)</title><rect x="8.7156%" y="501" width="0.0917%" height="15" fill="rgb(206,173,20)" fg:x="95" fg:w="1"/><text x="8.9656%" y="511.50"></text></g><g><title>sqlx_core::postgres::message::MessageFormat::try_from_u8 (1 samples, 0.09%)</title><rect x="8.7156%" y="485" width="0.0917%" height="15" fill="rgb(233,88,34)" fg:x="95" fg:w="1"/><text x="8.9656%" y="495.50"></text></g><g><title>&lt;sqlx_core::io::write_and_flush::WriteAndFlush&lt;S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="8.8073%" y="645" width="0.0917%" height="15" fill="rgb(223,209,46)" fg:x="96" fg:w="1"/><text x="9.0573%" y="655.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.09%)</title><rect x="8.8073%" y="629" width="0.0917%" height="15" fill="rgb(250,43,18)" fg:x="96" fg:w="1"/><text x="9.0573%" y="639.50"></text></g><g><title>&lt;sqlx_core::net::tls::MaybeTlsStream&lt;S&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.09%)</title><rect x="8.8073%" y="613" width="0.0917%" height="15" fill="rgb(208,13,10)" fg:x="96" fg:w="1"/><text x="9.0573%" y="623.50"></text></g><g><title>&lt;sqlx_core::net::socket::Socket as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.09%)</title><rect x="8.8073%" y="597" width="0.0917%" height="15" fill="rgb(212,200,36)" fg:x="96" fg:w="1"/><text x="9.0573%" y="607.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.09%)</title><rect x="8.8073%" y="581" width="0.0917%" height="15" fill="rgb(225,90,30)" fg:x="96" fg:w="1"/><text x="9.0573%" y="591.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (1 samples, 0.09%)</title><rect x="8.8073%" y="565" width="0.0917%" height="15" fill="rgb(236,182,39)" fg:x="96" fg:w="1"/><text x="9.0573%" y="575.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1 samples, 0.09%)</title><rect x="8.8073%" y="549" width="0.0917%" height="15" fill="rgb(212,144,35)" fg:x="96" fg:w="1"/><text x="9.0573%" y="559.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_write_io (1 samples, 0.09%)</title><rect x="8.8073%" y="533" width="0.0917%" height="15" fill="rgb(228,63,44)" fg:x="96" fg:w="1"/><text x="9.0573%" y="543.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (1 samples, 0.09%)</title><rect x="8.8073%" y="517" width="0.0917%" height="15" fill="rgb(228,109,6)" fg:x="96" fg:w="1"/><text x="9.0573%" y="527.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write::{{closure}} (1 samples, 0.09%)</title><rect x="8.8073%" y="501" width="0.0917%" height="15" fill="rgb(238,117,24)" fg:x="96" fg:w="1"/><text x="9.0573%" y="511.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 0.09%)</title><rect x="8.8073%" y="485" width="0.0917%" height="15" fill="rgb(242,26,26)" fg:x="96" fg:w="1"/><text x="9.0573%" y="495.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.09%)</title><rect x="8.8073%" y="469" width="0.0917%" height="15" fill="rgb(221,92,48)" fg:x="96" fg:w="1"/><text x="9.0573%" y="479.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (1 samples, 0.09%)</title><rect x="8.8073%" y="453" width="0.0917%" height="15" fill="rgb(209,209,32)" fg:x="96" fg:w="1"/><text x="9.0573%" y="463.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::{{closure}} (1 samples, 0.09%)</title><rect x="8.8073%" y="437" width="0.0917%" height="15" fill="rgb(221,70,22)" fg:x="96" fg:w="1"/><text x="9.0573%" y="447.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.09%)</title><rect x="8.8073%" y="421" width="0.0917%" height="15" fill="rgb(248,145,5)" fg:x="96" fg:w="1"/><text x="9.0573%" y="431.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.09%)</title><rect x="8.8073%" y="405" width="0.0917%" height="15" fill="rgb(226,116,26)" fg:x="96" fg:w="1"/><text x="9.0573%" y="415.50"></text></g><g><title>__libc_send (1 samples, 0.09%)</title><rect x="8.8073%" y="389" width="0.0917%" height="15" fill="rgb(244,5,17)" fg:x="96" fg:w="1"/><text x="9.0573%" y="399.50"></text></g><g><title>__GI___pthread_enable_asynccancel (1 samples, 0.09%)</title><rect x="8.8073%" y="373" width="0.0917%" height="15" fill="rgb(252,159,33)" fg:x="96" fg:w="1"/><text x="9.0573%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::postgres::arguments::PgArguments&gt; (1 samples, 0.09%)</title><rect x="8.8991%" y="645" width="0.0917%" height="15" fill="rgb(206,71,0)" fg:x="97" fg:w="1"/><text x="9.1491%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::postgres::arguments::PgArgumentBuffer&gt; (1 samples, 0.09%)</title><rect x="8.8991%" y="629" width="0.0917%" height="15" fill="rgb(233,118,54)" fg:x="97" fg:w="1"/><text x="9.1491%" y="639.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::write (1 samples, 0.09%)</title><rect x="8.9908%" y="645" width="0.0917%" height="15" fill="rgb(234,83,48)" fg:x="98" fg:w="1"/><text x="9.2408%" y="655.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::write_with (1 samples, 0.09%)</title><rect x="8.9908%" y="629" width="0.0917%" height="15" fill="rgb(228,3,54)" fg:x="98" fg:w="1"/><text x="9.2408%" y="639.50"></text></g><g><title>&lt;sqlx_core::postgres::message::bind::Bind as sqlx_core::io::encode::Encode&gt;::encode_with (1 samples, 0.09%)</title><rect x="8.9908%" y="613" width="0.0917%" height="15" fill="rgb(226,155,13)" fg:x="98" fg:w="1"/><text x="9.2408%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as sqlx_core::postgres::io::buf_mut::PgBufMutExt&gt;::put_length_prefixed (1 samples, 0.09%)</title><rect x="8.9908%" y="597" width="0.0917%" height="15" fill="rgb(241,28,37)" fg:x="98" fg:w="1"/><text x="9.2408%" y="607.50"></text></g><g><title>&lt;sqlx_core::postgres::message::bind::Bind as sqlx_core::io::encode::Encode&gt;::encode_with::{{closure}} (1 samples, 0.09%)</title><rect x="8.9908%" y="581" width="0.0917%" height="15" fill="rgb(233,93,10)" fg:x="98" fg:w="1"/><text x="9.2408%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as sqlx_core::postgres::io::buf_mut::PgBufMutExt&gt;::put_portal_name (1 samples, 0.09%)</title><rect x="8.9908%" y="565" width="0.0917%" height="15" fill="rgb(225,113,19)" fg:x="98" fg:w="1"/><text x="9.2408%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.09%)</title><rect x="8.9908%" y="549" width="0.0917%" height="15" fill="rgb(241,2,18)" fg:x="98" fg:w="1"/><text x="9.2408%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="8.6239%" y="677" width="0.5505%" height="15" fill="rgb(228,207,21)" fg:x="94" fg:w="6"/><text x="8.8739%" y="687.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}} (6 samples, 0.55%)</title><rect x="8.6239%" y="661" width="0.5505%" height="15" fill="rgb(213,211,35)" fg:x="94" fg:w="6"/><text x="8.8739%" y="671.50"></text></g><g><title>sqlx_core::postgres::arguments::PgArguments::apply_patches (1 samples, 0.09%)</title><rect x="9.0826%" y="645" width="0.0917%" height="15" fill="rgb(209,83,10)" fg:x="99" fg:w="1"/><text x="9.3326%" y="655.50"></text></g><g><title>core::future::from_generator (1 samples, 0.09%)</title><rect x="9.0826%" y="629" width="0.0917%" height="15" fill="rgb(209,164,1)" fg:x="99" fg:w="1"/><text x="9.3326%" y="639.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::push (1 samples, 0.09%)</title><rect x="9.1743%" y="533" width="0.0917%" height="15" fill="rgb(213,184,43)" fg:x="100" fg:w="1"/><text x="9.4243%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (1 samples, 0.09%)</title><rect x="9.1743%" y="517" width="0.0917%" height="15" fill="rgb(231,61,34)" fg:x="100" fg:w="1"/><text x="9.4243%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_store (1 samples, 0.09%)</title><rect x="9.1743%" y="501" width="0.0917%" height="15" fill="rgb(235,75,3)" fg:x="100" fg:w="1"/><text x="9.4243%" y="511.50"></text></g><g><title>&lt;futures_util::sink::send::Send&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="9.1743%" y="677" width="0.1835%" height="15" fill="rgb(220,106,47)" fg:x="100" fg:w="2"/><text x="9.4243%" y="687.50"></text></g><g><title>&lt;futures_util::sink::feed::Feed&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="9.1743%" y="661" width="0.1835%" height="15" fill="rgb(210,196,33)" fg:x="100" fg:w="2"/><text x="9.4243%" y="671.50"></text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::start_send (2 samples, 0.18%)</title><rect x="9.1743%" y="645" width="0.1835%" height="15" fill="rgb(229,154,42)" fg:x="100" fg:w="2"/><text x="9.4243%" y="655.50"></text></g><g><title>futures_channel::mpsc::sink_impl::&lt;impl futures_sink::Sink&lt;T&gt; for futures_channel::mpsc::Sender&lt;T&gt;&gt;::start_send (2 samples, 0.18%)</title><rect x="9.1743%" y="629" width="0.1835%" height="15" fill="rgb(228,114,26)" fg:x="100" fg:w="2"/><text x="9.4243%" y="639.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::start_send (2 samples, 0.18%)</title><rect x="9.1743%" y="613" width="0.1835%" height="15" fill="rgb(208,144,1)" fg:x="100" fg:w="2"/><text x="9.4243%" y="623.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (2 samples, 0.18%)</title><rect x="9.1743%" y="597" width="0.1835%" height="15" fill="rgb(239,112,37)" fg:x="100" fg:w="2"/><text x="9.4243%" y="607.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::try_send (2 samples, 0.18%)</title><rect x="9.1743%" y="581" width="0.1835%" height="15" fill="rgb(210,96,50)" fg:x="100" fg:w="2"/><text x="9.4243%" y="591.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::do_send_b (2 samples, 0.18%)</title><rect x="9.1743%" y="565" width="0.1835%" height="15" fill="rgb(222,178,2)" fg:x="100" fg:w="2"/><text x="9.4243%" y="575.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::queue_push_and_signal (2 samples, 0.18%)</title><rect x="9.1743%" y="549" width="0.1835%" height="15" fill="rgb(226,74,18)" fg:x="100" fg:w="2"/><text x="9.4243%" y="559.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (1 samples, 0.09%)</title><rect x="9.2661%" y="533" width="0.0917%" height="15" fill="rgb(225,67,54)" fg:x="101" fg:w="1"/><text x="9.5161%" y="543.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::take (1 samples, 0.09%)</title><rect x="9.2661%" y="517" width="0.0917%" height="15" fill="rgb(251,92,32)" fg:x="101" fg:w="1"/><text x="9.5161%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.09%)</title><rect x="9.2661%" y="501" width="0.0917%" height="15" fill="rgb(228,149,22)" fg:x="101" fg:w="1"/><text x="9.5161%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.09%)</title><rect x="9.2661%" y="485" width="0.0917%" height="15" fill="rgb(243,54,13)" fg:x="101" fg:w="1"/><text x="9.5161%" y="495.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (1 samples, 0.09%)</title><rect x="9.4495%" y="389" width="0.0917%" height="15" fill="rgb(243,180,28)" fg:x="103" fg:w="1"/><text x="9.6995%" y="399.50"></text></g><g><title>&lt;futures_util::sink::send::Send&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="9.4495%" y="485" width="0.1835%" height="15" fill="rgb(208,167,24)" fg:x="103" fg:w="2"/><text x="9.6995%" y="495.50"></text></g><g><title>&lt;futures_util::sink::feed::Feed&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="9.4495%" y="469" width="0.1835%" height="15" fill="rgb(245,73,45)" fg:x="103" fg:w="2"/><text x="9.6995%" y="479.50"></text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::poll_ready (2 samples, 0.18%)</title><rect x="9.4495%" y="453" width="0.1835%" height="15" fill="rgb(237,203,48)" fg:x="103" fg:w="2"/><text x="9.6995%" y="463.50"></text></g><g><title>futures_channel::mpsc::sink_impl::&lt;impl futures_sink::Sink&lt;T&gt; for futures_channel::mpsc::Sender&lt;T&gt;&gt;::poll_ready (2 samples, 0.18%)</title><rect x="9.4495%" y="437" width="0.1835%" height="15" fill="rgb(211,197,16)" fg:x="103" fg:w="2"/><text x="9.6995%" y="447.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::poll_ready (2 samples, 0.18%)</title><rect x="9.4495%" y="421" width="0.1835%" height="15" fill="rgb(243,99,51)" fg:x="103" fg:w="2"/><text x="9.6995%" y="431.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_ready (2 samples, 0.18%)</title><rect x="9.4495%" y="405" width="0.1835%" height="15" fill="rgb(215,123,29)" fg:x="103" fg:w="2"/><text x="9.6995%" y="415.50"></text></g><g><title>futures_channel::mpsc::decode_state (1 samples, 0.09%)</title><rect x="9.5413%" y="389" width="0.0917%" height="15" fill="rgb(239,186,37)" fg:x="104" fg:w="1"/><text x="9.7913%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::postgres::message::command_complete::CommandComplete&gt; (1 samples, 0.09%)</title><rect x="9.6330%" y="485" width="0.0917%" height="15" fill="rgb(252,136,39)" fg:x="105" fg:w="1"/><text x="9.8830%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (1 samples, 0.09%)</title><rect x="9.6330%" y="469" width="0.0917%" height="15" fill="rgb(223,213,32)" fg:x="105" fg:w="1"/><text x="9.8830%" y="479.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="9.6330%" y="453" width="0.0917%" height="15" fill="rgb(233,115,5)" fg:x="105" fg:w="1"/><text x="9.8830%" y="463.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (1 samples, 0.09%)</title><rect x="9.6330%" y="437" width="0.0917%" height="15" fill="rgb(207,226,44)" fg:x="105" fg:w="1"/><text x="9.8830%" y="447.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (1 samples, 0.09%)</title><rect x="9.6330%" y="421" width="0.0917%" height="15" fill="rgb(208,126,0)" fg:x="105" fg:w="1"/><text x="9.8830%" y="431.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::{{closure}} (1 samples, 0.09%)</title><rect x="9.6330%" y="405" width="0.0917%" height="15" fill="rgb(244,66,21)" fg:x="105" fg:w="1"/><text x="9.8830%" y="415.50"></text></g><g><title>bytes::bytes_mut::release_shared (1 samples, 0.09%)</title><rect x="9.6330%" y="389" width="0.0917%" height="15" fill="rgb(222,97,12)" fg:x="105" fg:w="1"/><text x="9.8830%" y="399.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="9.3578%" y="597" width="0.4587%" height="15" fill="rgb(219,213,19)" fg:x="102" fg:w="5"/><text x="9.6078%" y="607.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="9.3578%" y="581" width="0.4587%" height="15" fill="rgb(252,169,30)" fg:x="102" fg:w="5"/><text x="9.6078%" y="591.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="9.3578%" y="565" width="0.4587%" height="15" fill="rgb(206,32,51)" fg:x="102" fg:w="5"/><text x="9.6078%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="9.4495%" y="549" width="0.3670%" height="15" fill="rgb(250,172,42)" fg:x="103" fg:w="4"/><text x="9.6995%" y="559.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (4 samples, 0.37%)</title><rect x="9.4495%" y="533" width="0.3670%" height="15" fill="rgb(209,34,43)" fg:x="103" fg:w="4"/><text x="9.6995%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="9.4495%" y="517" width="0.3670%" height="15" fill="rgb(223,11,35)" fg:x="103" fg:w="4"/><text x="9.6995%" y="527.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}}::{{closure}} (4 samples, 0.37%)</title><rect x="9.4495%" y="501" width="0.3670%" height="15" fill="rgb(251,219,26)" fg:x="103" fg:w="4"/><text x="9.6995%" y="511.50"></text></g><g><title>sqlx_core::postgres::message::Message::decode (1 samples, 0.09%)</title><rect x="9.7248%" y="485" width="0.0917%" height="15" fill="rgb(231,119,3)" fg:x="106" fg:w="1"/><text x="9.9748%" y="495.50"></text></g><g><title>sqlx_core::io::decode::Decode::decode (1 samples, 0.09%)</title><rect x="9.7248%" y="469" width="0.0917%" height="15" fill="rgb(216,97,11)" fg:x="106" fg:w="1"/><text x="9.9748%" y="479.50"></text></g><g><title>&lt;sqlx_core::postgres::message::data_row::DataRow as sqlx_core::io::decode::Decode&gt;::decode_with (1 samples, 0.09%)</title><rect x="9.7248%" y="453" width="0.0917%" height="15" fill="rgb(223,59,9)" fg:x="106" fg:w="1"/><text x="9.9748%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.09%)</title><rect x="9.7248%" y="437" width="0.0917%" height="15" fill="rgb(233,93,31)" fg:x="106" fg:w="1"/><text x="9.9748%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="9.7248%" y="421" width="0.0917%" height="15" fill="rgb(239,81,33)" fg:x="106" fg:w="1"/><text x="9.9748%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="9.7248%" y="405" width="0.0917%" height="15" fill="rgb(213,120,34)" fg:x="106" fg:w="1"/><text x="9.9748%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.09%)</title><rect x="9.7248%" y="389" width="0.0917%" height="15" fill="rgb(243,49,53)" fg:x="106" fg:w="1"/><text x="9.9748%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="9.7248%" y="373" width="0.0917%" height="15" fill="rgb(247,216,33)" fg:x="106" fg:w="1"/><text x="9.9748%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="9.7248%" y="357" width="0.0917%" height="15" fill="rgb(226,26,14)" fg:x="106" fg:w="1"/><text x="9.9748%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="9.7248%" y="341" width="0.0917%" height="15" fill="rgb(215,49,53)" fg:x="106" fg:w="1"/><text x="9.9748%" y="351.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="9.7248%" y="325" width="0.0917%" height="15" fill="rgb(245,162,40)" fg:x="106" fg:w="1"/><text x="9.9748%" y="335.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (14 samples, 1.28%)</title><rect x="8.6239%" y="789" width="1.2844%" height="15" fill="rgb(229,68,17)" fg:x="94" fg:w="14"/><text x="8.8739%" y="799.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (14 samples, 1.28%)</title><rect x="8.6239%" y="773" width="1.2844%" height="15" fill="rgb(213,182,10)" fg:x="94" fg:w="14"/><text x="8.8739%" y="783.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (14 samples, 1.28%)</title><rect x="8.6239%" y="757" width="1.2844%" height="15" fill="rgb(245,125,30)" fg:x="94" fg:w="14"/><text x="8.8739%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 1.28%)</title><rect x="8.6239%" y="741" width="1.2844%" height="15" fill="rgb(232,202,2)" fg:x="94" fg:w="14"/><text x="8.8739%" y="751.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (14 samples, 1.28%)</title><rect x="8.6239%" y="725" width="1.2844%" height="15" fill="rgb(237,140,51)" fg:x="94" fg:w="14"/><text x="8.8739%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 1.28%)</title><rect x="8.6239%" y="709" width="1.2844%" height="15" fill="rgb(236,157,25)" fg:x="94" fg:w="14"/><text x="8.8739%" y="719.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_core::postgres::connection::PgConnection&gt;::fetch_many::{{closure}}::{{closure}} (14 samples, 1.28%)</title><rect x="8.6239%" y="693" width="1.2844%" height="15" fill="rgb(219,209,0)" fg:x="94" fg:w="14"/><text x="8.8739%" y="703.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="9.3578%" y="677" width="0.5505%" height="15" fill="rgb(240,116,54)" fg:x="102" fg:w="6"/><text x="9.6078%" y="687.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (6 samples, 0.55%)</title><rect x="9.3578%" y="661" width="0.5505%" height="15" fill="rgb(216,10,36)" fg:x="102" fg:w="6"/><text x="9.6078%" y="671.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (6 samples, 0.55%)</title><rect x="9.3578%" y="645" width="0.5505%" height="15" fill="rgb(222,72,44)" fg:x="102" fg:w="6"/><text x="9.6078%" y="655.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (6 samples, 0.55%)</title><rect x="9.3578%" y="629" width="0.5505%" height="15" fill="rgb(232,159,9)" fg:x="102" fg:w="6"/><text x="9.6078%" y="639.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (6 samples, 0.55%)</title><rect x="9.3578%" y="613" width="0.5505%" height="15" fill="rgb(210,39,32)" fg:x="102" fg:w="6"/><text x="9.6078%" y="623.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="9.8165%" y="597" width="0.0917%" height="15" fill="rgb(216,194,45)" fg:x="107" fg:w="1"/><text x="10.0665%" y="607.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="9.8165%" y="581" width="0.0917%" height="15" fill="rgb(218,18,35)" fg:x="107" fg:w="1"/><text x="10.0665%" y="591.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (1 samples, 0.09%)</title><rect x="9.8165%" y="565" width="0.0917%" height="15" fill="rgb(207,83,51)" fg:x="107" fg:w="1"/><text x="10.0665%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;futures_channel::mpsc::BoundedInner&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="9.8165%" y="549" width="0.0917%" height="15" fill="rgb(225,63,43)" fg:x="107" fg:w="1"/><text x="10.0665%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_channel::mpsc::BoundedInner&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="9.8165%" y="533" width="0.0917%" height="15" fill="rgb(207,57,36)" fg:x="107" fg:w="1"/><text x="10.0665%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="9.8165%" y="517" width="0.0917%" height="15" fill="rgb(216,99,33)" fg:x="107" fg:w="1"/><text x="10.0665%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.09%)</title><rect x="9.8165%" y="501" width="0.0917%" height="15" fill="rgb(225,42,16)" fg:x="107" fg:w="1"/><text x="10.0665%" y="511.50"></text></g><g><title>core::mem::drop (1 samples, 0.09%)</title><rect x="9.8165%" y="485" width="0.0917%" height="15" fill="rgb(220,201,45)" fg:x="107" fg:w="1"/><text x="10.0665%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;futures_channel::mpsc::BoundedInner&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="9.8165%" y="469" width="0.0917%" height="15" fill="rgb(225,33,4)" fg:x="107" fg:w="1"/><text x="10.0665%" y="479.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="9.8165%" y="453" width="0.0917%" height="15" fill="rgb(224,33,50)" fg:x="107" fg:w="1"/><text x="10.0665%" y="463.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (15 samples, 1.38%)</title><rect x="8.6239%" y="869" width="1.3761%" height="15" fill="rgb(246,198,51)" fg:x="94" fg:w="15"/><text x="8.8739%" y="879.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (15 samples, 1.38%)</title><rect x="8.6239%" y="853" width="1.3761%" height="15" fill="rgb(205,22,4)" fg:x="94" fg:w="15"/><text x="8.8739%" y="863.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (15 samples, 1.38%)</title><rect x="8.6239%" y="837" width="1.3761%" height="15" fill="rgb(206,3,8)" fg:x="94" fg:w="15"/><text x="8.8739%" y="847.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (15 samples, 1.38%)</title><rect x="8.6239%" y="821" width="1.3761%" height="15" fill="rgb(251,23,15)" fg:x="94" fg:w="15"/><text x="8.8739%" y="831.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (15 samples, 1.38%)</title><rect x="8.6239%" y="805" width="1.3761%" height="15" fill="rgb(252,88,28)" fg:x="94" fg:w="15"/><text x="8.8739%" y="815.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="9.9083%" y="789" width="0.0917%" height="15" fill="rgb(212,127,14)" fg:x="108" fg:w="1"/><text x="10.1583%" y="799.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="9.9083%" y="773" width="0.0917%" height="15" fill="rgb(247,145,37)" fg:x="108" fg:w="1"/><text x="10.1583%" y="783.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (1 samples, 0.09%)</title><rect x="9.9083%" y="757" width="0.0917%" height="15" fill="rgb(209,117,53)" fg:x="108" fg:w="1"/><text x="10.1583%" y="767.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (1 samples, 0.09%)</title><rect x="9.9083%" y="741" width="0.0917%" height="15" fill="rgb(212,90,42)" fg:x="108" fg:w="1"/><text x="10.1583%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.09%)</title><rect x="10.0000%" y="869" width="0.0917%" height="15" fill="rgb(218,164,37)" fg:x="109" fg:w="1"/><text x="10.2500%" y="879.50"></text></g><g><title>core::mem::drop (1 samples, 0.09%)</title><rect x="10.0000%" y="853" width="0.0917%" height="15" fill="rgb(246,65,34)" fg:x="109" fg:w="1"/><text x="10.2500%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;std::sync::mutex::Mutex&lt;futures_channel::mpsc::SenderTask&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="10.0000%" y="837" width="0.0917%" height="15" fill="rgb(231,100,33)" fg:x="109" fg:w="1"/><text x="10.2500%" y="847.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="10.0000%" y="821" width="0.0917%" height="15" fill="rgb(228,126,14)" fg:x="109" fg:w="1"/><text x="10.2500%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 1.56%)</title><rect x="8.6239%" y="901" width="1.5596%" height="15" fill="rgb(215,173,21)" fg:x="94" fg:w="17"/><text x="8.8739%" y="911.50"></text></g><g><title>sqlx_core::pool::executor::&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::{{closure}}::{{closure}} (17 samples, 1.56%)</title><rect x="8.6239%" y="885" width="1.5596%" height="15" fill="rgb(210,6,40)" fg:x="94" fg:w="17"/><text x="8.8739%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_core::postgres::database::Postgres&gt;&gt; (1 samples, 0.09%)</title><rect x="10.0917%" y="869" width="0.0917%" height="15" fill="rgb(212,48,18)" fg:x="110" fg:w="1"/><text x="10.3417%" y="879.50"></text></g><g><title>&lt;sqlx_core::pool::connection::PoolConnection&lt;DB&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="10.0917%" y="853" width="0.0917%" height="15" fill="rgb(230,214,11)" fg:x="110" fg:w="1"/><text x="10.3417%" y="863.50"></text></g><g><title>tokio::runtime::handle::Handle::try_current (1 samples, 0.09%)</title><rect x="10.0917%" y="837" width="0.0917%" height="15" fill="rgb(254,105,39)" fg:x="110" fg:w="1"/><text x="10.3417%" y="847.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (18 samples, 1.65%)</title><rect x="8.6239%" y="981" width="1.6514%" height="15" fill="rgb(245,158,5)" fg:x="94" fg:w="18"/><text x="8.8739%" y="991.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (18 samples, 1.65%)</title><rect x="8.6239%" y="965" width="1.6514%" height="15" fill="rgb(249,208,11)" fg:x="94" fg:w="18"/><text x="8.8739%" y="975.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (18 samples, 1.65%)</title><rect x="8.6239%" y="949" width="1.6514%" height="15" fill="rgb(210,39,28)" fg:x="94" fg:w="18"/><text x="8.8739%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 1.65%)</title><rect x="8.6239%" y="933" width="1.6514%" height="15" fill="rgb(211,56,53)" fg:x="94" fg:w="18"/><text x="8.8739%" y="943.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (18 samples, 1.65%)</title><rect x="8.6239%" y="917" width="1.6514%" height="15" fill="rgb(226,201,30)" fg:x="94" fg:w="18"/><text x="8.8739%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="10.1835%" y="901" width="0.0917%" height="15" fill="rgb(239,101,34)" fg:x="111" fg:w="1"/><text x="10.4335%" y="911.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (20 samples, 1.83%)</title><rect x="8.5321%" y="997" width="1.8349%" height="15" fill="rgb(226,209,5)" fg:x="93" fg:w="20"/><text x="8.7821%" y="1007.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;core::task::poll::Poll&lt;core::result::Result&lt;(),sqlx_core::error::Error&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="10.2752%" y="981" width="0.0917%" height="15" fill="rgb(250,105,47)" fg:x="112" fg:w="1"/><text x="10.5252%" y="991.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (21 samples, 1.93%)</title><rect x="8.5321%" y="1061" width="1.9266%" height="15" fill="rgb(230,72,3)" fg:x="93" fg:w="21"/><text x="8.7821%" y="1071.50">&lt;..</text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (21 samples, 1.93%)</title><rect x="8.5321%" y="1045" width="1.9266%" height="15" fill="rgb(232,218,39)" fg:x="93" fg:w="21"/><text x="8.7821%" y="1055.50">f..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (21 samples, 1.93%)</title><rect x="8.5321%" y="1029" width="1.9266%" height="15" fill="rgb(248,166,6)" fg:x="93" fg:w="21"/><text x="8.7821%" y="1039.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (21 samples, 1.93%)</title><rect x="8.5321%" y="1013" width="1.9266%" height="15" fill="rgb(247,89,20)" fg:x="93" fg:w="21"/><text x="8.7821%" y="1023.50">&lt;..</text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (1 samples, 0.09%)</title><rect x="10.3670%" y="997" width="0.0917%" height="15" fill="rgb(248,130,54)" fg:x="113" fg:w="1"/><text x="10.6170%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.09%)</title><rect x="10.3670%" y="981" width="0.0917%" height="15" fill="rgb(234,196,4)" fg:x="113" fg:w="1"/><text x="10.6170%" y="991.50"></text></g><g><title>sqlx_core::postgres::types::int::&lt;impl sqlx_core::decode::Decode&lt;sqlx_core::postgres::database::Postgres&gt; for i32&gt;::decode (1 samples, 0.09%)</title><rect x="10.4587%" y="1029" width="0.0917%" height="15" fill="rgb(250,143,31)" fg:x="114" fg:w="1"/><text x="10.7087%" y="1039.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (23 samples, 2.11%)</title><rect x="8.5321%" y="1269" width="2.1101%" height="15" fill="rgb(211,110,34)" fg:x="93" fg:w="23"/><text x="8.7821%" y="1279.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (23 samples, 2.11%)</title><rect x="8.5321%" y="1253" width="2.1101%" height="15" fill="rgb(215,124,48)" fg:x="93" fg:w="23"/><text x="8.7821%" y="1263.50">&lt;..</text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (23 samples, 2.11%)</title><rect x="8.5321%" y="1237" width="2.1101%" height="15" fill="rgb(216,46,13)" fg:x="93" fg:w="23"/><text x="8.7821%" y="1247.50">&lt;..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (23 samples, 2.11%)</title><rect x="8.5321%" y="1221" width="2.1101%" height="15" fill="rgb(205,184,25)" fg:x="93" fg:w="23"/><text x="8.7821%" y="1231.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (23 samples, 2.11%)</title><rect x="8.5321%" y="1205" width="2.1101%" height="15" fill="rgb(228,1,10)" fg:x="93" fg:w="23"/><text x="8.7821%" y="1215.50">&lt;..</text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (23 samples, 2.11%)</title><rect x="8.5321%" y="1189" width="2.1101%" height="15" fill="rgb(213,116,27)" fg:x="93" fg:w="23"/><text x="8.7821%" y="1199.50">&lt;..</text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (23 samples, 2.11%)</title><rect x="8.5321%" y="1173" width="2.1101%" height="15" fill="rgb(241,95,50)" fg:x="93" fg:w="23"/><text x="8.7821%" y="1183.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (23 samples, 2.11%)</title><rect x="8.5321%" y="1157" width="2.1101%" height="15" fill="rgb(238,48,32)" fg:x="93" fg:w="23"/><text x="8.7821%" y="1167.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (23 samples, 2.11%)</title><rect x="8.5321%" y="1141" width="2.1101%" height="15" fill="rgb(235,113,49)" fg:x="93" fg:w="23"/><text x="8.7821%" y="1151.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 2.11%)</title><rect x="8.5321%" y="1125" width="2.1101%" height="15" fill="rgb(205,127,43)" fg:x="93" fg:w="23"/><text x="8.7821%" y="1135.50">&lt;..</text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (23 samples, 2.11%)</title><rect x="8.5321%" y="1109" width="2.1101%" height="15" fill="rgb(250,162,2)" fg:x="93" fg:w="23"/><text x="8.7821%" y="1119.50">s..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 2.11%)</title><rect x="8.5321%" y="1093" width="2.1101%" height="15" fill="rgb(220,13,41)" fg:x="93" fg:w="23"/><text x="8.7821%" y="1103.50">&lt;..</text></g><g><title>sqlx_core::query::Map&lt;DB,F,A&gt;::fetch_many::{{closure}}::{{closure}} (23 samples, 2.11%)</title><rect x="8.5321%" y="1077" width="2.1101%" height="15" fill="rgb(249,221,25)" fg:x="93" fg:w="23"/><text x="8.7821%" y="1087.50">s..</text></g><g><title>backend::occupancy::{{closure}}::{{closure}} (2 samples, 0.18%)</title><rect x="10.4587%" y="1061" width="0.1835%" height="15" fill="rgb(215,208,19)" fg:x="114" fg:w="2"/><text x="10.7087%" y="1071.50"></text></g><g><title>sqlx_core::row::Row::try_get_unchecked (2 samples, 0.18%)</title><rect x="10.4587%" y="1045" width="0.1835%" height="15" fill="rgb(236,175,2)" fg:x="114" fg:w="2"/><text x="10.7087%" y="1055.50"></text></g><g><title>sqlx_core::postgres::types::str::&lt;impl sqlx_core::decode::Decode&lt;sqlx_core::postgres::database::Postgres&gt; for alloc::string::String&gt;::decode (1 samples, 0.09%)</title><rect x="10.5505%" y="1029" width="0.0917%" height="15" fill="rgb(241,52,2)" fg:x="115" fg:w="1"/><text x="10.8005%" y="1039.50"></text></g><g><title>sqlx_core::postgres::value::PgValueRef::as_str (1 samples, 0.09%)</title><rect x="10.5505%" y="1013" width="0.0917%" height="15" fill="rgb(248,140,14)" fg:x="115" fg:w="1"/><text x="10.8005%" y="1023.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.09%)</title><rect x="10.5505%" y="997" width="0.0917%" height="15" fill="rgb(253,22,42)" fg:x="115" fg:w="1"/><text x="10.8005%" y="1007.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (25 samples, 2.29%)</title><rect x="8.4404%" y="1285" width="2.2936%" height="15" fill="rgb(234,61,47)" fg:x="92" fg:w="25"/><text x="8.6904%" y="1295.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.09%)</title><rect x="10.6422%" y="1269" width="0.0917%" height="15" fill="rgb(208,226,15)" fg:x="116" fg:w="1"/><text x="10.8922%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.09%)</title><rect x="10.6422%" y="1253" width="0.0917%" height="15" fill="rgb(217,221,4)" fg:x="116" fg:w="1"/><text x="10.8922%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.09%)</title><rect x="10.6422%" y="1237" width="0.0917%" height="15" fill="rgb(212,174,34)" fg:x="116" fg:w="1"/><text x="10.8922%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.09%)</title><rect x="10.6422%" y="1221" width="0.0917%" height="15" fill="rgb(253,83,4)" fg:x="116" fg:w="1"/><text x="10.8922%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.09%)</title><rect x="10.6422%" y="1205" width="0.0917%" height="15" fill="rgb(250,195,49)" fg:x="116" fg:w="1"/><text x="10.8922%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.09%)</title><rect x="10.6422%" y="1189" width="0.0917%" height="15" fill="rgb(241,192,25)" fg:x="116" fg:w="1"/><text x="10.8922%" y="1199.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="10.6422%" y="1173" width="0.0917%" height="15" fill="rgb(208,124,10)" fg:x="116" fg:w="1"/><text x="10.8922%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.09%)</title><rect x="10.6422%" y="1157" width="0.0917%" height="15" fill="rgb(222,33,0)" fg:x="116" fg:w="1"/><text x="10.8922%" y="1167.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.09%)</title><rect x="10.6422%" y="1141" width="0.0917%" height="15" fill="rgb(234,209,28)" fg:x="116" fg:w="1"/><text x="10.8922%" y="1151.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.09%)</title><rect x="10.6422%" y="1125" width="0.0917%" height="15" fill="rgb(224,11,23)" fg:x="116" fg:w="1"/><text x="10.8922%" y="1135.50"></text></g><g><title>__realloc (1 samples, 0.09%)</title><rect x="10.6422%" y="1109" width="0.0917%" height="15" fill="rgb(232,99,1)" fg:x="116" fg:w="1"/><text x="10.8922%" y="1119.50"></text></g><g><title>_int_realloc (1 samples, 0.09%)</title><rect x="10.6422%" y="1093" width="0.0917%" height="15" fill="rgb(237,95,45)" fg:x="116" fg:w="1"/><text x="10.8922%" y="1103.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="10.6422%" y="1077" width="0.0917%" height="15" fill="rgb(208,109,11)" fg:x="116" fg:w="1"/><text x="10.8922%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (88 samples, 8.07%)</title><rect x="2.7523%" y="1317" width="8.0734%" height="15" fill="rgb(216,190,48)" fg:x="30" fg:w="88"/><text x="3.0023%" y="1327.50">&lt;core::futu..</text></g><g><title>sqlx_core::query::Map&lt;DB,F,A&gt;::fetch_all::{{closure}} (28 samples, 2.57%)</title><rect x="8.2569%" y="1301" width="2.5688%" height="15" fill="rgb(251,171,36)" fg:x="90" fg:w="28"/><text x="8.5069%" y="1311.50">sq..</text></g><g><title>sqlx_core::query::Map&lt;DB,F,A&gt;::fetch (1 samples, 0.09%)</title><rect x="10.7339%" y="1285" width="0.0917%" height="15" fill="rgb(230,62,22)" fg:x="117" fg:w="1"/><text x="10.9839%" y="1295.50"></text></g><g><title>sqlx_core::query::Map&lt;DB,F,A&gt;::fetch_many (1 samples, 0.09%)</title><rect x="10.7339%" y="1269" width="0.0917%" height="15" fill="rgb(225,114,35)" fg:x="117" fg:w="1"/><text x="10.9839%" y="1279.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="10.7339%" y="1253" width="0.0917%" height="15" fill="rgb(215,118,42)" fg:x="117" fg:w="1"/><text x="10.9839%" y="1263.50"></text></g><g><title>&lt;futures_channel::mpsc::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="10.7339%" y="1237" width="0.0917%" height="15" fill="rgb(243,119,21)" fg:x="117" fg:w="1"/><text x="10.9839%" y="1247.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck (2 samples, 0.18%)</title><rect x="12.9358%" y="837" width="0.1835%" height="15" fill="rgb(252,177,53)" fg:x="141" fg:w="2"/><text x="13.1858%" y="847.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (2 samples, 0.18%)</title><rect x="12.9358%" y="821" width="0.1835%" height="15" fill="rgb(237,209,29)" fg:x="141" fg:w="2"/><text x="13.1858%" y="831.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::from_hash (2 samples, 0.18%)</title><rect x="12.9358%" y="805" width="0.1835%" height="15" fill="rgb(212,65,23)" fg:x="141" fg:w="2"/><text x="13.1858%" y="815.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search (2 samples, 0.18%)</title><rect x="12.9358%" y="789" width="0.1835%" height="15" fill="rgb(230,222,46)" fg:x="141" fg:w="2"/><text x="13.1858%" y="799.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (2 samples, 0.18%)</title><rect x="12.9358%" y="773" width="0.1835%" height="15" fill="rgb(215,135,32)" fg:x="141" fg:w="2"/><text x="13.1858%" y="783.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search::{{closure}} (2 samples, 0.18%)</title><rect x="12.9358%" y="757" width="0.1835%" height="15" fill="rgb(246,101,22)" fg:x="141" fg:w="2"/><text x="13.1858%" y="767.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash::{{closure}} (2 samples, 0.18%)</title><rect x="12.9358%" y="741" width="0.1835%" height="15" fill="rgb(206,107,13)" fg:x="141" fg:w="2"/><text x="13.1858%" y="751.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck::{{closure}} (2 samples, 0.18%)</title><rect x="12.9358%" y="725" width="0.1835%" height="15" fill="rgb(250,100,44)" fg:x="141" fg:w="2"/><text x="13.1858%" y="735.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.18%)</title><rect x="12.9358%" y="709" width="0.1835%" height="15" fill="rgb(231,147,38)" fg:x="141" fg:w="2"/><text x="13.1858%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.18%)</title><rect x="12.9358%" y="693" width="0.1835%" height="15" fill="rgb(229,8,40)" fg:x="141" fg:w="2"/><text x="13.1858%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.18%)</title><rect x="12.9358%" y="677" width="0.1835%" height="15" fill="rgb(221,135,30)" fg:x="141" fg:w="2"/><text x="13.1858%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.18%)</title><rect x="12.9358%" y="661" width="0.1835%" height="15" fill="rgb(249,193,18)" fg:x="141" fg:w="2"/><text x="13.1858%" y="671.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.18%)</title><rect x="12.9358%" y="645" width="0.1835%" height="15" fill="rgb(209,133,39)" fg:x="141" fg:w="2"/><text x="13.1858%" y="655.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (3 samples, 0.28%)</title><rect x="12.9358%" y="853" width="0.2752%" height="15" fill="rgb(232,100,14)" fg:x="141" fg:w="3"/><text x="13.1858%" y="863.50"></text></g><g><title>hashlink::linked_hash_map::hash_key (1 samples, 0.09%)</title><rect x="13.1193%" y="837" width="0.0917%" height="15" fill="rgb(224,185,1)" fg:x="143" fg:w="1"/><text x="13.3693%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.09%)</title><rect x="13.1193%" y="821" width="0.0917%" height="15" fill="rgb(223,139,8)" fg:x="143" fg:w="1"/><text x="13.3693%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="12.8440%" y="917" width="0.4587%" height="15" fill="rgb(232,213,38)" fg:x="140" fg:w="5"/><text x="13.0940%" y="927.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::get_or_prepare::{{closure}} (5 samples, 0.46%)</title><rect x="12.8440%" y="901" width="0.4587%" height="15" fill="rgb(207,94,22)" fg:x="140" fg:w="5"/><text x="13.0940%" y="911.50"></text></g><g><title>sqlx_core::common::statement_cache::StatementCache&lt;T&gt;::get_mut (5 samples, 0.46%)</title><rect x="12.8440%" y="885" width="0.4587%" height="15" fill="rgb(219,183,54)" fg:x="140" fg:w="5"/><text x="13.0940%" y="895.50"></text></g><g><title>hashlink::lru_cache::LruCache&lt;K,V,S&gt;::get_mut (5 samples, 0.46%)</title><rect x="12.8440%" y="869" width="0.4587%" height="15" fill="rgb(216,185,54)" fg:x="140" fg:w="5"/><text x="13.0940%" y="879.50"></text></g><g><title>hashlink::linked_hash_map::RawOccupiedEntryMut&lt;K,V&gt;::to_back (1 samples, 0.09%)</title><rect x="13.2110%" y="853" width="0.0917%" height="15" fill="rgb(254,217,39)" fg:x="144" fg:w="1"/><text x="13.4610%" y="863.50"></text></g><g><title>hashlink::linked_hash_map::detach_node (1 samples, 0.09%)</title><rect x="13.2110%" y="837" width="0.0917%" height="15" fill="rgb(240,178,23)" fg:x="144" fg:w="1"/><text x="13.4610%" y="847.50"></text></g><g><title>&lt;sqlx_core::io::write_and_flush::WriteAndFlush&lt;S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="13.3028%" y="917" width="0.0917%" height="15" fill="rgb(218,11,47)" fg:x="145" fg:w="1"/><text x="13.5528%" y="927.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.09%)</title><rect x="13.3028%" y="901" width="0.0917%" height="15" fill="rgb(218,51,51)" fg:x="145" fg:w="1"/><text x="13.5528%" y="911.50"></text></g><g><title>&lt;sqlx_core::net::tls::MaybeTlsStream&lt;S&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.09%)</title><rect x="13.3028%" y="885" width="0.0917%" height="15" fill="rgb(238,126,27)" fg:x="145" fg:w="1"/><text x="13.5528%" y="895.50"></text></g><g><title>&lt;sqlx_core::net::socket::Socket as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.09%)</title><rect x="13.3028%" y="869" width="0.0917%" height="15" fill="rgb(249,202,22)" fg:x="145" fg:w="1"/><text x="13.5528%" y="879.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.09%)</title><rect x="13.3028%" y="853" width="0.0917%" height="15" fill="rgb(254,195,49)" fg:x="145" fg:w="1"/><text x="13.5528%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sqlx_core::postgres::type_info::PgTypeInfo&gt;&gt; (1 samples, 0.09%)</title><rect x="13.3945%" y="901" width="0.0917%" height="15" fill="rgb(208,123,14)" fg:x="146" fg:w="1"/><text x="13.6445%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="13.3945%" y="885" width="0.0917%" height="15" fill="rgb(224,200,8)" fg:x="146" fg:w="1"/><text x="13.6445%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[sqlx_core::postgres::type_info::PgTypeInfo]&gt; (1 samples, 0.09%)</title><rect x="13.3945%" y="869" width="0.0917%" height="15" fill="rgb(217,61,36)" fg:x="146" fg:w="1"/><text x="13.6445%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::postgres::type_info::PgTypeInfo&gt; (1 samples, 0.09%)</title><rect x="13.3945%" y="853" width="0.0917%" height="15" fill="rgb(206,35,45)" fg:x="146" fg:w="1"/><text x="13.6445%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::postgres::type_info::PgType&gt; (1 samples, 0.09%)</title><rect x="13.3945%" y="837" width="0.0917%" height="15" fill="rgb(217,65,33)" fg:x="146" fg:w="1"/><text x="13.6445%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::postgres::arguments::PgArguments&gt; (2 samples, 0.18%)</title><rect x="13.3945%" y="917" width="0.1835%" height="15" fill="rgb(222,158,48)" fg:x="146" fg:w="2"/><text x="13.6445%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::postgres::arguments::PgArgumentBuffer&gt; (1 samples, 0.09%)</title><rect x="13.4862%" y="901" width="0.0917%" height="15" fill="rgb(254,2,54)" fg:x="147" fg:w="1"/><text x="13.7362%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize,alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;(&amp;mut [u8],&amp;sqlx_core::postgres::type_info::PgTypeInfo)&gt;+Output = ()+core::marker::Sync+core::marker::Send&gt;)&gt;&gt; (1 samples, 0.09%)</title><rect x="13.4862%" y="885" width="0.0917%" height="15" fill="rgb(250,143,38)" fg:x="147" fg:w="1"/><text x="13.7362%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="13.4862%" y="869" width="0.0917%" height="15" fill="rgb(248,25,0)" fg:x="147" fg:w="1"/><text x="13.7362%" y="879.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="13.5780%" y="917" width="0.0917%" height="15" fill="rgb(206,152,27)" fg:x="148" fg:w="1"/><text x="13.8280%" y="927.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::write (1 samples, 0.09%)</title><rect x="13.6697%" y="917" width="0.0917%" height="15" fill="rgb(240,77,30)" fg:x="149" fg:w="1"/><text x="13.9197%" y="927.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::write_with (1 samples, 0.09%)</title><rect x="13.6697%" y="901" width="0.0917%" height="15" fill="rgb(231,5,3)" fg:x="149" fg:w="1"/><text x="13.9197%" y="911.50"></text></g><g><title>&lt;sqlx_core::postgres::message::bind::Bind as sqlx_core::io::encode::Encode&gt;::encode_with (1 samples, 0.09%)</title><rect x="13.6697%" y="885" width="0.0917%" height="15" fill="rgb(207,226,32)" fg:x="149" fg:w="1"/><text x="13.9197%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.09%)</title><rect x="13.6697%" y="869" width="0.0917%" height="15" fill="rgb(222,207,47)" fg:x="149" fg:w="1"/><text x="13.9197%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="12.8440%" y="949" width="1.0092%" height="15" fill="rgb(229,115,45)" fg:x="140" fg:w="11"/><text x="13.0940%" y="959.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}} (11 samples, 1.01%)</title><rect x="12.8440%" y="933" width="1.0092%" height="15" fill="rgb(224,191,6)" fg:x="140" fg:w="11"/><text x="13.0940%" y="943.50"></text></g><g><title>sqlx_core::postgres::arguments::PgArguments::apply_patches (1 samples, 0.09%)</title><rect x="13.7615%" y="917" width="0.0917%" height="15" fill="rgb(230,227,24)" fg:x="150" fg:w="1"/><text x="14.0115%" y="927.50"></text></g><g><title>&lt;bytes::bytes::Bytes as sqlx_core::io::decode::Decode&gt;::decode_with (1 samples, 0.09%)</title><rect x="14.4037%" y="629" width="0.0917%" height="15" fill="rgb(228,80,19)" fg:x="157" fg:w="1"/><text x="14.6537%" y="639.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="14.4954%" y="517" width="0.0917%" height="15" fill="rgb(247,229,0)" fg:x="158" fg:w="1"/><text x="14.7454%" y="527.50"></text></g><g><title>&lt;sqlx_core::net::tls::MaybeTlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="14.4954%" y="501" width="0.0917%" height="15" fill="rgb(237,194,15)" fg:x="158" fg:w="1"/><text x="14.7454%" y="511.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="14.4954%" y="485" width="0.0917%" height="15" fill="rgb(219,203,20)" fg:x="158" fg:w="1"/><text x="14.7454%" y="495.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (1 samples, 0.09%)</title><rect x="14.4954%" y="469" width="0.0917%" height="15" fill="rgb(234,128,8)" fg:x="158" fg:w="1"/><text x="14.7454%" y="479.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 0.09%)</title><rect x="14.4954%" y="453" width="0.0917%" height="15" fill="rgb(248,202,8)" fg:x="158" fg:w="1"/><text x="14.7454%" y="463.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_read_io (1 samples, 0.09%)</title><rect x="14.4954%" y="437" width="0.0917%" height="15" fill="rgb(206,104,37)" fg:x="158" fg:w="1"/><text x="14.7454%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="14.4954%" y="565" width="0.1835%" height="15" fill="rgb(223,8,27)" fg:x="158" fg:w="2"/><text x="14.7454%" y="575.50"></text></g><g><title>sqlx_core::io::buf_stream::BufTruncator::read::{{closure}} (2 samples, 0.18%)</title><rect x="14.4954%" y="549" width="0.1835%" height="15" fill="rgb(216,217,28)" fg:x="158" fg:w="2"/><text x="14.7454%" y="559.50"></text></g><g><title>&lt;tokio::io::util::read::Read&lt;R&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="14.4954%" y="533" width="0.1835%" height="15" fill="rgb(249,199,1)" fg:x="158" fg:w="2"/><text x="14.7454%" y="543.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::new (1 samples, 0.09%)</title><rect x="14.5872%" y="517" width="0.0917%" height="15" fill="rgb(240,85,17)" fg:x="159" fg:w="1"/><text x="14.8372%" y="527.50"></text></g><g><title>tokio::io::read_buf::slice_to_uninit_mut (1 samples, 0.09%)</title><rect x="14.5872%" y="501" width="0.0917%" height="15" fill="rgb(206,108,45)" fg:x="159" fg:w="1"/><text x="14.8372%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::io::buf_stream::BufTruncator&gt; (1 samples, 0.09%)</title><rect x="14.6789%" y="565" width="0.0917%" height="15" fill="rgb(245,210,41)" fg:x="160" fg:w="1"/><text x="14.9289%" y="575.50"></text></g><g><title>bytes::bytes_mut::BytesMut::truncate (1 samples, 0.09%)</title><rect x="14.6789%" y="549" width="0.0917%" height="15" fill="rgb(206,13,37)" fg:x="160" fg:w="1"/><text x="14.9289%" y="559.50"></text></g><g><title>sqlx_core::io::buf_stream::BufTruncator::is_full (1 samples, 0.09%)</title><rect x="14.7706%" y="565" width="0.0917%" height="15" fill="rgb(250,61,18)" fg:x="161" fg:w="1"/><text x="15.0206%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="14.4037%" y="693" width="0.5505%" height="15" fill="rgb(235,172,48)" fg:x="157" fg:w="6"/><text x="14.6537%" y="703.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read::{{closure}} (6 samples, 0.55%)</title><rect x="14.4037%" y="677" width="0.5505%" height="15" fill="rgb(249,201,17)" fg:x="157" fg:w="6"/><text x="14.6537%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.55%)</title><rect x="14.4037%" y="661" width="0.5505%" height="15" fill="rgb(219,208,6)" fg:x="157" fg:w="6"/><text x="14.6537%" y="671.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_with::{{closure}} (6 samples, 0.55%)</title><rect x="14.4037%" y="645" width="0.5505%" height="15" fill="rgb(248,31,23)" fg:x="157" fg:w="6"/><text x="14.6537%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="14.4954%" y="629" width="0.4587%" height="15" fill="rgb(245,15,42)" fg:x="158" fg:w="5"/><text x="14.7454%" y="639.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_raw::{{closure}} (5 samples, 0.46%)</title><rect x="14.4954%" y="613" width="0.4587%" height="15" fill="rgb(222,217,39)" fg:x="158" fg:w="5"/><text x="14.7454%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="14.4954%" y="597" width="0.4587%" height="15" fill="rgb(210,219,27)" fg:x="158" fg:w="5"/><text x="14.7454%" y="607.50"></text></g><g><title>sqlx_core::io::buf_stream::read_raw_into::{{closure}} (5 samples, 0.46%)</title><rect x="14.4954%" y="581" width="0.4587%" height="15" fill="rgb(252,166,36)" fg:x="158" fg:w="5"/><text x="14.7454%" y="591.50"></text></g><g><title>sqlx_core::io::buf_stream::BufTruncator::new (1 samples, 0.09%)</title><rect x="14.8624%" y="565" width="0.0917%" height="15" fill="rgb(245,132,34)" fg:x="162" fg:w="1"/><text x="15.1124%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.73%)</title><rect x="14.3119%" y="757" width="0.7339%" height="15" fill="rgb(236,54,3)" fg:x="156" fg:w="8"/><text x="14.5619%" y="767.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv::{{closure}} (8 samples, 0.73%)</title><rect x="14.3119%" y="741" width="0.7339%" height="15" fill="rgb(241,173,43)" fg:x="156" fg:w="8"/><text x="14.5619%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.64%)</title><rect x="14.4037%" y="725" width="0.6422%" height="15" fill="rgb(215,190,9)" fg:x="157" fg:w="7"/><text x="14.6537%" y="735.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv_unchecked::{{closure}} (7 samples, 0.64%)</title><rect x="14.4037%" y="709" width="0.6422%" height="15" fill="rgb(242,101,16)" fg:x="157" fg:w="7"/><text x="14.6537%" y="719.50"></text></g><g><title>sqlx_core::postgres::message::MessageFormat::try_from_u8 (1 samples, 0.09%)</title><rect x="14.9541%" y="693" width="0.0917%" height="15" fill="rgb(223,190,21)" fg:x="163" fg:w="1"/><text x="15.2041%" y="703.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::park (1 samples, 0.09%)</title><rect x="15.0459%" y="629" width="0.0917%" height="15" fill="rgb(215,228,25)" fg:x="164" fg:w="1"/><text x="15.2959%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.09%)</title><rect x="15.0459%" y="613" width="0.0917%" height="15" fill="rgb(225,36,22)" fg:x="164" fg:w="1"/><text x="15.2959%" y="623.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.09%)</title><rect x="15.0459%" y="597" width="0.0917%" height="15" fill="rgb(251,106,46)" fg:x="164" fg:w="1"/><text x="15.2959%" y="607.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.09%)</title><rect x="15.0459%" y="581" width="0.0917%" height="15" fill="rgb(208,90,1)" fg:x="164" fg:w="1"/><text x="15.2959%" y="591.50"></text></g><g><title>___pthread_mutex_lock (1 samples, 0.09%)</title><rect x="15.0459%" y="565" width="0.0917%" height="15" fill="rgb(243,10,4)" fg:x="164" fg:w="1"/><text x="15.2959%" y="575.50"></text></g><g><title>&lt;futures_util::sink::send::Send&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="15.0459%" y="757" width="0.1835%" height="15" fill="rgb(212,137,27)" fg:x="164" fg:w="2"/><text x="15.2959%" y="767.50"></text></g><g><title>&lt;futures_util::sink::feed::Feed&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="15.0459%" y="741" width="0.1835%" height="15" fill="rgb(231,220,49)" fg:x="164" fg:w="2"/><text x="15.2959%" y="751.50"></text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::start_send (2 samples, 0.18%)</title><rect x="15.0459%" y="725" width="0.1835%" height="15" fill="rgb(237,96,20)" fg:x="164" fg:w="2"/><text x="15.2959%" y="735.50"></text></g><g><title>futures_channel::mpsc::sink_impl::&lt;impl futures_sink::Sink&lt;T&gt; for futures_channel::mpsc::Sender&lt;T&gt;&gt;::start_send (2 samples, 0.18%)</title><rect x="15.0459%" y="709" width="0.1835%" height="15" fill="rgb(239,229,30)" fg:x="164" fg:w="2"/><text x="15.2959%" y="719.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::start_send (2 samples, 0.18%)</title><rect x="15.0459%" y="693" width="0.1835%" height="15" fill="rgb(219,65,33)" fg:x="164" fg:w="2"/><text x="15.2959%" y="703.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (2 samples, 0.18%)</title><rect x="15.0459%" y="677" width="0.1835%" height="15" fill="rgb(243,134,7)" fg:x="164" fg:w="2"/><text x="15.2959%" y="687.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::try_send (2 samples, 0.18%)</title><rect x="15.0459%" y="661" width="0.1835%" height="15" fill="rgb(216,177,54)" fg:x="164" fg:w="2"/><text x="15.2959%" y="671.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::do_send_b (2 samples, 0.18%)</title><rect x="15.0459%" y="645" width="0.1835%" height="15" fill="rgb(211,160,20)" fg:x="164" fg:w="2"/><text x="15.2959%" y="655.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::queue_push_and_signal (1 samples, 0.09%)</title><rect x="15.1376%" y="629" width="0.0917%" height="15" fill="rgb(239,85,39)" fg:x="165" fg:w="1"/><text x="15.3876%" y="639.50"></text></g><g><title>tokio::park::thread::wake (1 samples, 0.09%)</title><rect x="15.1376%" y="613" width="0.0917%" height="15" fill="rgb(232,125,22)" fg:x="165" fg:w="1"/><text x="15.3876%" y="623.50"></text></g><g><title>tokio::park::thread::Inner::unpark (1 samples, 0.09%)</title><rect x="15.1376%" y="597" width="0.0917%" height="15" fill="rgb(244,57,34)" fg:x="165" fg:w="1"/><text x="15.3876%" y="607.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv (1 samples, 0.09%)</title><rect x="15.2294%" y="757" width="0.0917%" height="15" fill="rgb(214,203,32)" fg:x="166" fg:w="1"/><text x="15.4794%" y="767.50"></text></g><g><title>core::future::from_generator (1 samples, 0.09%)</title><rect x="15.2294%" y="741" width="0.0917%" height="15" fill="rgb(207,58,43)" fg:x="166" fg:w="1"/><text x="15.4794%" y="751.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (19 samples, 1.74%)</title><rect x="13.8532%" y="869" width="1.7431%" height="15" fill="rgb(215,193,15)" fg:x="151" fg:w="19"/><text x="14.1032%" y="879.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (19 samples, 1.74%)</title><rect x="13.8532%" y="853" width="1.7431%" height="15" fill="rgb(232,15,44)" fg:x="151" fg:w="19"/><text x="14.1032%" y="863.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (19 samples, 1.74%)</title><rect x="13.8532%" y="837" width="1.7431%" height="15" fill="rgb(212,3,48)" fg:x="151" fg:w="19"/><text x="14.1032%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 1.65%)</title><rect x="13.9450%" y="821" width="1.6514%" height="15" fill="rgb(218,128,7)" fg:x="152" fg:w="18"/><text x="14.1950%" y="831.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (17 samples, 1.56%)</title><rect x="14.0367%" y="805" width="1.5596%" height="15" fill="rgb(226,216,39)" fg:x="153" fg:w="17"/><text x="14.2867%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 1.47%)</title><rect x="14.1284%" y="789" width="1.4679%" height="15" fill="rgb(243,47,51)" fg:x="154" fg:w="16"/><text x="14.3784%" y="799.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}}::{{closure}} (15 samples, 1.38%)</title><rect x="14.2202%" y="773" width="1.3761%" height="15" fill="rgb(241,183,40)" fg:x="155" fg:w="15"/><text x="14.4702%" y="783.50"></text></g><g><title>sqlx_core::postgres::message::Message::decode (3 samples, 0.28%)</title><rect x="15.3211%" y="757" width="0.2752%" height="15" fill="rgb(231,217,32)" fg:x="167" fg:w="3"/><text x="15.5711%" y="767.50"></text></g><g><title>sqlx_core::io::decode::Decode::decode (3 samples, 0.28%)</title><rect x="15.3211%" y="741" width="0.2752%" height="15" fill="rgb(229,61,38)" fg:x="167" fg:w="3"/><text x="15.5711%" y="751.50"></text></g><g><title>&lt;sqlx_core::postgres::message::data_row::DataRow as sqlx_core::io::decode::Decode&gt;::decode_with (3 samples, 0.28%)</title><rect x="15.3211%" y="725" width="0.2752%" height="15" fill="rgb(225,210,5)" fg:x="167" fg:w="3"/><text x="15.5711%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.28%)</title><rect x="15.3211%" y="709" width="0.2752%" height="15" fill="rgb(231,79,45)" fg:x="167" fg:w="3"/><text x="15.5711%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.28%)</title><rect x="15.3211%" y="693" width="0.2752%" height="15" fill="rgb(224,100,7)" fg:x="167" fg:w="3"/><text x="15.5711%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.28%)</title><rect x="15.3211%" y="677" width="0.2752%" height="15" fill="rgb(241,198,18)" fg:x="167" fg:w="3"/><text x="15.5711%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.28%)</title><rect x="15.3211%" y="661" width="0.2752%" height="15" fill="rgb(252,97,53)" fg:x="167" fg:w="3"/><text x="15.5711%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.28%)</title><rect x="15.3211%" y="645" width="0.2752%" height="15" fill="rgb(220,88,7)" fg:x="167" fg:w="3"/><text x="15.5711%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.28%)</title><rect x="15.3211%" y="629" width="0.2752%" height="15" fill="rgb(213,176,14)" fg:x="167" fg:w="3"/><text x="15.5711%" y="639.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.28%)</title><rect x="15.3211%" y="613" width="0.2752%" height="15" fill="rgb(246,73,7)" fg:x="167" fg:w="3"/><text x="15.5711%" y="623.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.28%)</title><rect x="15.3211%" y="597" width="0.2752%" height="15" fill="rgb(245,64,36)" fg:x="167" fg:w="3"/><text x="15.5711%" y="607.50"></text></g><g><title>core::mem::drop (1 samples, 0.09%)</title><rect x="15.6881%" y="789" width="0.0917%" height="15" fill="rgb(245,80,10)" fg:x="171" fg:w="1"/><text x="15.9381%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;futures_channel::mpsc::queue::Node&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="15.6881%" y="773" width="0.0917%" height="15" fill="rgb(232,107,50)" fg:x="171" fg:w="1"/><text x="15.9381%" y="783.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.09%)</title><rect x="15.6881%" y="757" width="0.0917%" height="15" fill="rgb(253,3,0)" fg:x="171" fg:w="1"/><text x="15.9381%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="15.6881%" y="741" width="0.0917%" height="15" fill="rgb(212,99,53)" fg:x="171" fg:w="1"/><text x="15.9381%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="15.6881%" y="725" width="0.0917%" height="15" fill="rgb(249,111,54)" fg:x="171" fg:w="1"/><text x="15.9381%" y="735.50"></text></g><g><title>__free (1 samples, 0.09%)</title><rect x="15.6881%" y="709" width="0.0917%" height="15" fill="rgb(249,55,30)" fg:x="171" fg:w="1"/><text x="15.9381%" y="719.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="15.6881%" y="693" width="0.0917%" height="15" fill="rgb(237,47,42)" fg:x="171" fg:w="1"/><text x="15.9381%" y="703.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (2 samples, 0.18%)</title><rect x="15.6881%" y="837" width="0.1835%" height="15" fill="rgb(211,20,18)" fg:x="171" fg:w="2"/><text x="15.9381%" y="847.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (2 samples, 0.18%)</title><rect x="15.6881%" y="821" width="0.1835%" height="15" fill="rgb(231,203,46)" fg:x="171" fg:w="2"/><text x="15.9381%" y="831.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (2 samples, 0.18%)</title><rect x="15.6881%" y="805" width="0.1835%" height="15" fill="rgb(237,142,3)" fg:x="171" fg:w="2"/><text x="15.9381%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.09%)</title><rect x="15.7798%" y="789" width="0.0917%" height="15" fill="rgb(241,107,1)" fg:x="172" fg:w="1"/><text x="16.0298%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.09%)</title><rect x="15.7798%" y="773" width="0.0917%" height="15" fill="rgb(229,83,13)" fg:x="172" fg:w="1"/><text x="16.0298%" y="783.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (23 samples, 2.11%)</title><rect x="13.8532%" y="949" width="2.1101%" height="15" fill="rgb(241,91,40)" fg:x="151" fg:w="23"/><text x="14.1032%" y="959.50">&lt;..</text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (23 samples, 2.11%)</title><rect x="13.8532%" y="933" width="2.1101%" height="15" fill="rgb(225,3,45)" fg:x="151" fg:w="23"/><text x="14.1032%" y="943.50">f..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (23 samples, 2.11%)</title><rect x="13.8532%" y="917" width="2.1101%" height="15" fill="rgb(244,223,14)" fg:x="151" fg:w="23"/><text x="14.1032%" y="927.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (23 samples, 2.11%)</title><rect x="13.8532%" y="901" width="2.1101%" height="15" fill="rgb(224,124,37)" fg:x="151" fg:w="23"/><text x="14.1032%" y="911.50">&lt;..</text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (23 samples, 2.11%)</title><rect x="13.8532%" y="885" width="2.1101%" height="15" fill="rgb(251,171,30)" fg:x="151" fg:w="23"/><text x="14.1032%" y="895.50">&lt;..</text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.37%)</title><rect x="15.5963%" y="869" width="0.3670%" height="15" fill="rgb(236,46,54)" fg:x="170" fg:w="4"/><text x="15.8463%" y="879.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.37%)</title><rect x="15.5963%" y="853" width="0.3670%" height="15" fill="rgb(245,213,5)" fg:x="170" fg:w="4"/><text x="15.8463%" y="863.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (1 samples, 0.09%)</title><rect x="15.8716%" y="837" width="0.0917%" height="15" fill="rgb(230,144,27)" fg:x="173" fg:w="1"/><text x="16.1216%" y="847.50"></text></g><g><title>__free (1 samples, 0.09%)</title><rect x="15.9633%" y="949" width="0.0917%" height="15" fill="rgb(220,86,6)" fg:x="174" fg:w="1"/><text x="16.2133%" y="959.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="15.9633%" y="933" width="0.0917%" height="15" fill="rgb(240,20,13)" fg:x="174" fg:w="1"/><text x="16.2133%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::Sender&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="16.0550%" y="901" width="0.0917%" height="15" fill="rgb(217,89,34)" fg:x="175" fg:w="1"/><text x="16.3050%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;futures_channel::mpsc::BoundedSenderInner&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="16.0550%" y="885" width="0.0917%" height="15" fill="rgb(229,13,5)" fg:x="175" fg:w="1"/><text x="16.3050%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::BoundedSenderInner&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="16.0550%" y="869" width="0.0917%" height="15" fill="rgb(244,67,35)" fg:x="175" fg:w="1"/><text x="16.3050%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;futures_channel::mpsc::SenderTask&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="16.0550%" y="853" width="0.0917%" height="15" fill="rgb(221,40,2)" fg:x="175" fg:w="1"/><text x="16.3050%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="16.0550%" y="837" width="0.0917%" height="15" fill="rgb(237,157,21)" fg:x="175" fg:w="1"/><text x="16.3050%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (2 samples, 0.18%)</title><rect x="16.0550%" y="933" width="0.1835%" height="15" fill="rgb(222,94,11)" fg:x="175" fg:w="2"/><text x="16.3050%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (2 samples, 0.18%)</title><rect x="16.0550%" y="917" width="0.1835%" height="15" fill="rgb(249,113,6)" fg:x="175" fg:w="2"/><text x="16.3050%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::future::fuse::Fuse&lt;core::future::from_generator::GenFuture&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;&gt;::new&lt;sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}},core::future::from_generator::GenFuture&lt;sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="16.1468%" y="901" width="0.0917%" height="15" fill="rgb(238,137,36)" fg:x="176" fg:w="1"/><text x="16.3968%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::future::from_generator::GenFuture&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;&gt;::new&lt;sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}},core::future::from_generator::GenFuture&lt;sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="16.1468%" y="885" width="0.0917%" height="15" fill="rgb(210,102,26)" fg:x="176" fg:w="1"/><text x="16.3968%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;&gt;::new&lt;sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}},core::future::from_generator::GenFuture&lt;sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (1 samples, 0.09%)</title><rect x="16.1468%" y="869" width="0.0917%" height="15" fill="rgb(218,30,30)" fg:x="176" fg:w="1"/><text x="16.3968%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;&gt;::new&lt;sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}},core::future::from_generator::GenFuture&lt;sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt; (1 samples, 0.09%)</title><rect x="16.1468%" y="853" width="0.0917%" height="15" fill="rgb(214,67,26)" fg:x="176" fg:w="1"/><text x="16.3968%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.09%)</title><rect x="16.1468%" y="837" width="0.0917%" height="15" fill="rgb(251,9,53)" fg:x="176" fg:w="1"/><text x="16.3968%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}}::{{closure}}&gt; (1 samples, 0.09%)</title><rect x="16.1468%" y="821" width="0.0917%" height="15" fill="rgb(228,204,25)" fg:x="176" fg:w="1"/><text x="16.3968%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.09%)</title><rect x="16.1468%" y="805" width="0.0917%" height="15" fill="rgb(207,153,8)" fg:x="176" fg:w="1"/><text x="16.3968%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;futures_channel::mpsc::SenderTask&gt;&gt; (1 samples, 0.09%)</title><rect x="16.1468%" y="789" width="0.0917%" height="15" fill="rgb(242,9,16)" fg:x="176" fg:w="1"/><text x="16.3968%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::mutex::MovableMutex&gt; (1 samples, 0.09%)</title><rect x="16.1468%" y="773" width="0.0917%" height="15" fill="rgb(217,211,10)" fg:x="176" fg:w="1"/><text x="16.3968%" y="783.50"></text></g><g><title>&lt;std::sys_common::mutex::MovableMutex as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="16.1468%" y="757" width="0.0917%" height="15" fill="rgb(219,228,52)" fg:x="176" fg:w="1"/><text x="16.3968%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::destroy (1 samples, 0.09%)</title><rect x="16.1468%" y="741" width="0.0917%" height="15" fill="rgb(231,92,29)" fg:x="176" fg:w="1"/><text x="16.3968%" y="751.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (40 samples, 3.67%)</title><rect x="12.6606%" y="997" width="3.6697%" height="15" fill="rgb(232,8,23)" fg:x="138" fg:w="40"/><text x="12.9106%" y="1007.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (40 samples, 3.67%)</title><rect x="12.6606%" y="981" width="3.6697%" height="15" fill="rgb(216,211,34)" fg:x="138" fg:w="40"/><text x="12.9106%" y="991.50">&lt;cor..</text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_core::postgres::connection::PgConnection&gt;::fetch_optional::{{closure}} (40 samples, 3.67%)</title><rect x="12.6606%" y="965" width="3.6697%" height="15" fill="rgb(236,151,0)" fg:x="138" fg:w="40"/><text x="12.9106%" y="975.50">sqlx..</text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;&gt;&gt; (3 samples, 0.28%)</title><rect x="16.0550%" y="949" width="0.2752%" height="15" fill="rgb(209,168,3)" fg:x="175" fg:w="3"/><text x="16.3050%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::Receiver&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="16.2385%" y="933" width="0.0917%" height="15" fill="rgb(208,129,28)" fg:x="177" fg:w="1"/><text x="16.4885%" y="943.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="16.2385%" y="917" width="0.0917%" height="15" fill="rgb(229,78,22)" fg:x="177" fg:w="1"/><text x="16.4885%" y="927.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::close (1 samples, 0.09%)</title><rect x="16.2385%" y="901" width="0.0917%" height="15" fill="rgb(228,187,13)" fg:x="177" fg:w="1"/><text x="16.4885%" y="911.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (1 samples, 0.09%)</title><rect x="16.2385%" y="885" width="0.0917%" height="15" fill="rgb(240,119,24)" fg:x="177" fg:w="1"/><text x="16.4885%" y="895.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (1 samples, 0.09%)</title><rect x="16.2385%" y="869" width="0.0917%" height="15" fill="rgb(209,194,42)" fg:x="177" fg:w="1"/><text x="16.4885%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.09%)</title><rect x="16.2385%" y="853" width="0.0917%" height="15" fill="rgb(247,200,46)" fg:x="177" fg:w="1"/><text x="16.4885%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.09%)</title><rect x="16.2385%" y="837" width="0.0917%" height="15" fill="rgb(218,76,16)" fg:x="177" fg:w="1"/><text x="16.4885%" y="847.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="16.3303%" y="997" width="0.0917%" height="15" fill="rgb(225,21,48)" fg:x="178" fg:w="1"/><text x="16.5803%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;core::option::Option&lt;sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (2 samples, 0.18%)</title><rect x="16.4220%" y="997" width="0.1835%" height="15" fill="rgb(239,223,50)" fg:x="179" fg:w="2"/><text x="16.6720%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;core::option::Option&lt;sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (2 samples, 0.18%)</title><rect x="16.4220%" y="981" width="0.1835%" height="15" fill="rgb(244,45,21)" fg:x="179" fg:w="2"/><text x="16.6720%" y="991.50"></text></g><g><title>alloc::alloc::box_free (2 samples, 0.18%)</title><rect x="16.4220%" y="965" width="0.1835%" height="15" fill="rgb(232,33,43)" fg:x="179" fg:w="2"/><text x="16.6720%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.18%)</title><rect x="16.4220%" y="949" width="0.1835%" height="15" fill="rgb(209,8,3)" fg:x="179" fg:w="2"/><text x="16.6720%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.18%)</title><rect x="16.4220%" y="933" width="0.1835%" height="15" fill="rgb(214,25,53)" fg:x="179" fg:w="2"/><text x="16.6720%" y="943.50"></text></g><g><title>__free (2 samples, 0.18%)</title><rect x="16.4220%" y="917" width="0.1835%" height="15" fill="rgb(254,186,54)" fg:x="179" fg:w="2"/><text x="16.6720%" y="927.50"></text></g><g><title>_int_free (2 samples, 0.18%)</title><rect x="16.4220%" y="901" width="0.1835%" height="15" fill="rgb(208,174,49)" fg:x="179" fg:w="2"/><text x="16.6720%" y="911.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.09%)</title><rect x="16.5138%" y="885" width="0.0917%" height="15" fill="rgb(233,191,51)" fg:x="180" fg:w="1"/><text x="16.7638%" y="895.50"></text></g><g><title>sqlx_core::pool::connection::PoolConnection&lt;DB&gt;::return_to_pool (1 samples, 0.09%)</title><rect x="16.6972%" y="965" width="0.0917%" height="15" fill="rgb(222,134,10)" fg:x="182" fg:w="1"/><text x="16.9472%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.09%)</title><rect x="16.6972%" y="949" width="0.0917%" height="15" fill="rgb(230,226,20)" fg:x="182" fg:w="1"/><text x="16.9472%" y="959.50"></text></g><g><title>core::mem::replace (1 samples, 0.09%)</title><rect x="16.6972%" y="933" width="0.0917%" height="15" fill="rgb(251,111,25)" fg:x="182" fg:w="1"/><text x="16.9472%" y="943.50"></text></g><g><title>core::ptr::read (1 samples, 0.09%)</title><rect x="16.6972%" y="917" width="0.0917%" height="15" fill="rgb(224,40,46)" fg:x="182" fg:w="1"/><text x="16.9472%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="16.6972%" y="901" width="0.0917%" height="15" fill="rgb(236,108,47)" fg:x="182" fg:w="1"/><text x="16.9472%" y="911.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn (2 samples, 0.18%)</title><rect x="16.7890%" y="965" width="0.1835%" height="15" fill="rgb(234,93,0)" fg:x="183" fg:w="2"/><text x="17.0390%" y="975.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (2 samples, 0.18%)</title><rect x="16.7890%" y="949" width="0.1835%" height="15" fill="rgb(224,213,32)" fg:x="183" fg:w="2"/><text x="17.0390%" y="959.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (2 samples, 0.18%)</title><rect x="16.7890%" y="933" width="0.1835%" height="15" fill="rgb(251,11,48)" fg:x="183" fg:w="2"/><text x="17.0390%" y="943.50"></text></g><g><title>__memmove_avx_unaligned (1 samples, 0.09%)</title><rect x="16.8807%" y="917" width="0.0917%" height="15" fill="rgb(236,173,5)" fg:x="184" fg:w="1"/><text x="17.1307%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_core::postgres::database::Postgres&gt;&gt; (5 samples, 0.46%)</title><rect x="16.6055%" y="997" width="0.4587%" height="15" fill="rgb(230,95,12)" fg:x="181" fg:w="5"/><text x="16.8555%" y="1007.50"></text></g><g><title>&lt;sqlx_core::pool::connection::PoolConnection&lt;DB&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.46%)</title><rect x="16.6055%" y="981" width="0.4587%" height="15" fill="rgb(232,209,1)" fg:x="181" fg:w="5"/><text x="16.8555%" y="991.50"></text></g><g><title>tokio::runtime::handle::Handle::try_current (1 samples, 0.09%)</title><rect x="16.9725%" y="965" width="0.0917%" height="15" fill="rgb(232,6,1)" fg:x="185" fg:w="1"/><text x="17.2225%" y="975.50"></text></g><g><title>tokio::runtime::context::try_current (1 samples, 0.09%)</title><rect x="16.9725%" y="949" width="0.0917%" height="15" fill="rgb(210,224,50)" fg:x="185" fg:w="1"/><text x="17.2225%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.09%)</title><rect x="16.9725%" y="933" width="0.0917%" height="15" fill="rgb(228,127,35)" fg:x="185" fg:w="1"/><text x="17.2225%" y="943.50"></text></g><g><title>tokio::runtime::context::try_current::{{closure}} (1 samples, 0.09%)</title><rect x="16.9725%" y="917" width="0.0917%" height="15" fill="rgb(245,102,45)" fg:x="185" fg:w="1"/><text x="17.2225%" y="927.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="16.9725%" y="901" width="0.0917%" height="15" fill="rgb(214,1,49)" fg:x="185" fg:w="1"/><text x="17.2225%" y="911.50"></text></g><g><title>&lt;tokio::runtime::handle::Handle as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="16.9725%" y="885" width="0.0917%" height="15" fill="rgb(226,163,40)" fg:x="185" fg:w="1"/><text x="17.2225%" y="895.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="16.9725%" y="869" width="0.0917%" height="15" fill="rgb(239,212,28)" fg:x="185" fg:w="1"/><text x="17.2225%" y="879.50"></text></g><g><title>&lt;tokio::signal::unix::driver::Handle as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="16.9725%" y="853" width="0.0917%" height="15" fill="rgb(220,20,13)" fg:x="185" fg:w="1"/><text x="17.2225%" y="863.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="16.9725%" y="837" width="0.0917%" height="15" fill="rgb(210,164,35)" fg:x="185" fg:w="1"/><text x="17.2225%" y="847.50"></text></g><g><title>&lt;sqlx_core::query::Query&lt;DB,A&gt; as sqlx_core::executor::Execute&lt;DB&gt;&gt;::take_arguments (4 samples, 0.37%)</title><rect x="17.0642%" y="981" width="0.3670%" height="15" fill="rgb(248,109,41)" fg:x="186" fg:w="4"/><text x="17.3142%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.37%)</title><rect x="17.0642%" y="965" width="0.3670%" height="15" fill="rgb(238,23,50)" fg:x="186" fg:w="4"/><text x="17.3142%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.28%)</title><rect x="17.1560%" y="949" width="0.2752%" height="15" fill="rgb(211,48,49)" fg:x="187" fg:w="3"/><text x="17.4060%" y="959.50"></text></g><g><title>sqlx_core::postgres::&lt;impl sqlx_core::arguments::IntoArguments&lt;&lt;sqlx_core::postgres::arguments::PgArguments as sqlx_core::arguments::Arguments&gt;::Database&gt; for sqlx_core::postgres::arguments::PgArguments&gt;::into_arguments (3 samples, 0.28%)</title><rect x="17.1560%" y="933" width="0.2752%" height="15" fill="rgb(223,36,21)" fg:x="187" fg:w="3"/><text x="17.4060%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (59 samples, 5.41%)</title><rect x="12.1101%" y="1045" width="5.4128%" height="15" fill="rgb(207,123,46)" fg:x="132" fg:w="59"/><text x="12.3601%" y="1055.50">&lt;core::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (59 samples, 5.41%)</title><rect x="12.1101%" y="1029" width="5.4128%" height="15" fill="rgb(240,218,32)" fg:x="132" fg:w="59"/><text x="12.3601%" y="1039.50">&lt;core::..</text></g><g><title>sqlx_core::pool::executor::&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_optional::{{closure}} (56 samples, 5.14%)</title><rect x="12.3853%" y="1013" width="5.1376%" height="15" fill="rgb(252,5,43)" fg:x="135" fg:w="56"/><text x="12.6353%" y="1023.50">sqlx_c..</text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_core::postgres::connection::PgConnection&gt;::fetch_optional (5 samples, 0.46%)</title><rect x="17.0642%" y="997" width="0.4587%" height="15" fill="rgb(252,84,19)" fg:x="186" fg:w="5"/><text x="17.3142%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.09%)</title><rect x="17.4312%" y="981" width="0.0917%" height="15" fill="rgb(243,152,39)" fg:x="190" fg:w="1"/><text x="17.6812%" y="991.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.09%)</title><rect x="17.4312%" y="965" width="0.0917%" height="15" fill="rgb(234,160,15)" fg:x="190" fg:w="1"/><text x="17.6812%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="17.4312%" y="949" width="0.0917%" height="15" fill="rgb(237,34,20)" fg:x="190" fg:w="1"/><text x="17.6812%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="17.4312%" y="933" width="0.0917%" height="15" fill="rgb(229,97,13)" fg:x="190" fg:w="1"/><text x="17.6812%" y="943.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="17.4312%" y="917" width="0.0917%" height="15" fill="rgb(234,71,50)" fg:x="190" fg:w="1"/><text x="17.6812%" y="927.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="17.4312%" y="901" width="0.0917%" height="15" fill="rgb(253,155,4)" fg:x="190" fg:w="1"/><text x="17.6812%" y="911.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="17.4312%" y="885" width="0.0917%" height="15" fill="rgb(222,185,37)" fg:x="190" fg:w="1"/><text x="17.6812%" y="895.50"></text></g><g><title>backend::get_abbrev::{{closure}}::{{closure}} (2 samples, 0.18%)</title><rect x="17.5229%" y="1045" width="0.1835%" height="15" fill="rgb(251,177,13)" fg:x="191" fg:w="2"/><text x="17.7729%" y="1055.50"></text></g><g><title>sqlx_core::row::Row::try_get_unchecked (2 samples, 0.18%)</title><rect x="17.5229%" y="1029" width="0.1835%" height="15" fill="rgb(250,179,40)" fg:x="191" fg:w="2"/><text x="17.7729%" y="1039.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as sqlx_core::decode::Decode&lt;DB&gt;&gt;::decode (2 samples, 0.18%)</title><rect x="17.5229%" y="1013" width="0.1835%" height="15" fill="rgb(242,44,2)" fg:x="191" fg:w="2"/><text x="17.7729%" y="1023.50"></text></g><g><title>sqlx_core::postgres::types::str::&lt;impl sqlx_core::decode::Decode&lt;sqlx_core::postgres::database::Postgres&gt; for alloc::string::String&gt;::decode (1 samples, 0.09%)</title><rect x="17.6147%" y="997" width="0.0917%" height="15" fill="rgb(216,177,13)" fg:x="192" fg:w="1"/><text x="17.8647%" y="1007.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.09%)</title><rect x="17.6147%" y="981" width="0.0917%" height="15" fill="rgb(216,106,43)" fg:x="192" fg:w="1"/><text x="17.8647%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.09%)</title><rect x="17.6147%" y="965" width="0.0917%" height="15" fill="rgb(216,183,2)" fg:x="192" fg:w="1"/><text x="17.8647%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.09%)</title><rect x="17.6147%" y="949" width="0.0917%" height="15" fill="rgb(249,75,3)" fg:x="192" fg:w="1"/><text x="17.8647%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.09%)</title><rect x="17.6147%" y="933" width="0.0917%" height="15" fill="rgb(219,67,39)" fg:x="192" fg:w="1"/><text x="17.8647%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.09%)</title><rect x="17.6147%" y="917" width="0.0917%" height="15" fill="rgb(253,228,2)" fg:x="192" fg:w="1"/><text x="17.8647%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.09%)</title><rect x="17.6147%" y="901" width="0.0917%" height="15" fill="rgb(235,138,27)" fg:x="192" fg:w="1"/><text x="17.8647%" y="911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.09%)</title><rect x="17.6147%" y="885" width="0.0917%" height="15" fill="rgb(236,97,51)" fg:x="192" fg:w="1"/><text x="17.8647%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.09%)</title><rect x="17.6147%" y="869" width="0.0917%" height="15" fill="rgb(240,80,30)" fg:x="192" fg:w="1"/><text x="17.8647%" y="879.50"></text></g><g><title>__memmove_avx_unaligned (1 samples, 0.09%)</title><rect x="17.6147%" y="853" width="0.0917%" height="15" fill="rgb(230,178,19)" fg:x="192" fg:w="1"/><text x="17.8647%" y="863.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (66 samples, 6.06%)</title><rect x="11.8349%" y="1109" width="6.0550%" height="15" fill="rgb(210,190,27)" fg:x="129" fg:w="66"/><text x="12.0849%" y="1119.50">&lt;futures..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (66 samples, 6.06%)</title><rect x="11.8349%" y="1093" width="6.0550%" height="15" fill="rgb(222,107,31)" fg:x="129" fg:w="66"/><text x="12.0849%" y="1103.50">&lt;F as fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (66 samples, 6.06%)</title><rect x="11.8349%" y="1077" width="6.0550%" height="15" fill="rgb(216,127,34)" fg:x="129" fg:w="66"/><text x="12.0849%" y="1087.50">&lt;core::f..</text></g><g><title>sqlx_core::query::Map&lt;DB,F,A&gt;::fetch_optional::{{closure}} (63 samples, 5.78%)</title><rect x="12.1101%" y="1061" width="5.7798%" height="15" fill="rgb(234,116,52)" fg:x="132" fg:w="63"/><text x="12.3601%" y="1071.50">sqlx_co..</text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;core::option::Option&lt;sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (2 samples, 0.18%)</title><rect x="17.7064%" y="1045" width="0.1835%" height="15" fill="rgb(222,124,15)" fg:x="193" fg:w="2"/><text x="17.9564%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;core::option::Option&lt;sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (2 samples, 0.18%)</title><rect x="17.7064%" y="1029" width="0.1835%" height="15" fill="rgb(231,179,28)" fg:x="193" fg:w="2"/><text x="17.9564%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;sqlx_core::pool::executor::&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;sqlx_core::postgres::database::Postgres&gt;&gt;::fetch_optional&lt;sqlx_core::query::Query&lt;sqlx_core::postgres::database::Postgres,sqlx_core::postgres::arguments::PgArguments&gt;&gt;::{{closure}}&gt;&gt; (2 samples, 0.18%)</title><rect x="17.7064%" y="1013" width="0.1835%" height="15" fill="rgb(226,93,45)" fg:x="193" fg:w="2"/><text x="17.9564%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (70 samples, 6.42%)</title><rect x="11.5596%" y="1253" width="6.4220%" height="15" fill="rgb(215,8,51)" fg:x="126" fg:w="70"/><text x="11.8096%" y="1263.50">&lt;core::f..</text></g><g><title>sqlx_core::query::Map&lt;DB,F,A&gt;::fetch_one::{{closure}} (70 samples, 6.42%)</title><rect x="11.5596%" y="1237" width="6.4220%" height="15" fill="rgb(223,106,5)" fg:x="126" fg:w="70"/><text x="11.8096%" y="1247.50">sqlx_cor..</text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (70 samples, 6.42%)</title><rect x="11.5596%" y="1221" width="6.4220%" height="15" fill="rgb(250,191,5)" fg:x="126" fg:w="70"/><text x="11.8096%" y="1231.50">&lt;futures..</text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (69 samples, 6.33%)</title><rect x="11.6514%" y="1205" width="6.3303%" height="15" fill="rgb(242,132,44)" fg:x="127" fg:w="69"/><text x="11.9014%" y="1215.50">&lt;futures..</text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (69 samples, 6.33%)</title><rect x="11.6514%" y="1189" width="6.3303%" height="15" fill="rgb(251,152,29)" fg:x="127" fg:w="69"/><text x="11.9014%" y="1199.50">&lt;futures..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (68 samples, 6.24%)</title><rect x="11.7431%" y="1173" width="6.2385%" height="15" fill="rgb(218,179,5)" fg:x="128" fg:w="68"/><text x="11.9931%" y="1183.50">&lt;F as fu..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (68 samples, 6.24%)</title><rect x="11.7431%" y="1157" width="6.2385%" height="15" fill="rgb(227,67,19)" fg:x="128" fg:w="68"/><text x="11.9931%" y="1167.50">&lt;futures..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (68 samples, 6.24%)</title><rect x="11.7431%" y="1141" width="6.2385%" height="15" fill="rgb(233,119,31)" fg:x="128" fg:w="68"/><text x="11.9931%" y="1151.50">&lt;futures..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (68 samples, 6.24%)</title><rect x="11.7431%" y="1125" width="6.2385%" height="15" fill="rgb(241,120,22)" fg:x="128" fg:w="68"/><text x="11.9931%" y="1135.50">&lt;futures..</text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project (1 samples, 0.09%)</title><rect x="17.8899%" y="1109" width="0.0917%" height="15" fill="rgb(224,102,30)" fg:x="195" fg:w="1"/><text x="18.1399%" y="1119.50"></text></g><g><title>&lt;futures_util::future::join_all::JoinAll&lt;F&gt; as core::future::future::Future&gt;::poll (79 samples, 7.25%)</title><rect x="10.8257%" y="1317" width="7.2477%" height="15" fill="rgb(210,164,37)" fg:x="118" fg:w="79"/><text x="11.0757%" y="1327.50">&lt;futures_u..</text></g><g><title>&lt;futures_util::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (78 samples, 7.16%)</title><rect x="10.9174%" y="1301" width="7.1560%" height="15" fill="rgb(226,191,16)" fg:x="119" fg:w="78"/><text x="11.1674%" y="1311.50">&lt;futures_u..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (78 samples, 7.16%)</title><rect x="10.9174%" y="1285" width="7.1560%" height="15" fill="rgb(214,40,45)" fg:x="119" fg:w="78"/><text x="11.1674%" y="1295.50">&lt;core::fut..</text></g><g><title>backend::get_abbrev::{{closure}} (75 samples, 6.88%)</title><rect x="11.1927%" y="1269" width="6.8807%" height="15" fill="rgb(244,29,26)" fg:x="122" fg:w="75"/><text x="11.4427%" y="1279.50">backend::..</text></g><g><title>&lt;sqlx_core::postgres::arguments::PgArguments as sqlx_core::arguments::Arguments&gt;::add (1 samples, 0.09%)</title><rect x="17.9817%" y="1253" width="0.0917%" height="15" fill="rgb(216,16,5)" fg:x="196" fg:w="1"/><text x="18.2317%" y="1263.50"></text></g><g><title>&lt;sqlx_core::postgres::arguments::PgArguments as sqlx_core::arguments::Arguments&gt;::add (1 samples, 0.09%)</title><rect x="18.0734%" y="1317" width="0.0917%" height="15" fill="rgb(249,76,35)" fg:x="197" fg:w="1"/><text x="18.3234%" y="1327.50"></text></g><g><title>sqlx_core::postgres::arguments::PgArguments::add (1 samples, 0.09%)</title><rect x="18.0734%" y="1301" width="0.0917%" height="15" fill="rgb(207,11,44)" fg:x="197" fg:w="1"/><text x="18.3234%" y="1311.50"></text></g><g><title>sqlx_core::postgres::arguments::PgArgumentBuffer::encode (1 samples, 0.09%)</title><rect x="18.0734%" y="1285" width="0.0917%" height="15" fill="rgb(228,190,49)" fg:x="197" fg:w="1"/><text x="18.3234%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.09%)</title><rect x="18.0734%" y="1269" width="0.0917%" height="15" fill="rgb(214,173,12)" fg:x="197" fg:w="1"/><text x="18.3234%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.09%)</title><rect x="18.0734%" y="1253" width="0.0917%" height="15" fill="rgb(218,26,35)" fg:x="197" fg:w="1"/><text x="18.3234%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.09%)</title><rect x="18.0734%" y="1237" width="0.0917%" height="15" fill="rgb(220,200,19)" fg:x="197" fg:w="1"/><text x="18.3234%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.09%)</title><rect x="18.0734%" y="1221" width="0.0917%" height="15" fill="rgb(239,95,49)" fg:x="197" fg:w="1"/><text x="18.3234%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.09%)</title><rect x="18.0734%" y="1205" width="0.0917%" height="15" fill="rgb(235,85,53)" fg:x="197" fg:w="1"/><text x="18.3234%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.09%)</title><rect x="18.0734%" y="1189" width="0.0917%" height="15" fill="rgb(233,133,31)" fg:x="197" fg:w="1"/><text x="18.3234%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.09%)</title><rect x="18.0734%" y="1173" width="0.0917%" height="15" fill="rgb(218,25,20)" fg:x="197" fg:w="1"/><text x="18.3234%" y="1183.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="18.0734%" y="1157" width="0.0917%" height="15" fill="rgb(252,210,38)" fg:x="197" fg:w="1"/><text x="18.3234%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.09%)</title><rect x="18.0734%" y="1141" width="0.0917%" height="15" fill="rgb(242,134,21)" fg:x="197" fg:w="1"/><text x="18.3234%" y="1151.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.09%)</title><rect x="18.0734%" y="1125" width="0.0917%" height="15" fill="rgb(213,28,48)" fg:x="197" fg:w="1"/><text x="18.3234%" y="1135.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.09%)</title><rect x="18.0734%" y="1109" width="0.0917%" height="15" fill="rgb(250,196,2)" fg:x="197" fg:w="1"/><text x="18.3234%" y="1119.50"></text></g><g><title>__rdl_realloc (1 samples, 0.09%)</title><rect x="18.0734%" y="1093" width="0.0917%" height="15" fill="rgb(227,5,17)" fg:x="197" fg:w="1"/><text x="18.3234%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::result::Result&lt;core::option::Option&lt;alloc::string::String&gt;,anyhow::Error&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="18.1651%" y="1317" width="0.0917%" height="15" fill="rgb(221,226,24)" fg:x="198" fg:w="1"/><text x="18.4151%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="18.1651%" y="1301" width="0.0917%" height="15" fill="rgb(211,5,48)" fg:x="198" fg:w="1"/><text x="18.4151%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::result::Result&lt;core::option::Option&lt;alloc::string::String&gt;,anyhow::Error&gt;]&gt; (1 samples, 0.09%)</title><rect x="18.1651%" y="1285" width="0.0917%" height="15" fill="rgb(219,150,6)" fg:x="198" fg:w="1"/><text x="18.4151%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;core::option::Option&lt;alloc::string::String&gt;,anyhow::Error&gt;&gt; (1 samples, 0.09%)</title><rect x="18.1651%" y="1269" width="0.0917%" height="15" fill="rgb(251,46,16)" fg:x="198" fg:w="1"/><text x="18.4151%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.09%)</title><rect x="18.1651%" y="1253" width="0.0917%" height="15" fill="rgb(220,204,40)" fg:x="198" fg:w="1"/><text x="18.4151%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.09%)</title><rect x="18.1651%" y="1237" width="0.0917%" height="15" fill="rgb(211,85,2)" fg:x="198" fg:w="1"/><text x="18.4151%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.09%)</title><rect x="18.1651%" y="1221" width="0.0917%" height="15" fill="rgb(229,17,7)" fg:x="198" fg:w="1"/><text x="18.4151%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.09%)</title><rect x="18.1651%" y="1205" width="0.0917%" height="15" fill="rgb(239,72,28)" fg:x="198" fg:w="1"/><text x="18.4151%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="18.1651%" y="1189" width="0.0917%" height="15" fill="rgb(230,47,54)" fg:x="198" fg:w="1"/><text x="18.4151%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="18.1651%" y="1173" width="0.0917%" height="15" fill="rgb(214,50,8)" fg:x="198" fg:w="1"/><text x="18.4151%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="18.1651%" y="1157" width="0.0917%" height="15" fill="rgb(216,198,43)" fg:x="198" fg:w="1"/><text x="18.4151%" y="1167.50"></text></g><g><title>__free (1 samples, 0.09%)</title><rect x="18.1651%" y="1141" width="0.0917%" height="15" fill="rgb(234,20,35)" fg:x="198" fg:w="1"/><text x="18.4151%" y="1151.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="18.1651%" y="1125" width="0.0917%" height="15" fill="rgb(254,45,19)" fg:x="198" fg:w="1"/><text x="18.4151%" y="1135.50"></text></g><g><title>futures_util::future::join_all::join_all (2 samples, 0.18%)</title><rect x="18.2569%" y="1317" width="0.1835%" height="15" fill="rgb(219,14,44)" fg:x="199" fg:w="2"/><text x="18.5069%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.18%)</title><rect x="18.2569%" y="1301" width="0.1835%" height="15" fill="rgb(217,220,26)" fg:x="199" fg:w="2"/><text x="18.5069%" y="1311.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (2 samples, 0.18%)</title><rect x="18.2569%" y="1285" width="0.1835%" height="15" fill="rgb(213,158,28)" fg:x="199" fg:w="2"/><text x="18.5069%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.18%)</title><rect x="18.2569%" y="1269" width="0.1835%" height="15" fill="rgb(252,51,52)" fg:x="199" fg:w="2"/><text x="18.5069%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.18%)</title><rect x="18.2569%" y="1253" width="0.1835%" height="15" fill="rgb(246,89,16)" fg:x="199" fg:w="2"/><text x="18.5069%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.18%)</title><rect x="18.2569%" y="1237" width="0.1835%" height="15" fill="rgb(216,158,49)" fg:x="199" fg:w="2"/><text x="18.5069%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.18%)</title><rect x="18.2569%" y="1221" width="0.1835%" height="15" fill="rgb(236,107,19)" fg:x="199" fg:w="2"/><text x="18.5069%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.18%)</title><rect x="18.2569%" y="1205" width="0.1835%" height="15" fill="rgb(228,185,30)" fg:x="199" fg:w="2"/><text x="18.5069%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.18%)</title><rect x="18.2569%" y="1189" width="0.1835%" height="15" fill="rgb(246,134,8)" fg:x="199" fg:w="2"/><text x="18.5069%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.18%)</title><rect x="18.2569%" y="1173" width="0.1835%" height="15" fill="rgb(214,143,50)" fg:x="199" fg:w="2"/><text x="18.5069%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.18%)</title><rect x="18.2569%" y="1157" width="0.1835%" height="15" fill="rgb(228,75,8)" fg:x="199" fg:w="2"/><text x="18.5069%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.18%)</title><rect x="18.2569%" y="1141" width="0.1835%" height="15" fill="rgb(207,175,4)" fg:x="199" fg:w="2"/><text x="18.5069%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.18%)</title><rect x="18.2569%" y="1125" width="0.1835%" height="15" fill="rgb(205,108,24)" fg:x="199" fg:w="2"/><text x="18.5069%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.18%)</title><rect x="18.2569%" y="1109" width="0.1835%" height="15" fill="rgb(244,120,49)" fg:x="199" fg:w="2"/><text x="18.5069%" y="1119.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.18%)</title><rect x="18.2569%" y="1093" width="0.1835%" height="15" fill="rgb(223,47,38)" fg:x="199" fg:w="2"/><text x="18.5069%" y="1103.50"></text></g><g><title>_int_malloc (2 samples, 0.18%)</title><rect x="18.2569%" y="1077" width="0.1835%" height="15" fill="rgb(229,179,11)" fg:x="199" fg:w="2"/><text x="18.5069%" y="1087.50"></text></g><g><title>malloc_consolidate (1 samples, 0.09%)</title><rect x="18.3486%" y="1061" width="0.0917%" height="15" fill="rgb(231,122,1)" fg:x="200" fg:w="1"/><text x="18.5986%" y="1071.50"></text></g><g><title>core::fmt::Formatter::debug_list (1 samples, 0.09%)</title><rect x="18.4404%" y="1189" width="0.0917%" height="15" fill="rgb(245,119,9)" fg:x="201" fg:w="1"/><text x="18.6904%" y="1199.50"></text></g><g><title>core::fmt::builders::debug_list_new (1 samples, 0.09%)</title><rect x="18.4404%" y="1173" width="0.0917%" height="15" fill="rgb(241,163,25)" fg:x="201" fg:w="1"/><text x="18.6904%" y="1183.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.09%)</title><rect x="18.4404%" y="1157" width="0.0917%" height="15" fill="rgb(217,214,3)" fg:x="201" fg:w="1"/><text x="18.6904%" y="1167.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.09%)</title><rect x="18.4404%" y="1141" width="0.0917%" height="15" fill="rgb(240,86,28)" fg:x="201" fg:w="1"/><text x="18.6904%" y="1151.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.09%)</title><rect x="18.4404%" y="1125" width="0.0917%" height="15" fill="rgb(215,47,9)" fg:x="201" fg:w="1"/><text x="18.6904%" y="1135.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.09%)</title><rect x="18.4404%" y="1109" width="0.0917%" height="15" fill="rgb(252,25,45)" fg:x="201" fg:w="1"/><text x="18.6904%" y="1119.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.09%)</title><rect x="18.4404%" y="1093" width="0.0917%" height="15" fill="rgb(251,164,9)" fg:x="201" fg:w="1"/><text x="18.6904%" y="1103.50"></text></g><g><title>std::sys_common::memchr::memrchr (1 samples, 0.09%)</title><rect x="18.4404%" y="1077" width="0.0917%" height="15" fill="rgb(233,194,0)" fg:x="201" fg:w="1"/><text x="18.6904%" y="1087.50"></text></g><g><title>std::sys::unix::memchr::memrchr (1 samples, 0.09%)</title><rect x="18.4404%" y="1061" width="0.0917%" height="15" fill="rgb(249,111,24)" fg:x="201" fg:w="1"/><text x="18.6904%" y="1071.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (1 samples, 0.09%)</title><rect x="18.4404%" y="1045" width="0.0917%" height="15" fill="rgb(250,223,3)" fg:x="201" fg:w="1"/><text x="18.6904%" y="1055.50"></text></g><g><title>__memrchr_avx2 (1 samples, 0.09%)</title><rect x="18.4404%" y="1029" width="0.0917%" height="15" fill="rgb(236,178,37)" fg:x="201" fg:w="1"/><text x="18.6904%" y="1039.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.09%)</title><rect x="18.7156%" y="1093" width="0.0917%" height="15" fill="rgb(241,158,50)" fg:x="204" fg:w="1"/><text x="18.9656%" y="1103.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (1 samples, 0.09%)</title><rect x="18.7156%" y="1077" width="0.0917%" height="15" fill="rgb(213,121,41)" fg:x="204" fg:w="1"/><text x="18.9656%" y="1087.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.09%)</title><rect x="18.7156%" y="1061" width="0.0917%" height="15" fill="rgb(240,92,3)" fg:x="204" fg:w="1"/><text x="18.9656%" y="1071.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (1 samples, 0.09%)</title><rect x="18.7156%" y="1045" width="0.0917%" height="15" fill="rgb(205,123,3)" fg:x="204" fg:w="1"/><text x="18.9656%" y="1055.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.09%)</title><rect x="18.7156%" y="1029" width="0.0917%" height="15" fill="rgb(205,97,47)" fg:x="204" fg:w="1"/><text x="18.9656%" y="1039.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::fmt::Debug&gt;::fmt (1 samples, 0.09%)</title><rect x="18.7156%" y="1013" width="0.0917%" height="15" fill="rgb(247,152,14)" fg:x="204" fg:w="1"/><text x="18.9656%" y="1023.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (1 samples, 0.09%)</title><rect x="18.7156%" y="997" width="0.0917%" height="15" fill="rgb(248,195,53)" fg:x="204" fg:w="1"/><text x="18.9656%" y="1007.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.09%)</title><rect x="18.7156%" y="981" width="0.0917%" height="15" fill="rgb(226,201,16)" fg:x="204" fg:w="1"/><text x="18.9656%" y="991.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (1 samples, 0.09%)</title><rect x="18.7156%" y="965" width="0.0917%" height="15" fill="rgb(205,98,0)" fg:x="204" fg:w="1"/><text x="18.9656%" y="975.50"></text></g><g><title>&lt;str as core::fmt::Debug&gt;::fmt (1 samples, 0.09%)</title><rect x="18.7156%" y="949" width="0.0917%" height="15" fill="rgb(214,191,48)" fg:x="204" fg:w="1"/><text x="18.9656%" y="959.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::escape_debug_ext (1 samples, 0.09%)</title><rect x="18.7156%" y="933" width="0.0917%" height="15" fill="rgb(237,112,39)" fg:x="204" fg:w="1"/><text x="18.9656%" y="943.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_grapheme_extended (1 samples, 0.09%)</title><rect x="18.7156%" y="917" width="0.0917%" height="15" fill="rgb(247,203,27)" fg:x="204" fg:w="1"/><text x="18.9656%" y="927.50"></text></g><g><title>core::unicode::unicode_data::grapheme_extend::lookup (1 samples, 0.09%)</title><rect x="18.7156%" y="901" width="0.0917%" height="15" fill="rgb(235,124,28)" fg:x="204" fg:w="1"/><text x="18.9656%" y="911.50"></text></g><g><title>core::unicode::unicode_data::skip_search (1 samples, 0.09%)</title><rect x="18.7156%" y="885" width="0.0917%" height="15" fill="rgb(208,207,46)" fg:x="204" fg:w="1"/><text x="18.9656%" y="895.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.09%)</title><rect x="18.8073%" y="1029" width="0.0917%" height="15" fill="rgb(234,176,4)" fg:x="205" fg:w="1"/><text x="19.0573%" y="1039.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.09%)</title><rect x="18.8991%" y="1029" width="0.0917%" height="15" fill="rgb(230,133,28)" fg:x="206" fg:w="1"/><text x="19.1491%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (178 samples, 16.33%)</title><rect x="2.7523%" y="1349" width="16.3303%" height="15" fill="rgb(211,137,40)" fg:x="30" fg:w="178"/><text x="3.0023%" y="1359.50">&lt;core::future::from_gener..</text></g><g><title>backend::occupancy::{{closure}} (178 samples, 16.33%)</title><rect x="2.7523%" y="1333" width="16.3303%" height="15" fill="rgb(254,35,13)" fg:x="30" fg:w="178"/><text x="3.0023%" y="1343.50">backend::occupancy::{{clo..</text></g><g><title>std::io::stdio::_print (7 samples, 0.64%)</title><rect x="18.4404%" y="1317" width="0.6422%" height="15" fill="rgb(225,49,51)" fg:x="201" fg:w="7"/><text x="18.6904%" y="1327.50"></text></g><g><title>std::io::stdio::print_to (7 samples, 0.64%)</title><rect x="18.4404%" y="1301" width="0.6422%" height="15" fill="rgb(251,10,15)" fg:x="201" fg:w="7"/><text x="18.6904%" y="1311.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (7 samples, 0.64%)</title><rect x="18.4404%" y="1285" width="0.6422%" height="15" fill="rgb(228,207,15)" fg:x="201" fg:w="7"/><text x="18.6904%" y="1295.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (7 samples, 0.64%)</title><rect x="18.4404%" y="1269" width="0.6422%" height="15" fill="rgb(241,99,19)" fg:x="201" fg:w="7"/><text x="18.6904%" y="1279.50"></text></g><g><title>std::io::Write::write_fmt (7 samples, 0.64%)</title><rect x="18.4404%" y="1253" width="0.6422%" height="15" fill="rgb(207,104,49)" fg:x="201" fg:w="7"/><text x="18.6904%" y="1263.50"></text></g><g><title>core::fmt::write (7 samples, 0.64%)</title><rect x="18.4404%" y="1237" width="0.6422%" height="15" fill="rgb(234,99,18)" fg:x="201" fg:w="7"/><text x="18.6904%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (7 samples, 0.64%)</title><rect x="18.4404%" y="1221" width="0.6422%" height="15" fill="rgb(213,191,49)" fg:x="201" fg:w="7"/><text x="18.6904%" y="1231.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (7 samples, 0.64%)</title><rect x="18.4404%" y="1205" width="0.6422%" height="15" fill="rgb(210,226,19)" fg:x="201" fg:w="7"/><text x="18.6904%" y="1215.50"></text></g><g><title>core::fmt::builders::DebugList::entries (6 samples, 0.55%)</title><rect x="18.5321%" y="1189" width="0.5505%" height="15" fill="rgb(229,97,18)" fg:x="202" fg:w="6"/><text x="18.7821%" y="1199.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (6 samples, 0.55%)</title><rect x="18.5321%" y="1173" width="0.5505%" height="15" fill="rgb(211,167,15)" fg:x="202" fg:w="6"/><text x="18.7821%" y="1183.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (6 samples, 0.55%)</title><rect x="18.5321%" y="1157" width="0.5505%" height="15" fill="rgb(210,169,34)" fg:x="202" fg:w="6"/><text x="18.7821%" y="1167.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (5 samples, 0.46%)</title><rect x="18.6239%" y="1141" width="0.4587%" height="15" fill="rgb(241,121,31)" fg:x="203" fg:w="5"/><text x="18.8739%" y="1151.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (5 samples, 0.46%)</title><rect x="18.6239%" y="1125" width="0.4587%" height="15" fill="rgb(232,40,11)" fg:x="203" fg:w="5"/><text x="18.8739%" y="1135.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (4 samples, 0.37%)</title><rect x="18.7156%" y="1109" width="0.3670%" height="15" fill="rgb(205,86,26)" fg:x="204" fg:w="4"/><text x="18.9656%" y="1119.50"></text></g><g><title>&lt;backend::occupancy::{{closure}}::Record as core::fmt::Debug&gt;::fmt (3 samples, 0.28%)</title><rect x="18.8073%" y="1093" width="0.2752%" height="15" fill="rgb(231,126,28)" fg:x="205" fg:w="3"/><text x="19.0573%" y="1103.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (3 samples, 0.28%)</title><rect x="18.8073%" y="1077" width="0.2752%" height="15" fill="rgb(219,221,18)" fg:x="205" fg:w="3"/><text x="19.0573%" y="1087.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.28%)</title><rect x="18.8073%" y="1061" width="0.2752%" height="15" fill="rgb(211,40,0)" fg:x="205" fg:w="3"/><text x="19.0573%" y="1071.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (3 samples, 0.28%)</title><rect x="18.8073%" y="1045" width="0.2752%" height="15" fill="rgb(239,85,43)" fg:x="205" fg:w="3"/><text x="19.0573%" y="1055.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (1 samples, 0.09%)</title><rect x="18.9908%" y="1029" width="0.0917%" height="15" fill="rgb(231,55,21)" fg:x="207" fg:w="1"/><text x="19.2408%" y="1039.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.09%)</title><rect x="18.9908%" y="1013" width="0.0917%" height="15" fill="rgb(225,184,43)" fg:x="207" fg:w="1"/><text x="19.2408%" y="1023.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.09%)</title><rect x="18.9908%" y="997" width="0.0917%" height="15" fill="rgb(251,158,41)" fg:x="207" fg:w="1"/><text x="19.2408%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (1 samples, 0.09%)</title><rect x="19.0826%" y="1253" width="0.0917%" height="15" fill="rgb(234,159,37)" fg:x="208" fg:w="1"/><text x="19.3326%" y="1263.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (1 samples, 0.09%)</title><rect x="19.0826%" y="1237" width="0.0917%" height="15" fill="rgb(216,204,22)" fg:x="208" fg:w="1"/><text x="19.3326%" y="1247.50"></text></g><g><title>core::fmt::builders::DebugList::entries (1 samples, 0.09%)</title><rect x="19.0826%" y="1221" width="0.0917%" height="15" fill="rgb(214,17,3)" fg:x="208" fg:w="1"/><text x="19.3326%" y="1231.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (1 samples, 0.09%)</title><rect x="19.0826%" y="1205" width="0.0917%" height="15" fill="rgb(212,111,17)" fg:x="208" fg:w="1"/><text x="19.3326%" y="1215.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (1 samples, 0.09%)</title><rect x="19.0826%" y="1189" width="0.0917%" height="15" fill="rgb(221,157,24)" fg:x="208" fg:w="1"/><text x="19.3326%" y="1199.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.09%)</title><rect x="19.0826%" y="1173" width="0.0917%" height="15" fill="rgb(252,16,13)" fg:x="208" fg:w="1"/><text x="19.3326%" y="1183.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (1 samples, 0.09%)</title><rect x="19.0826%" y="1157" width="0.0917%" height="15" fill="rgb(221,62,2)" fg:x="208" fg:w="1"/><text x="19.3326%" y="1167.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.09%)</title><rect x="19.0826%" y="1141" width="0.0917%" height="15" fill="rgb(247,87,22)" fg:x="208" fg:w="1"/><text x="19.3326%" y="1151.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (184 samples, 16.88%)</title><rect x="2.3853%" y="1397" width="16.8807%" height="15" fill="rgb(215,73,9)" fg:x="26" fg:w="184"/><text x="2.6353%" y="1407.50">&lt;F as futures_core::future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (184 samples, 16.88%)</title><rect x="2.3853%" y="1381" width="16.8807%" height="15" fill="rgb(207,175,33)" fg:x="26" fg:w="184"/><text x="2.6353%" y="1391.50">&lt;core::future::from_genera..</text></g><g><title>backend::fill_occupancy::{{closure}}::{{closure}}::{{closure}} (183 samples, 16.79%)</title><rect x="2.4771%" y="1365" width="16.7890%" height="15" fill="rgb(243,129,54)" fg:x="27" fg:w="183"/><text x="2.7271%" y="1375.50">backend::fill_occupancy::{..</text></g><g><title>std::io::stdio::_print (2 samples, 0.18%)</title><rect x="19.0826%" y="1349" width="0.1835%" height="15" fill="rgb(227,119,45)" fg:x="208" fg:w="2"/><text x="19.3326%" y="1359.50"></text></g><g><title>std::io::stdio::print_to (2 samples, 0.18%)</title><rect x="19.0826%" y="1333" width="0.1835%" height="15" fill="rgb(205,109,36)" fg:x="208" fg:w="2"/><text x="19.3326%" y="1343.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (2 samples, 0.18%)</title><rect x="19.0826%" y="1317" width="0.1835%" height="15" fill="rgb(205,6,39)" fg:x="208" fg:w="2"/><text x="19.3326%" y="1327.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (2 samples, 0.18%)</title><rect x="19.0826%" y="1301" width="0.1835%" height="15" fill="rgb(221,32,16)" fg:x="208" fg:w="2"/><text x="19.3326%" y="1311.50"></text></g><g><title>std::io::Write::write_fmt (2 samples, 0.18%)</title><rect x="19.0826%" y="1285" width="0.1835%" height="15" fill="rgb(228,144,50)" fg:x="208" fg:w="2"/><text x="19.3326%" y="1295.50"></text></g><g><title>core::fmt::write (2 samples, 0.18%)</title><rect x="19.0826%" y="1269" width="0.1835%" height="15" fill="rgb(229,201,53)" fg:x="208" fg:w="2"/><text x="19.3326%" y="1279.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.09%)</title><rect x="19.1743%" y="1253" width="0.0917%" height="15" fill="rgb(249,153,27)" fg:x="209" fg:w="1"/><text x="19.4243%" y="1263.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.09%)</title><rect x="19.1743%" y="1237" width="0.0917%" height="15" fill="rgb(227,106,25)" fg:x="209" fg:w="1"/><text x="19.4243%" y="1247.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.09%)</title><rect x="19.1743%" y="1221" width="0.0917%" height="15" fill="rgb(230,65,29)" fg:x="209" fg:w="1"/><text x="19.4243%" y="1231.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.09%)</title><rect x="19.1743%" y="1205" width="0.0917%" height="15" fill="rgb(221,57,46)" fg:x="209" fg:w="1"/><text x="19.4243%" y="1215.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.09%)</title><rect x="19.1743%" y="1189" width="0.0917%" height="15" fill="rgb(229,161,17)" fg:x="209" fg:w="1"/><text x="19.4243%" y="1199.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::spare_capacity (1 samples, 0.09%)</title><rect x="19.1743%" y="1173" width="0.0917%" height="15" fill="rgb(222,213,11)" fg:x="209" fg:w="1"/><text x="19.4243%" y="1183.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (1 samples, 0.09%)</title><rect x="19.2661%" y="1397" width="0.0917%" height="15" fill="rgb(235,35,13)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1407.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="19.2661%" y="1381" width="0.0917%" height="15" fill="rgb(233,158,34)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1391.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="19.2661%" y="1365" width="0.0917%" height="15" fill="rgb(215,151,48)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1375.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="19.2661%" y="1349" width="0.0917%" height="15" fill="rgb(229,84,14)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1359.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="19.2661%" y="1333" width="0.0917%" height="15" fill="rgb(229,68,14)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1343.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="19.2661%" y="1317" width="0.0917%" height="15" fill="rgb(243,106,26)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1327.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="19.2661%" y="1301" width="0.0917%" height="15" fill="rgb(206,45,38)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1311.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="19.2661%" y="1285" width="0.0917%" height="15" fill="rgb(226,6,15)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1295.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (1 samples, 0.09%)</title><rect x="19.2661%" y="1269" width="0.0917%" height="15" fill="rgb(232,22,54)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1279.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="19.2661%" y="1253" width="0.0917%" height="15" fill="rgb(229,222,32)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1263.50"></text></g><g><title>sqlx_core::query::Map&lt;DB,F,A&gt;::fetch_many::{{closure}}::{{closure}} (1 samples, 0.09%)</title><rect x="19.2661%" y="1237" width="0.0917%" height="15" fill="rgb(228,62,29)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1247.50"></text></g><g><title>&lt;futures_util::sink::send::Send&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="19.2661%" y="1221" width="0.0917%" height="15" fill="rgb(251,103,34)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1231.50"></text></g><g><title>&lt;futures_util::sink::feed::Feed&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="19.2661%" y="1205" width="0.0917%" height="15" fill="rgb(233,12,30)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1215.50"></text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::start_send (1 samples, 0.09%)</title><rect x="19.2661%" y="1189" width="0.0917%" height="15" fill="rgb(238,52,0)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1199.50"></text></g><g><title>futures_channel::mpsc::sink_impl::&lt;impl futures_sink::Sink&lt;T&gt; for futures_channel::mpsc::Sender&lt;T&gt;&gt;::start_send (1 samples, 0.09%)</title><rect x="19.2661%" y="1173" width="0.0917%" height="15" fill="rgb(223,98,5)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1183.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::start_send (1 samples, 0.09%)</title><rect x="19.2661%" y="1157" width="0.0917%" height="15" fill="rgb(228,75,37)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1167.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (1 samples, 0.09%)</title><rect x="19.2661%" y="1141" width="0.0917%" height="15" fill="rgb(205,115,49)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1151.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::try_send (1 samples, 0.09%)</title><rect x="19.2661%" y="1125" width="0.0917%" height="15" fill="rgb(250,154,43)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1135.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::do_send_b (1 samples, 0.09%)</title><rect x="19.2661%" y="1109" width="0.0917%" height="15" fill="rgb(226,43,29)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1119.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::queue_push_and_signal (1 samples, 0.09%)</title><rect x="19.2661%" y="1093" width="0.0917%" height="15" fill="rgb(249,228,39)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1103.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::push (1 samples, 0.09%)</title><rect x="19.2661%" y="1077" width="0.0917%" height="15" fill="rgb(216,79,43)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1087.50"></text></g><g><title>futures_channel::mpsc::queue::Node&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="19.2661%" y="1061" width="0.0917%" height="15" fill="rgb(228,95,12)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="19.2661%" y="1045" width="0.0917%" height="15" fill="rgb(249,221,15)" fg:x="210" fg:w="1"/><text x="19.5161%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (189 samples, 17.34%)</title><rect x="2.1101%" y="1445" width="17.3394%" height="15" fill="rgb(233,34,13)" fg:x="23" fg:w="189"/><text x="2.3601%" y="1455.50">&lt;core::future::from_generat..</text></g><g><title>backend::fill_occupancy::{{closure}} (188 samples, 17.25%)</title><rect x="2.2018%" y="1429" width="17.2477%" height="15" fill="rgb(214,103,39)" fg:x="24" fg:w="188"/><text x="2.4518%" y="1439.50">backend::fill_occupancy::{{..</text></g><g><title>&lt;futures_util::stream::try_stream::try_for_each::TryForEach&lt;St,Fut,F&gt; as core::future::future::Future&gt;::poll (186 samples, 17.06%)</title><rect x="2.3853%" y="1413" width="17.0642%" height="15" fill="rgb(251,126,39)" fg:x="26" fg:w="186"/><text x="2.6353%" y="1423.50">&lt;futures_util::stream::try..</text></g><g><title>core::pin::Pin&lt;P&gt;::set (1 samples, 0.09%)</title><rect x="19.3578%" y="1397" width="0.0917%" height="15" fill="rgb(214,216,36)" fg:x="211" fg:w="1"/><text x="19.6078%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::future::from_generator::GenFuture&lt;backend::fill_occupancy::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="19.3578%" y="1381" width="0.0917%" height="15" fill="rgb(220,221,8)" fg:x="211" fg:w="1"/><text x="19.6078%" y="1391.50"></text></g><g><title>OPENSSL_sk_insert (1 samples, 0.09%)</title><rect x="19.4495%" y="1045" width="0.0917%" height="15" fill="rgb(240,216,3)" fg:x="212" fg:w="1"/><text x="19.6995%" y="1055.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="19.4495%" y="1029" width="0.0917%" height="15" fill="rgb(232,218,17)" fg:x="212" fg:w="1"/><text x="19.6995%" y="1039.50"></text></g><g><title>CRYPTO_zalloc (1 samples, 0.09%)</title><rect x="19.4495%" y="1013" width="0.0917%" height="15" fill="rgb(229,163,45)" fg:x="212" fg:w="1"/><text x="19.6995%" y="1023.50"></text></g><g><title>ASN1_item_ex_d2i (2 samples, 0.18%)</title><rect x="19.4495%" y="1125" width="0.1835%" height="15" fill="rgb(231,110,42)" fg:x="212" fg:w="2"/><text x="19.6995%" y="1135.50"></text></g><g><title>[libcrypto.so.1.1] (2 samples, 0.18%)</title><rect x="19.4495%" y="1109" width="0.1835%" height="15" fill="rgb(208,170,48)" fg:x="212" fg:w="2"/><text x="19.6995%" y="1119.50"></text></g><g><title>[libcrypto.so.1.1] (2 samples, 0.18%)</title><rect x="19.4495%" y="1093" width="0.1835%" height="15" fill="rgb(239,116,25)" fg:x="212" fg:w="2"/><text x="19.6995%" y="1103.50"></text></g><g><title>[libcrypto.so.1.1] (2 samples, 0.18%)</title><rect x="19.4495%" y="1077" width="0.1835%" height="15" fill="rgb(219,200,50)" fg:x="212" fg:w="2"/><text x="19.6995%" y="1087.50"></text></g><g><title>[libcrypto.so.1.1] (2 samples, 0.18%)</title><rect x="19.4495%" y="1061" width="0.1835%" height="15" fill="rgb(245,200,0)" fg:x="212" fg:w="2"/><text x="19.6995%" y="1071.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="19.5413%" y="1045" width="0.0917%" height="15" fill="rgb(245,119,33)" fg:x="213" fg:w="1"/><text x="19.7913%" y="1055.50"></text></g><g><title>ASN1_item_ex_i2d (1 samples, 0.09%)</title><rect x="19.6330%" y="1077" width="0.0917%" height="15" fill="rgb(231,125,12)" fg:x="214" fg:w="1"/><text x="19.8830%" y="1087.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="19.6330%" y="1061" width="0.0917%" height="15" fill="rgb(216,96,41)" fg:x="214" fg:w="1"/><text x="19.8830%" y="1071.50"></text></g><g><title>ASN1_item_d2i (4 samples, 0.37%)</title><rect x="19.4495%" y="1253" width="0.3670%" height="15" fill="rgb(248,43,45)" fg:x="212" fg:w="4"/><text x="19.6995%" y="1263.50"></text></g><g><title>ASN1_item_ex_d2i (4 samples, 0.37%)</title><rect x="19.4495%" y="1237" width="0.3670%" height="15" fill="rgb(217,222,7)" fg:x="212" fg:w="4"/><text x="19.6995%" y="1247.50"></text></g><g><title>[libcrypto.so.1.1] (4 samples, 0.37%)</title><rect x="19.4495%" y="1221" width="0.3670%" height="15" fill="rgb(233,28,6)" fg:x="212" fg:w="4"/><text x="19.6995%" y="1231.50"></text></g><g><title>[libcrypto.so.1.1] (4 samples, 0.37%)</title><rect x="19.4495%" y="1205" width="0.3670%" height="15" fill="rgb(231,218,15)" fg:x="212" fg:w="4"/><text x="19.6995%" y="1215.50"></text></g><g><title>[libcrypto.so.1.1] (4 samples, 0.37%)</title><rect x="19.4495%" y="1189" width="0.3670%" height="15" fill="rgb(226,171,48)" fg:x="212" fg:w="4"/><text x="19.6995%" y="1199.50"></text></g><g><title>[libcrypto.so.1.1] (4 samples, 0.37%)</title><rect x="19.4495%" y="1173" width="0.3670%" height="15" fill="rgb(235,201,9)" fg:x="212" fg:w="4"/><text x="19.6995%" y="1183.50"></text></g><g><title>[libcrypto.so.1.1] (4 samples, 0.37%)</title><rect x="19.4495%" y="1157" width="0.3670%" height="15" fill="rgb(217,80,15)" fg:x="212" fg:w="4"/><text x="19.6995%" y="1167.50"></text></g><g><title>[libcrypto.so.1.1] (4 samples, 0.37%)</title><rect x="19.4495%" y="1141" width="0.3670%" height="15" fill="rgb(219,152,8)" fg:x="212" fg:w="4"/><text x="19.6995%" y="1151.50"></text></g><g><title>[libcrypto.so.1.1] (2 samples, 0.18%)</title><rect x="19.6330%" y="1125" width="0.1835%" height="15" fill="rgb(243,107,38)" fg:x="214" fg:w="2"/><text x="19.8830%" y="1135.50"></text></g><g><title>[libcrypto.so.1.1] (2 samples, 0.18%)</title><rect x="19.6330%" y="1109" width="0.1835%" height="15" fill="rgb(231,17,5)" fg:x="214" fg:w="2"/><text x="19.8830%" y="1119.50"></text></g><g><title>[libcrypto.so.1.1] (2 samples, 0.18%)</title><rect x="19.6330%" y="1093" width="0.1835%" height="15" fill="rgb(209,25,54)" fg:x="214" fg:w="2"/><text x="19.8830%" y="1103.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="19.7248%" y="1077" width="0.0917%" height="15" fill="rgb(219,0,2)" fg:x="215" fg:w="1"/><text x="19.9748%" y="1087.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="19.7248%" y="1061" width="0.0917%" height="15" fill="rgb(246,9,5)" fg:x="215" fg:w="1"/><text x="19.9748%" y="1071.50"></text></g><g><title>PEM_X509_INFO_read_bio (5 samples, 0.46%)</title><rect x="19.4495%" y="1269" width="0.4587%" height="15" fill="rgb(226,159,4)" fg:x="212" fg:w="5"/><text x="19.6995%" y="1279.50"></text></g><g><title>PEM_read_bio_ex (1 samples, 0.09%)</title><rect x="19.8165%" y="1253" width="0.0917%" height="15" fill="rgb(219,175,34)" fg:x="216" fg:w="1"/><text x="20.0665%" y="1263.50"></text></g><g><title>BIO_gets (1 samples, 0.09%)</title><rect x="19.8165%" y="1237" width="0.0917%" height="15" fill="rgb(236,10,46)" fg:x="216" fg:w="1"/><text x="20.0665%" y="1247.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="19.8165%" y="1221" width="0.0917%" height="15" fill="rgb(240,211,16)" fg:x="216" fg:w="1"/><text x="20.0665%" y="1231.50"></text></g><g><title>fgets (1 samples, 0.09%)</title><rect x="19.8165%" y="1205" width="0.0917%" height="15" fill="rgb(205,3,43)" fg:x="216" fg:w="1"/><text x="20.0665%" y="1215.50"></text></g><g><title>__GI__IO_getline_info (1 samples, 0.09%)</title><rect x="19.8165%" y="1189" width="0.0917%" height="15" fill="rgb(245,7,22)" fg:x="216" fg:w="1"/><text x="20.0665%" y="1199.50"></text></g><g><title>__memchr_avx2 (1 samples, 0.09%)</title><rect x="19.8165%" y="1173" width="0.0917%" height="15" fill="rgb(239,132,32)" fg:x="216" fg:w="1"/><text x="20.0665%" y="1183.50"></text></g><g><title>openssl::ssl::SslContextBuilder::set_default_verify_paths (6 samples, 0.55%)</title><rect x="19.4495%" y="1333" width="0.5505%" height="15" fill="rgb(228,202,34)" fg:x="212" fg:w="6"/><text x="19.6995%" y="1343.50"></text></g><g><title>X509_STORE_set_default_paths (6 samples, 0.55%)</title><rect x="19.4495%" y="1317" width="0.5505%" height="15" fill="rgb(254,200,22)" fg:x="212" fg:w="6"/><text x="19.6995%" y="1327.50"></text></g><g><title>[libcrypto.so.1.1] (6 samples, 0.55%)</title><rect x="19.4495%" y="1301" width="0.5505%" height="15" fill="rgb(219,10,39)" fg:x="212" fg:w="6"/><text x="19.6995%" y="1311.50"></text></g><g><title>X509_load_cert_crl_file (6 samples, 0.55%)</title><rect x="19.4495%" y="1285" width="0.5505%" height="15" fill="rgb(226,210,39)" fg:x="212" fg:w="6"/><text x="19.6995%" y="1295.50"></text></g><g><title>X509_STORE_add_cert (1 samples, 0.09%)</title><rect x="19.9083%" y="1269" width="0.0917%" height="15" fill="rgb(208,219,16)" fg:x="217" fg:w="1"/><text x="20.1583%" y="1279.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="19.9083%" y="1253" width="0.0917%" height="15" fill="rgb(216,158,51)" fg:x="217" fg:w="1"/><text x="20.1583%" y="1263.50"></text></g><g><title>X509_OBJECT_retrieve_match (1 samples, 0.09%)</title><rect x="19.9083%" y="1237" width="0.0917%" height="15" fill="rgb(233,14,44)" fg:x="217" fg:w="1"/><text x="20.1583%" y="1247.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="19.9083%" y="1221" width="0.0917%" height="15" fill="rgb(237,97,39)" fg:x="217" fg:w="1"/><text x="20.1583%" y="1231.50"></text></g><g><title>__qsort_r (1 samples, 0.09%)</title><rect x="19.9083%" y="1205" width="0.0917%" height="15" fill="rgb(218,198,43)" fg:x="217" fg:w="1"/><text x="20.1583%" y="1215.50"></text></g><g><title>msort_with_tmp.part.0 (1 samples, 0.09%)</title><rect x="19.9083%" y="1189" width="0.0917%" height="15" fill="rgb(231,104,20)" fg:x="217" fg:w="1"/><text x="20.1583%" y="1199.50"></text></g><g><title>msort_with_tmp.part.0 (1 samples, 0.09%)</title><rect x="19.9083%" y="1173" width="0.0917%" height="15" fill="rgb(254,36,13)" fg:x="217" fg:w="1"/><text x="20.1583%" y="1183.50"></text></g><g><title>msort_with_tmp.part.0 (1 samples, 0.09%)</title><rect x="19.9083%" y="1157" width="0.0917%" height="15" fill="rgb(248,14,50)" fg:x="217" fg:w="1"/><text x="20.1583%" y="1167.50"></text></g><g><title>msort_with_tmp.part.0 (1 samples, 0.09%)</title><rect x="19.9083%" y="1141" width="0.0917%" height="15" fill="rgb(217,107,29)" fg:x="217" fg:w="1"/><text x="20.1583%" y="1151.50"></text></g><g><title>msort_with_tmp.part.0 (1 samples, 0.09%)</title><rect x="19.9083%" y="1125" width="0.0917%" height="15" fill="rgb(251,169,33)" fg:x="217" fg:w="1"/><text x="20.1583%" y="1135.50"></text></g><g><title>X509_NAME_cmp (1 samples, 0.09%)</title><rect x="19.9083%" y="1109" width="0.0917%" height="15" fill="rgb(217,108,32)" fg:x="217" fg:w="1"/><text x="20.1583%" y="1119.50"></text></g><g><title>backend::main::{{closure}} (197 samples, 18.07%)</title><rect x="2.0183%" y="1493" width="18.0734%" height="15" fill="rgb(219,66,42)" fg:x="22" fg:w="197"/><text x="2.2683%" y="1503.50">backend::main::{{closure}}</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (196 samples, 17.98%)</title><rect x="2.1101%" y="1477" width="17.9817%" height="15" fill="rgb(206,180,7)" fg:x="23" fg:w="196"/><text x="2.3601%" y="1487.50">&lt;core::future::from_generato..</text></g><g><title>backend::gen::{{closure}} (196 samples, 17.98%)</title><rect x="2.1101%" y="1461" width="17.9817%" height="15" fill="rgb(208,226,31)" fg:x="23" fg:w="196"/><text x="2.3601%" y="1471.50">backend::gen::{{closure}}</text></g><g><title>&lt;reqwest::async_impl::client::Client as core::default::Default&gt;::default (7 samples, 0.64%)</title><rect x="19.4495%" y="1445" width="0.6422%" height="15" fill="rgb(218,26,49)" fg:x="212" fg:w="7"/><text x="19.6995%" y="1455.50"></text></g><g><title>reqwest::async_impl::client::Client::new (7 samples, 0.64%)</title><rect x="19.4495%" y="1429" width="0.6422%" height="15" fill="rgb(233,197,48)" fg:x="212" fg:w="7"/><text x="19.6995%" y="1439.50"></text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (7 samples, 0.64%)</title><rect x="19.4495%" y="1413" width="0.6422%" height="15" fill="rgb(252,181,51)" fg:x="212" fg:w="7"/><text x="19.6995%" y="1423.50"></text></g><g><title>reqwest::connect::Connector::new_default_tls (7 samples, 0.64%)</title><rect x="19.4495%" y="1397" width="0.6422%" height="15" fill="rgb(253,90,19)" fg:x="212" fg:w="7"/><text x="19.6995%" y="1407.50"></text></g><g><title>native_tls::TlsConnectorBuilder::build (7 samples, 0.64%)</title><rect x="19.4495%" y="1381" width="0.6422%" height="15" fill="rgb(215,171,30)" fg:x="212" fg:w="7"/><text x="19.6995%" y="1391.50"></text></g><g><title>native_tls::imp::TlsConnector::new (7 samples, 0.64%)</title><rect x="19.4495%" y="1365" width="0.6422%" height="15" fill="rgb(214,222,9)" fg:x="212" fg:w="7"/><text x="19.6995%" y="1375.50"></text></g><g><title>openssl::ssl::connector::SslConnector::builder (7 samples, 0.64%)</title><rect x="19.4495%" y="1349" width="0.6422%" height="15" fill="rgb(223,3,22)" fg:x="212" fg:w="7"/><text x="19.6995%" y="1359.50"></text></g><g><title>openssl::ssl::connector::ctx (1 samples, 0.09%)</title><rect x="20.0000%" y="1333" width="0.0917%" height="15" fill="rgb(225,196,46)" fg:x="218" fg:w="1"/><text x="20.2500%" y="1343.50"></text></g><g><title>openssl::ssl::SslContextBuilder::new (1 samples, 0.09%)</title><rect x="20.0000%" y="1317" width="0.0917%" height="15" fill="rgb(209,110,37)" fg:x="218" fg:w="1"/><text x="20.2500%" y="1327.50"></text></g><g><title>openssl_sys::init (1 samples, 0.09%)</title><rect x="20.0000%" y="1301" width="0.0917%" height="15" fill="rgb(249,89,12)" fg:x="218" fg:w="1"/><text x="20.2500%" y="1311.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.09%)</title><rect x="20.0000%" y="1285" width="0.0917%" height="15" fill="rgb(226,27,33)" fg:x="218" fg:w="1"/><text x="20.2500%" y="1295.50"></text></g><g><title>std::sync::once::Once::call_inner (1 samples, 0.09%)</title><rect x="20.0000%" y="1269" width="0.0917%" height="15" fill="rgb(213,82,22)" fg:x="218" fg:w="1"/><text x="20.2500%" y="1279.50"></text></g><g><title>OPENSSL_init_ssl (1 samples, 0.09%)</title><rect x="20.0000%" y="1253" width="0.0917%" height="15" fill="rgb(248,140,0)" fg:x="218" fg:w="1"/><text x="20.2500%" y="1263.50"></text></g><g><title>OPENSSL_init_crypto (1 samples, 0.09%)</title><rect x="20.0000%" y="1237" width="0.0917%" height="15" fill="rgb(228,106,3)" fg:x="218" fg:w="1"/><text x="20.2500%" y="1247.50"></text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 0.09%)</title><rect x="20.0000%" y="1221" width="0.0917%" height="15" fill="rgb(209,23,37)" fg:x="218" fg:w="1"/><text x="20.2500%" y="1231.50"></text></g><g><title>__pthread_once_slow (1 samples, 0.09%)</title><rect x="20.0000%" y="1205" width="0.0917%" height="15" fill="rgb(241,93,50)" fg:x="218" fg:w="1"/><text x="20.2500%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="20.0000%" y="1189" width="0.0917%" height="15" fill="rgb(253,46,43)" fg:x="218" fg:w="1"/><text x="20.2500%" y="1199.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (1 samples, 0.09%)</title><rect x="20.0917%" y="1445" width="0.0917%" height="15" fill="rgb(226,206,43)" fg:x="219" fg:w="1"/><text x="20.3417%" y="1455.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="20.0917%" y="1429" width="0.0917%" height="15" fill="rgb(217,54,7)" fg:x="219" fg:w="1"/><text x="20.3417%" y="1439.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (1 samples, 0.09%)</title><rect x="21.3761%" y="821" width="0.0917%" height="15" fill="rgb(223,5,52)" fg:x="233" fg:w="1"/><text x="21.6261%" y="831.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.09%)</title><rect x="21.3761%" y="805" width="0.0917%" height="15" fill="rgb(206,52,46)" fg:x="233" fg:w="1"/><text x="21.6261%" y="815.50"></text></g><g><title>&lt;sqlx_core::io::write_and_flush::WriteAndFlush&lt;S&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="21.3761%" y="965" width="0.1835%" height="15" fill="rgb(253,136,11)" fg:x="233" fg:w="2"/><text x="21.6261%" y="975.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (2 samples, 0.18%)</title><rect x="21.3761%" y="949" width="0.1835%" height="15" fill="rgb(208,106,33)" fg:x="233" fg:w="2"/><text x="21.6261%" y="959.50"></text></g><g><title>&lt;sqlx_core::net::tls::MaybeTlsStream&lt;S&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (2 samples, 0.18%)</title><rect x="21.3761%" y="933" width="0.1835%" height="15" fill="rgb(206,54,4)" fg:x="233" fg:w="2"/><text x="21.6261%" y="943.50"></text></g><g><title>&lt;sqlx_core::net::socket::Socket as tokio::io::async_write::AsyncWrite&gt;::poll_write (2 samples, 0.18%)</title><rect x="21.3761%" y="917" width="0.1835%" height="15" fill="rgb(213,3,15)" fg:x="233" fg:w="2"/><text x="21.6261%" y="927.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (2 samples, 0.18%)</title><rect x="21.3761%" y="901" width="0.1835%" height="15" fill="rgb(252,211,39)" fg:x="233" fg:w="2"/><text x="21.6261%" y="911.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (2 samples, 0.18%)</title><rect x="21.3761%" y="885" width="0.1835%" height="15" fill="rgb(223,6,36)" fg:x="233" fg:w="2"/><text x="21.6261%" y="895.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (2 samples, 0.18%)</title><rect x="21.3761%" y="869" width="0.1835%" height="15" fill="rgb(252,169,45)" fg:x="233" fg:w="2"/><text x="21.6261%" y="879.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_write_io (2 samples, 0.18%)</title><rect x="21.3761%" y="853" width="0.1835%" height="15" fill="rgb(212,48,26)" fg:x="233" fg:w="2"/><text x="21.6261%" y="863.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (2 samples, 0.18%)</title><rect x="21.3761%" y="837" width="0.1835%" height="15" fill="rgb(251,102,48)" fg:x="233" fg:w="2"/><text x="21.6261%" y="847.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write::{{closure}} (1 samples, 0.09%)</title><rect x="21.4679%" y="821" width="0.0917%" height="15" fill="rgb(243,208,16)" fg:x="234" fg:w="1"/><text x="21.7179%" y="831.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 0.09%)</title><rect x="21.4679%" y="805" width="0.0917%" height="15" fill="rgb(219,96,24)" fg:x="234" fg:w="1"/><text x="21.7179%" y="815.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.09%)</title><rect x="21.4679%" y="789" width="0.0917%" height="15" fill="rgb(219,33,29)" fg:x="234" fg:w="1"/><text x="21.7179%" y="799.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (1 samples, 0.09%)</title><rect x="21.4679%" y="773" width="0.0917%" height="15" fill="rgb(223,176,5)" fg:x="234" fg:w="1"/><text x="21.7179%" y="783.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::{{closure}} (1 samples, 0.09%)</title><rect x="21.4679%" y="757" width="0.0917%" height="15" fill="rgb(228,140,14)" fg:x="234" fg:w="1"/><text x="21.7179%" y="767.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.09%)</title><rect x="21.4679%" y="741" width="0.0917%" height="15" fill="rgb(217,179,31)" fg:x="234" fg:w="1"/><text x="21.7179%" y="751.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.09%)</title><rect x="21.4679%" y="725" width="0.0917%" height="15" fill="rgb(230,9,30)" fg:x="234" fg:w="1"/><text x="21.7179%" y="735.50"></text></g><g><title>__libc_send (1 samples, 0.09%)</title><rect x="21.4679%" y="709" width="0.0917%" height="15" fill="rgb(230,136,20)" fg:x="234" fg:w="1"/><text x="21.7179%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="21.4679%" y="693" width="0.0917%" height="15" fill="rgb(215,210,22)" fg:x="234" fg:w="1"/><text x="21.7179%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="21.4679%" y="677" width="0.0917%" height="15" fill="rgb(218,43,5)" fg:x="234" fg:w="1"/><text x="21.7179%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="21.4679%" y="661" width="0.0917%" height="15" fill="rgb(216,11,5)" fg:x="234" fg:w="1"/><text x="21.7179%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="21.4679%" y="645" width="0.0917%" height="15" fill="rgb(209,82,29)" fg:x="234" fg:w="1"/><text x="21.7179%" y="655.50"></text></g><g><title>&lt;sqlx_core::postgres::statement::PgStatementMetadata as core::default::Default&gt;::default (1 samples, 0.09%)</title><rect x="21.5596%" y="965" width="0.0917%" height="15" fill="rgb(244,115,12)" fg:x="235" fg:w="1"/><text x="21.8096%" y="975.50"></text></g><g><title>&lt;ahash::hash_map::AHashMap&lt;K,V&gt; as core::default::Default&gt;::default (1 samples, 0.09%)</title><rect x="21.5596%" y="949" width="0.0917%" height="15" fill="rgb(222,82,18)" fg:x="235" fg:w="1"/><text x="21.8096%" y="959.50"></text></g><g><title>ahash::hash_map::AHashMap&lt;K,V&gt;::new (1 samples, 0.09%)</title><rect x="21.5596%" y="933" width="0.0917%" height="15" fill="rgb(249,227,8)" fg:x="235" fg:w="1"/><text x="21.8096%" y="943.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (1 samples, 0.09%)</title><rect x="21.5596%" y="917" width="0.0917%" height="15" fill="rgb(253,141,45)" fg:x="235" fg:w="1"/><text x="21.8096%" y="927.50"></text></g><g><title>ahash::random_state::RandomState::new (1 samples, 0.09%)</title><rect x="21.5596%" y="901" width="0.0917%" height="15" fill="rgb(234,184,4)" fg:x="235" fg:w="1"/><text x="21.8096%" y="911.50"></text></g><g><title>&lt;ahash::random_state::DefaultRandomSource as ahash::random_state::RandomSource&gt;::get_fixed_seeds (1 samples, 0.09%)</title><rect x="21.5596%" y="885" width="0.0917%" height="15" fill="rgb(218,194,23)" fg:x="235" fg:w="1"/><text x="21.8096%" y="895.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="21.6514%" y="837" width="0.0917%" height="15" fill="rgb(235,66,41)" fg:x="236" fg:w="1"/><text x="21.9014%" y="847.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::write (2 samples, 0.18%)</title><rect x="21.6514%" y="965" width="0.1835%" height="15" fill="rgb(245,217,1)" fg:x="236" fg:w="2"/><text x="21.9014%" y="975.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::write_with (2 samples, 0.18%)</title><rect x="21.6514%" y="949" width="0.1835%" height="15" fill="rgb(229,91,1)" fg:x="236" fg:w="2"/><text x="21.9014%" y="959.50"></text></g><g><title>&lt;sqlx_core::postgres::message::query::Query as sqlx_core::io::encode::Encode&gt;::encode_with (2 samples, 0.18%)</title><rect x="21.6514%" y="933" width="0.1835%" height="15" fill="rgb(207,101,30)" fg:x="236" fg:w="2"/><text x="21.9014%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as sqlx_core::io::buf_mut::BufMutExt&gt;::put_str_nul (2 samples, 0.18%)</title><rect x="21.6514%" y="917" width="0.1835%" height="15" fill="rgb(223,82,49)" fg:x="236" fg:w="2"/><text x="21.9014%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (2 samples, 0.18%)</title><rect x="21.6514%" y="901" width="0.1835%" height="15" fill="rgb(218,167,17)" fg:x="236" fg:w="2"/><text x="21.9014%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.18%)</title><rect x="21.6514%" y="885" width="0.1835%" height="15" fill="rgb(208,103,14)" fg:x="236" fg:w="2"/><text x="21.9014%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.18%)</title><rect x="21.6514%" y="869" width="0.1835%" height="15" fill="rgb(238,20,8)" fg:x="236" fg:w="2"/><text x="21.9014%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.18%)</title><rect x="21.6514%" y="853" width="0.1835%" height="15" fill="rgb(218,80,54)" fg:x="236" fg:w="2"/><text x="21.9014%" y="863.50"></text></g><g><title>__memmove_avx_unaligned (1 samples, 0.09%)</title><rect x="21.7431%" y="837" width="0.0917%" height="15" fill="rgb(240,144,17)" fg:x="237" fg:w="1"/><text x="21.9931%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.64%)</title><rect x="21.3761%" y="997" width="0.6422%" height="15" fill="rgb(245,27,50)" fg:x="233" fg:w="7"/><text x="21.6261%" y="1007.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}} (7 samples, 0.64%)</title><rect x="21.3761%" y="981" width="0.6422%" height="15" fill="rgb(251,51,7)" fg:x="233" fg:w="7"/><text x="21.6261%" y="991.50"></text></g><g><title>sqlx_core::logger::QueryLogger::new (2 samples, 0.18%)</title><rect x="21.8349%" y="965" width="0.1835%" height="15" fill="rgb(245,217,29)" fg:x="238" fg:w="2"/><text x="22.0849%" y="975.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.18%)</title><rect x="21.8349%" y="949" width="0.1835%" height="15" fill="rgb(221,176,29)" fg:x="238" fg:w="2"/><text x="22.0849%" y="959.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.18%)</title><rect x="21.8349%" y="933" width="0.1835%" height="15" fill="rgb(212,180,24)" fg:x="238" fg:w="2"/><text x="22.0849%" y="943.50"></text></g><g><title>std::sys::unix::time::inner::now (2 samples, 0.18%)</title><rect x="21.8349%" y="917" width="0.1835%" height="15" fill="rgb(254,24,2)" fg:x="238" fg:w="2"/><text x="22.0849%" y="927.50"></text></g><g><title>__clock_gettime_2 (2 samples, 0.18%)</title><rect x="21.8349%" y="901" width="0.1835%" height="15" fill="rgb(230,100,2)" fg:x="238" fg:w="2"/><text x="22.0849%" y="911.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.18%)</title><rect x="21.8349%" y="885" width="0.1835%" height="15" fill="rgb(219,142,25)" fg:x="238" fg:w="2"/><text x="22.0849%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="21.8349%" y="869" width="0.1835%" height="15" fill="rgb(240,73,43)" fg:x="238" fg:w="2"/><text x="22.0849%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="21.8349%" y="853" width="0.1835%" height="15" fill="rgb(214,114,15)" fg:x="238" fg:w="2"/><text x="22.0849%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="21.8349%" y="837" width="0.1835%" height="15" fill="rgb(207,130,4)" fg:x="238" fg:w="2"/><text x="22.0849%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="21.8349%" y="821" width="0.1835%" height="15" fill="rgb(221,25,40)" fg:x="238" fg:w="2"/><text x="22.0849%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="21.8349%" y="805" width="0.1835%" height="15" fill="rgb(241,184,7)" fg:x="238" fg:w="2"/><text x="22.0849%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="21.8349%" y="789" width="0.1835%" height="15" fill="rgb(235,159,4)" fg:x="238" fg:w="2"/><text x="22.0849%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="22.3853%" y="821" width="0.0917%" height="15" fill="rgb(214,87,48)" fg:x="244" fg:w="1"/><text x="22.6353%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="22.4771%" y="805" width="0.1835%" height="15" fill="rgb(246,198,24)" fg:x="245" fg:w="2"/><text x="22.7271%" y="815.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv::{{closure}} (1 samples, 0.09%)</title><rect x="22.5688%" y="789" width="0.0917%" height="15" fill="rgb(209,66,40)" fg:x="246" fg:w="1"/><text x="22.8188%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="22.5688%" y="773" width="0.0917%" height="15" fill="rgb(233,147,39)" fg:x="246" fg:w="1"/><text x="22.8188%" y="783.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv_unchecked::{{closure}} (1 samples, 0.09%)</title><rect x="22.5688%" y="757" width="0.0917%" height="15" fill="rgb(231,145,52)" fg:x="246" fg:w="1"/><text x="22.8188%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="22.5688%" y="741" width="0.0917%" height="15" fill="rgb(206,20,26)" fg:x="246" fg:w="1"/><text x="22.8188%" y="751.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read::{{closure}} (1 samples, 0.09%)</title><rect x="22.5688%" y="725" width="0.0917%" height="15" fill="rgb(238,220,4)" fg:x="246" fg:w="1"/><text x="22.8188%" y="735.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (1 samples, 0.09%)</title><rect x="22.5688%" y="709" width="0.0917%" height="15" fill="rgb(252,195,42)" fg:x="246" fg:w="1"/><text x="22.8188%" y="719.50"></text></g><g><title>&lt;std::sys_common::mutex::MovableMutex as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="22.6606%" y="757" width="0.0917%" height="15" fill="rgb(209,10,6)" fg:x="247" fg:w="1"/><text x="22.9106%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::destroy (1 samples, 0.09%)</title><rect x="22.6606%" y="741" width="0.0917%" height="15" fill="rgb(229,3,52)" fg:x="247" fg:w="1"/><text x="22.9106%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.28%)</title><rect x="22.6606%" y="805" width="0.2752%" height="15" fill="rgb(253,49,37)" fg:x="247" fg:w="3"/><text x="22.9106%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;futures_channel::mpsc::SenderTask&gt;&gt; (3 samples, 0.28%)</title><rect x="22.6606%" y="789" width="0.2752%" height="15" fill="rgb(240,103,49)" fg:x="247" fg:w="3"/><text x="22.9106%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::mutex::MovableMutex&gt; (3 samples, 0.28%)</title><rect x="22.6606%" y="773" width="0.2752%" height="15" fill="rgb(250,182,30)" fg:x="247" fg:w="3"/><text x="22.9106%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::sys::unix::mutex::Mutex&gt;&gt; (2 samples, 0.18%)</title><rect x="22.7523%" y="757" width="0.1835%" height="15" fill="rgb(248,8,30)" fg:x="248" fg:w="2"/><text x="23.0023%" y="767.50"></text></g><g><title>alloc::alloc::box_free (2 samples, 0.18%)</title><rect x="22.7523%" y="741" width="0.1835%" height="15" fill="rgb(237,120,30)" fg:x="248" fg:w="2"/><text x="23.0023%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.18%)</title><rect x="22.7523%" y="725" width="0.1835%" height="15" fill="rgb(221,146,34)" fg:x="248" fg:w="2"/><text x="23.0023%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.18%)</title><rect x="22.7523%" y="709" width="0.1835%" height="15" fill="rgb(242,55,13)" fg:x="248" fg:w="2"/><text x="23.0023%" y="719.50"></text></g><g><title>__free (2 samples, 0.18%)</title><rect x="22.7523%" y="693" width="0.1835%" height="15" fill="rgb(242,112,31)" fg:x="248" fg:w="2"/><text x="23.0023%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="22.8440%" y="677" width="0.0917%" height="15" fill="rgb(249,192,27)" fg:x="249" fg:w="1"/><text x="23.0940%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;ahash::hash_map::AHashMap&lt;sqlx_core::ext::ustr::UStr,usize&gt;&gt; (1 samples, 0.09%)</title><rect x="22.9358%" y="741" width="0.0917%" height="15" fill="rgb(208,204,44)" fg:x="250" fg:w="1"/><text x="23.1858%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;sqlx_core::ext::ustr::UStr,usize,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.09%)</title><rect x="22.9358%" y="725" width="0.0917%" height="15" fill="rgb(208,93,54)" fg:x="250" fg:w="1"/><text x="23.1858%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;sqlx_core::ext::ustr::UStr,usize,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.09%)</title><rect x="22.9358%" y="709" width="0.0917%" height="15" fill="rgb(242,1,31)" fg:x="250" fg:w="1"/><text x="23.1858%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(sqlx_core::ext::ustr::UStr,usize)&gt;&gt; (1 samples, 0.09%)</title><rect x="22.9358%" y="693" width="0.0917%" height="15" fill="rgb(241,83,25)" fg:x="250" fg:w="1"/><text x="23.1858%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="22.9358%" y="677" width="0.0917%" height="15" fill="rgb(205,169,50)" fg:x="250" fg:w="1"/><text x="23.1858%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;sqlx_core::postgres::statement::PgStatementMetadata&gt;&gt; (2 samples, 0.18%)</title><rect x="22.9358%" y="805" width="0.1835%" height="15" fill="rgb(239,186,37)" fg:x="250" fg:w="2"/><text x="23.1858%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.18%)</title><rect x="22.9358%" y="789" width="0.1835%" height="15" fill="rgb(205,221,10)" fg:x="250" fg:w="2"/><text x="23.1858%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.18%)</title><rect x="22.9358%" y="773" width="0.1835%" height="15" fill="rgb(218,196,15)" fg:x="250" fg:w="2"/><text x="23.1858%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::postgres::statement::PgStatementMetadata&gt; (2 samples, 0.18%)</title><rect x="22.9358%" y="757" width="0.1835%" height="15" fill="rgb(218,196,35)" fg:x="250" fg:w="2"/><text x="23.1858%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sqlx_core::postgres::type_info::PgTypeInfo&gt;&gt; (1 samples, 0.09%)</title><rect x="23.0275%" y="741" width="0.0917%" height="15" fill="rgb(233,63,24)" fg:x="251" fg:w="1"/><text x="23.2775%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="23.0275%" y="725" width="0.0917%" height="15" fill="rgb(225,8,4)" fg:x="251" fg:w="1"/><text x="23.2775%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::logger::QueryLogger&gt; (1 samples, 0.09%)</title><rect x="23.1193%" y="805" width="0.0917%" height="15" fill="rgb(234,105,35)" fg:x="252" fg:w="1"/><text x="23.3693%" y="815.50"></text></g><g><title>&lt;sqlx_core::logger::QueryLogger as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="23.1193%" y="789" width="0.0917%" height="15" fill="rgb(236,21,32)" fg:x="252" fg:w="1"/><text x="23.3693%" y="799.50"></text></g><g><title>sqlx_core::logger::QueryLogger::finish (1 samples, 0.09%)</title><rect x="23.1193%" y="773" width="0.0917%" height="15" fill="rgb(228,109,6)" fg:x="252" fg:w="1"/><text x="23.3693%" y="783.50"></text></g><g><title>std::time::Instant::elapsed (1 samples, 0.09%)</title><rect x="23.1193%" y="757" width="0.0917%" height="15" fill="rgb(229,215,31)" fg:x="252" fg:w="1"/><text x="23.3693%" y="767.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.09%)</title><rect x="23.1193%" y="741" width="0.0917%" height="15" fill="rgb(221,52,54)" fg:x="252" fg:w="1"/><text x="23.3693%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.09%)</title><rect x="23.1193%" y="725" width="0.0917%" height="15" fill="rgb(252,129,43)" fg:x="252" fg:w="1"/><text x="23.3693%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (1 samples, 0.09%)</title><rect x="23.1193%" y="709" width="0.0917%" height="15" fill="rgb(248,183,27)" fg:x="252" fg:w="1"/><text x="23.3693%" y="719.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.09%)</title><rect x="23.1193%" y="693" width="0.0917%" height="15" fill="rgb(250,0,22)" fg:x="252" fg:w="1"/><text x="23.3693%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.92%)</title><rect x="22.3853%" y="837" width="0.9174%" height="15" fill="rgb(213,166,10)" fg:x="244" fg:w="10"/><text x="22.6353%" y="847.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}}::{{closure}} (9 samples, 0.83%)</title><rect x="22.4771%" y="821" width="0.8257%" height="15" fill="rgb(207,163,36)" fg:x="245" fg:w="9"/><text x="22.7271%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::postgres::message::Message&gt; (1 samples, 0.09%)</title><rect x="23.2110%" y="805" width="0.0917%" height="15" fill="rgb(208,122,22)" fg:x="253" fg:w="1"/><text x="23.4610%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (1 samples, 0.09%)</title><rect x="23.2110%" y="789" width="0.0917%" height="15" fill="rgb(207,104,49)" fg:x="253" fg:w="1"/><text x="23.4610%" y="799.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="23.2110%" y="773" width="0.0917%" height="15" fill="rgb(248,211,50)" fg:x="253" fg:w="1"/><text x="23.4610%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.09%)</title><rect x="23.3028%" y="837" width="0.0917%" height="15" fill="rgb(217,13,45)" fg:x="254" fg:w="1"/><text x="23.5528%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;futures_channel::mpsc::SenderTask&gt;&gt; (1 samples, 0.09%)</title><rect x="23.3028%" y="821" width="0.0917%" height="15" fill="rgb(211,216,49)" fg:x="254" fg:w="1"/><text x="23.5528%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::mutex::MovableMutex&gt; (1 samples, 0.09%)</title><rect x="23.3028%" y="805" width="0.0917%" height="15" fill="rgb(221,58,53)" fg:x="254" fg:w="1"/><text x="23.5528%" y="815.50"></text></g><g><title>___pthread_mutex_destroy (1 samples, 0.09%)</title><rect x="23.3028%" y="789" width="0.0917%" height="15" fill="rgb(220,112,41)" fg:x="254" fg:w="1"/><text x="23.5528%" y="799.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (16 samples, 1.47%)</title><rect x="22.0183%" y="917" width="1.4679%" height="15" fill="rgb(236,38,28)" fg:x="240" fg:w="16"/><text x="22.2683%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (16 samples, 1.47%)</title><rect x="22.0183%" y="901" width="1.4679%" height="15" fill="rgb(227,195,22)" fg:x="240" fg:w="16"/><text x="22.2683%" y="911.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (16 samples, 1.47%)</title><rect x="22.0183%" y="885" width="1.4679%" height="15" fill="rgb(214,55,33)" fg:x="240" fg:w="16"/><text x="22.2683%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 1.28%)</title><rect x="22.2018%" y="869" width="1.2844%" height="15" fill="rgb(248,80,13)" fg:x="242" fg:w="14"/><text x="22.4518%" y="879.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (13 samples, 1.19%)</title><rect x="22.2936%" y="853" width="1.1927%" height="15" fill="rgb(238,52,6)" fg:x="243" fg:w="13"/><text x="22.5436%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::Sender&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="23.3945%" y="837" width="0.0917%" height="15" fill="rgb(224,198,47)" fg:x="255" fg:w="1"/><text x="23.6445%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;futures_channel::mpsc::BoundedSenderInner&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="23.3945%" y="821" width="0.0917%" height="15" fill="rgb(233,171,20)" fg:x="255" fg:w="1"/><text x="23.6445%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::BoundedSenderInner&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="23.3945%" y="805" width="0.0917%" height="15" fill="rgb(241,30,25)" fg:x="255" fg:w="1"/><text x="23.6445%" y="815.50"></text></g><g><title>&lt;futures_channel::mpsc::BoundedSenderInner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="23.3945%" y="789" width="0.0917%" height="15" fill="rgb(207,171,38)" fg:x="255" fg:w="1"/><text x="23.6445%" y="799.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::close_channel (1 samples, 0.09%)</title><rect x="23.3945%" y="773" width="0.0917%" height="15" fill="rgb(234,70,1)" fg:x="255" fg:w="1"/><text x="23.6445%" y="783.50"></text></g><g><title>futures_channel::mpsc::BoundedInner&lt;T&gt;::set_closed (1 samples, 0.09%)</title><rect x="23.3945%" y="757" width="0.0917%" height="15" fill="rgb(232,178,18)" fg:x="255" fg:w="1"/><text x="23.6445%" y="767.50"></text></g><g><title>futures_channel::mpsc::decode_state (1 samples, 0.09%)</title><rect x="23.3945%" y="741" width="0.0917%" height="15" fill="rgb(241,78,40)" fg:x="255" fg:w="1"/><text x="23.6445%" y="751.50"></text></g><g><title>core::mem::drop (1 samples, 0.09%)</title><rect x="23.6697%" y="805" width="0.0917%" height="15" fill="rgb(222,35,25)" fg:x="258" fg:w="1"/><text x="23.9197%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;futures_channel::mpsc::BoundedInner&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="23.6697%" y="789" width="0.0917%" height="15" fill="rgb(207,92,16)" fg:x="258" fg:w="1"/><text x="23.9197%" y="799.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="23.6697%" y="773" width="0.0917%" height="15" fill="rgb(216,59,51)" fg:x="258" fg:w="1"/><text x="23.9197%" y="783.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::inner (1 samples, 0.09%)</title><rect x="23.6697%" y="757" width="0.0917%" height="15" fill="rgb(213,80,28)" fg:x="258" fg:w="1"/><text x="23.9197%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;futures_channel::mpsc::BoundedInner&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt;&gt;&gt; (2 samples, 0.18%)</title><rect x="23.6697%" y="869" width="0.1835%" height="15" fill="rgb(220,93,7)" fg:x="258" fg:w="2"/><text x="23.9197%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_channel::mpsc::BoundedInner&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt;&gt; (2 samples, 0.18%)</title><rect x="23.6697%" y="853" width="0.1835%" height="15" fill="rgb(225,24,44)" fg:x="258" fg:w="2"/><text x="23.9197%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.18%)</title><rect x="23.6697%" y="837" width="0.1835%" height="15" fill="rgb(243,74,40)" fg:x="258" fg:w="2"/><text x="23.9197%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.18%)</title><rect x="23.6697%" y="821" width="0.1835%" height="15" fill="rgb(228,39,7)" fg:x="258" fg:w="2"/><text x="23.9197%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::BoundedInner&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="23.7615%" y="805" width="0.0917%" height="15" fill="rgb(227,79,8)" fg:x="259" fg:w="1"/><text x="24.0115%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::queue::Queue&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="23.7615%" y="789" width="0.0917%" height="15" fill="rgb(236,58,11)" fg:x="259" fg:w="1"/><text x="24.0115%" y="799.50"></text></g><g><title>&lt;futures_channel::mpsc::queue::Queue&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="23.7615%" y="773" width="0.0917%" height="15" fill="rgb(249,63,35)" fg:x="259" fg:w="1"/><text x="24.0115%" y="783.50"></text></g><g><title>core::mem::drop (1 samples, 0.09%)</title><rect x="23.7615%" y="757" width="0.0917%" height="15" fill="rgb(252,114,16)" fg:x="259" fg:w="1"/><text x="24.0115%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;futures_channel::mpsc::queue::Node&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="23.7615%" y="741" width="0.0917%" height="15" fill="rgb(254,151,24)" fg:x="259" fg:w="1"/><text x="24.0115%" y="751.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.09%)</title><rect x="23.7615%" y="725" width="0.0917%" height="15" fill="rgb(253,54,39)" fg:x="259" fg:w="1"/><text x="24.0115%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="23.7615%" y="709" width="0.0917%" height="15" fill="rgb(243,25,45)" fg:x="259" fg:w="1"/><text x="24.0115%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="23.7615%" y="693" width="0.0917%" height="15" fill="rgb(234,134,9)" fg:x="259" fg:w="1"/><text x="24.0115%" y="703.50"></text></g><g><title>__free (1 samples, 0.09%)</title><rect x="23.7615%" y="677" width="0.0917%" height="15" fill="rgb(227,166,31)" fg:x="259" fg:w="1"/><text x="24.0115%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="23.7615%" y="661" width="0.0917%" height="15" fill="rgb(245,143,41)" fg:x="259" fg:w="1"/><text x="24.0115%" y="671.50"></text></g><g><title>futures_channel::mpsc::decode_state (1 samples, 0.09%)</title><rect x="23.8532%" y="869" width="0.0917%" height="15" fill="rgb(238,181,32)" fg:x="260" fg:w="1"/><text x="24.1032%" y="879.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (6 samples, 0.55%)</title><rect x="23.5780%" y="885" width="0.5505%" height="15" fill="rgb(224,113,18)" fg:x="257" fg:w="6"/><text x="23.8280%" y="895.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (2 samples, 0.18%)</title><rect x="23.9450%" y="869" width="0.1835%" height="15" fill="rgb(240,229,28)" fg:x="261" fg:w="2"/><text x="24.1950%" y="879.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (1 samples, 0.09%)</title><rect x="24.0367%" y="853" width="0.0917%" height="15" fill="rgb(250,185,3)" fg:x="262" fg:w="1"/><text x="24.2867%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.09%)</title><rect x="24.0367%" y="837" width="0.0917%" height="15" fill="rgb(212,59,25)" fg:x="262" fg:w="1"/><text x="24.2867%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.09%)</title><rect x="24.0367%" y="821" width="0.0917%" height="15" fill="rgb(221,87,20)" fg:x="262" fg:w="1"/><text x="24.2867%" y="831.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (24 samples, 2.20%)</title><rect x="22.0183%" y="997" width="2.2018%" height="15" fill="rgb(213,74,28)" fg:x="240" fg:w="24"/><text x="22.2683%" y="1007.50">&lt;..</text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (24 samples, 2.20%)</title><rect x="22.0183%" y="981" width="2.2018%" height="15" fill="rgb(224,132,34)" fg:x="240" fg:w="24"/><text x="22.2683%" y="991.50">f..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (24 samples, 2.20%)</title><rect x="22.0183%" y="965" width="2.2018%" height="15" fill="rgb(222,101,24)" fg:x="240" fg:w="24"/><text x="22.2683%" y="975.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (24 samples, 2.20%)</title><rect x="22.0183%" y="949" width="2.2018%" height="15" fill="rgb(254,142,4)" fg:x="240" fg:w="24"/><text x="22.2683%" y="959.50">&lt;..</text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (24 samples, 2.20%)</title><rect x="22.0183%" y="933" width="2.2018%" height="15" fill="rgb(230,229,49)" fg:x="240" fg:w="24"/><text x="22.2683%" y="943.50">&lt;..</text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (8 samples, 0.73%)</title><rect x="23.4862%" y="917" width="0.7339%" height="15" fill="rgb(238,70,47)" fg:x="256" fg:w="8"/><text x="23.7362%" y="927.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (8 samples, 0.73%)</title><rect x="23.4862%" y="901" width="0.7339%" height="15" fill="rgb(231,160,17)" fg:x="256" fg:w="8"/><text x="23.7362%" y="911.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (1 samples, 0.09%)</title><rect x="24.1284%" y="885" width="0.0917%" height="15" fill="rgb(218,68,53)" fg:x="263" fg:w="1"/><text x="24.3784%" y="895.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="24.1284%" y="869" width="0.0917%" height="15" fill="rgb(236,111,10)" fg:x="263" fg:w="1"/><text x="24.3784%" y="879.50"></text></g><g><title>tokio::park::thread::clone (1 samples, 0.09%)</title><rect x="24.1284%" y="853" width="0.0917%" height="15" fill="rgb(224,34,41)" fg:x="263" fg:w="1"/><text x="24.3784%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="24.1284%" y="837" width="0.0917%" height="15" fill="rgb(241,118,19)" fg:x="263" fg:w="1"/><text x="24.3784%" y="847.50"></text></g><g><title>__free (2 samples, 0.18%)</title><rect x="24.2202%" y="997" width="0.1835%" height="15" fill="rgb(238,129,25)" fg:x="264" fg:w="2"/><text x="24.4702%" y="1007.50"></text></g><g><title>_int_free (2 samples, 0.18%)</title><rect x="24.2202%" y="981" width="0.1835%" height="15" fill="rgb(238,22,31)" fg:x="264" fg:w="2"/><text x="24.4702%" y="991.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (37 samples, 3.39%)</title><rect x="21.1009%" y="1109" width="3.3945%" height="15" fill="rgb(222,174,48)" fg:x="230" fg:w="37"/><text x="21.3509%" y="1119.50">&lt;&amp;m..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (37 samples, 3.39%)</title><rect x="21.1009%" y="1093" width="3.3945%" height="15" fill="rgb(206,152,40)" fg:x="230" fg:w="37"/><text x="21.3509%" y="1103.50">&lt;co..</text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (37 samples, 3.39%)</title><rect x="21.1009%" y="1077" width="3.3945%" height="15" fill="rgb(218,99,54)" fg:x="230" fg:w="37"/><text x="21.3509%" y="1087.50">&lt;fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 3.30%)</title><rect x="21.1927%" y="1061" width="3.3028%" height="15" fill="rgb(220,174,26)" fg:x="231" fg:w="36"/><text x="21.4427%" y="1071.50">&lt;co..</text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (35 samples, 3.21%)</title><rect x="21.2844%" y="1045" width="3.2110%" height="15" fill="rgb(245,116,9)" fg:x="232" fg:w="35"/><text x="21.5344%" y="1055.50">sql..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 3.21%)</title><rect x="21.2844%" y="1029" width="3.2110%" height="15" fill="rgb(209,72,35)" fg:x="232" fg:w="35"/><text x="21.5344%" y="1039.50">&lt;co..</text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_core::postgres::connection::PgConnection&gt;::fetch_many::{{closure}}::{{closure}} (35 samples, 3.21%)</title><rect x="21.2844%" y="1013" width="3.2110%" height="15" fill="rgb(226,126,21)" fg:x="232" fg:w="35"/><text x="21.5344%" y="1023.50">sql..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.09%)</title><rect x="24.4037%" y="997" width="0.0917%" height="15" fill="rgb(227,192,1)" fg:x="266" fg:w="1"/><text x="24.6537%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;futures_channel::mpsc::SenderTask&gt;&gt; (1 samples, 0.09%)</title><rect x="24.4037%" y="981" width="0.0917%" height="15" fill="rgb(237,180,29)" fg:x="266" fg:w="1"/><text x="24.6537%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::mutex::MovableMutex&gt; (1 samples, 0.09%)</title><rect x="24.4037%" y="965" width="0.0917%" height="15" fill="rgb(230,197,35)" fg:x="266" fg:w="1"/><text x="24.6537%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::sys::unix::mutex::Mutex&gt;&gt; (1 samples, 0.09%)</title><rect x="24.4037%" y="949" width="0.0917%" height="15" fill="rgb(246,193,31)" fg:x="266" fg:w="1"/><text x="24.6537%" y="959.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.09%)</title><rect x="24.4037%" y="933" width="0.0917%" height="15" fill="rgb(241,36,4)" fg:x="266" fg:w="1"/><text x="24.6537%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="24.4037%" y="917" width="0.0917%" height="15" fill="rgb(241,130,17)" fg:x="266" fg:w="1"/><text x="24.6537%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="24.4037%" y="901" width="0.0917%" height="15" fill="rgb(206,137,32)" fg:x="266" fg:w="1"/><text x="24.6537%" y="911.50"></text></g><g><title>__free (1 samples, 0.09%)</title><rect x="24.4037%" y="885" width="0.0917%" height="15" fill="rgb(237,228,51)" fg:x="266" fg:w="1"/><text x="24.6537%" y="895.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="24.4037%" y="869" width="0.0917%" height="15" fill="rgb(243,6,42)" fg:x="266" fg:w="1"/><text x="24.6537%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;futures_channel::mpsc::BoundedInner&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="24.5872%" y="1061" width="0.0917%" height="15" fill="rgb(251,74,28)" fg:x="268" fg:w="1"/><text x="24.8372%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_channel::mpsc::BoundedInner&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="24.5872%" y="1045" width="0.0917%" height="15" fill="rgb(218,20,49)" fg:x="268" fg:w="1"/><text x="24.8372%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="24.5872%" y="1029" width="0.0917%" height="15" fill="rgb(238,28,14)" fg:x="268" fg:w="1"/><text x="24.8372%" y="1039.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.09%)</title><rect x="24.5872%" y="1013" width="0.0917%" height="15" fill="rgb(229,40,46)" fg:x="268" fg:w="1"/><text x="24.8372%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::BoundedInner&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="24.5872%" y="997" width="0.0917%" height="15" fill="rgb(244,195,20)" fg:x="268" fg:w="1"/><text x="24.8372%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::queue::Queue&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="24.5872%" y="981" width="0.0917%" height="15" fill="rgb(253,56,35)" fg:x="268" fg:w="1"/><text x="24.8372%" y="991.50"></text></g><g><title>&lt;futures_channel::mpsc::queue::Queue&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="24.5872%" y="965" width="0.0917%" height="15" fill="rgb(210,149,44)" fg:x="268" fg:w="1"/><text x="24.8372%" y="975.50"></text></g><g><title>core::mem::drop (1 samples, 0.09%)</title><rect x="24.5872%" y="949" width="0.0917%" height="15" fill="rgb(240,135,12)" fg:x="268" fg:w="1"/><text x="24.8372%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;futures_channel::mpsc::queue::Node&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="24.5872%" y="933" width="0.0917%" height="15" fill="rgb(251,24,50)" fg:x="268" fg:w="1"/><text x="24.8372%" y="943.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.09%)</title><rect x="24.5872%" y="917" width="0.0917%" height="15" fill="rgb(243,200,47)" fg:x="268" fg:w="1"/><text x="24.8372%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="24.5872%" y="901" width="0.0917%" height="15" fill="rgb(224,166,26)" fg:x="268" fg:w="1"/><text x="24.8372%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="24.5872%" y="885" width="0.0917%" height="15" fill="rgb(233,0,47)" fg:x="268" fg:w="1"/><text x="24.8372%" y="895.50"></text></g><g><title>__free (1 samples, 0.09%)</title><rect x="24.5872%" y="869" width="0.0917%" height="15" fill="rgb(253,80,5)" fg:x="268" fg:w="1"/><text x="24.8372%" y="879.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="24.5872%" y="853" width="0.0917%" height="15" fill="rgb(214,133,25)" fg:x="268" fg:w="1"/><text x="24.8372%" y="863.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (46 samples, 4.22%)</title><rect x="20.5505%" y="1269" width="4.2202%" height="15" fill="rgb(209,27,14)" fg:x="224" fg:w="46"/><text x="20.8005%" y="1279.50">&lt;futu..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (46 samples, 4.22%)</title><rect x="20.5505%" y="1253" width="4.2202%" height="15" fill="rgb(219,102,51)" fg:x="224" fg:w="46"/><text x="20.8005%" y="1263.50">&lt;F as..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (46 samples, 4.22%)</title><rect x="20.5505%" y="1237" width="4.2202%" height="15" fill="rgb(237,18,16)" fg:x="224" fg:w="46"/><text x="20.8005%" y="1247.50">&lt;core..</text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (46 samples, 4.22%)</title><rect x="20.5505%" y="1221" width="4.2202%" height="15" fill="rgb(241,85,17)" fg:x="224" fg:w="46"/><text x="20.8005%" y="1231.50">&lt;futu..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (43 samples, 3.94%)</title><rect x="20.8257%" y="1205" width="3.9450%" height="15" fill="rgb(236,90,42)" fg:x="227" fg:w="43"/><text x="21.0757%" y="1215.50">&lt;S a..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (43 samples, 3.94%)</title><rect x="20.8257%" y="1189" width="3.9450%" height="15" fill="rgb(249,57,21)" fg:x="227" fg:w="43"/><text x="21.0757%" y="1199.50">&lt;cor..</text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (43 samples, 3.94%)</title><rect x="20.8257%" y="1173" width="3.9450%" height="15" fill="rgb(243,12,36)" fg:x="227" fg:w="43"/><text x="21.0757%" y="1183.50">&lt;fut..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (42 samples, 3.85%)</title><rect x="20.9174%" y="1157" width="3.8532%" height="15" fill="rgb(253,128,47)" fg:x="228" fg:w="42"/><text x="21.1674%" y="1167.50">&lt;S a..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (42 samples, 3.85%)</title><rect x="20.9174%" y="1141" width="3.8532%" height="15" fill="rgb(207,33,20)" fg:x="228" fg:w="42"/><text x="21.1674%" y="1151.50">&lt;cor..</text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (42 samples, 3.85%)</title><rect x="20.9174%" y="1125" width="3.8532%" height="15" fill="rgb(233,215,35)" fg:x="228" fg:w="42"/><text x="21.1674%" y="1135.50">&lt;sql..</text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.28%)</title><rect x="24.4954%" y="1109" width="0.2752%" height="15" fill="rgb(249,188,52)" fg:x="267" fg:w="3"/><text x="24.7454%" y="1119.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.28%)</title><rect x="24.4954%" y="1093" width="0.2752%" height="15" fill="rgb(225,12,32)" fg:x="267" fg:w="3"/><text x="24.7454%" y="1103.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (3 samples, 0.28%)</title><rect x="24.4954%" y="1077" width="0.2752%" height="15" fill="rgb(247,98,14)" fg:x="267" fg:w="3"/><text x="24.7454%" y="1087.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (1 samples, 0.09%)</title><rect x="24.6789%" y="1061" width="0.0917%" height="15" fill="rgb(247,219,48)" fg:x="269" fg:w="1"/><text x="24.9289%" y="1071.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (1 samples, 0.09%)</title><rect x="24.6789%" y="1045" width="0.0917%" height="15" fill="rgb(253,60,48)" fg:x="269" fg:w="1"/><text x="24.9289%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.09%)</title><rect x="24.6789%" y="1029" width="0.0917%" height="15" fill="rgb(245,15,52)" fg:x="269" fg:w="1"/><text x="24.9289%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.09%)</title><rect x="24.6789%" y="1013" width="0.0917%" height="15" fill="rgb(220,133,28)" fg:x="269" fg:w="1"/><text x="24.9289%" y="1023.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (48 samples, 4.40%)</title><rect x="20.4587%" y="1333" width="4.4037%" height="15" fill="rgb(217,180,4)" fg:x="223" fg:w="48"/><text x="20.7087%" y="1343.50">&lt;core..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (48 samples, 4.40%)</title><rect x="20.4587%" y="1317" width="4.4037%" height="15" fill="rgb(251,24,1)" fg:x="223" fg:w="48"/><text x="20.7087%" y="1327.50">&lt;futu..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (47 samples, 4.31%)</title><rect x="20.5505%" y="1301" width="4.3119%" height="15" fill="rgb(212,185,49)" fg:x="224" fg:w="47"/><text x="20.8005%" y="1311.50">&lt;futu..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (47 samples, 4.31%)</title><rect x="20.5505%" y="1285" width="4.3119%" height="15" fill="rgb(215,175,22)" fg:x="224" fg:w="47"/><text x="20.8005%" y="1295.50">&lt;futu..</text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project (1 samples, 0.09%)</title><rect x="24.7706%" y="1269" width="0.0917%" height="15" fill="rgb(250,205,14)" fg:x="270" fg:w="1"/><text x="25.0206%" y="1279.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (1 samples, 0.09%)</title><rect x="24.8624%" y="1301" width="0.0917%" height="15" fill="rgb(225,211,22)" fg:x="271" fg:w="1"/><text x="25.1124%" y="1311.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.09%)</title><rect x="24.8624%" y="1285" width="0.0917%" height="15" fill="rgb(251,179,42)" fg:x="271" fg:w="1"/><text x="25.1124%" y="1295.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.09%)</title><rect x="24.8624%" y="1269" width="0.0917%" height="15" fill="rgb(208,216,51)" fg:x="271" fg:w="1"/><text x="25.1124%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="24.8624%" y="1253" width="0.0917%" height="15" fill="rgb(235,36,11)" fg:x="271" fg:w="1"/><text x="25.1124%" y="1263.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="24.8624%" y="1237" width="0.0917%" height="15" fill="rgb(213,189,28)" fg:x="271" fg:w="1"/><text x="25.1124%" y="1247.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="24.8624%" y="1221" width="0.0917%" height="15" fill="rgb(227,203,42)" fg:x="271" fg:w="1"/><text x="25.1124%" y="1231.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="24.8624%" y="1205" width="0.0917%" height="15" fill="rgb(244,72,36)" fg:x="271" fg:w="1"/><text x="25.1124%" y="1215.50"></text></g><g><title>futures_channel::mpsc::channel (2 samples, 0.18%)</title><rect x="24.9541%" y="1253" width="0.1835%" height="15" fill="rgb(213,53,17)" fg:x="272" fg:w="2"/><text x="25.2041%" y="1263.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::new (2 samples, 0.18%)</title><rect x="24.9541%" y="1237" width="0.1835%" height="15" fill="rgb(207,167,3)" fg:x="272" fg:w="2"/><text x="25.2041%" y="1247.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::new (2 samples, 0.18%)</title><rect x="24.9541%" y="1221" width="0.1835%" height="15" fill="rgb(216,98,30)" fg:x="272" fg:w="2"/><text x="25.2041%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (2 samples, 0.18%)</title><rect x="24.9541%" y="1205" width="0.1835%" height="15" fill="rgb(236,123,15)" fg:x="272" fg:w="2"/><text x="25.2041%" y="1215.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.18%)</title><rect x="24.9541%" y="1189" width="0.1835%" height="15" fill="rgb(248,81,50)" fg:x="272" fg:w="2"/><text x="25.2041%" y="1199.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.18%)</title><rect x="24.9541%" y="1173" width="0.1835%" height="15" fill="rgb(214,120,4)" fg:x="272" fg:w="2"/><text x="25.2041%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.18%)</title><rect x="24.9541%" y="1157" width="0.1835%" height="15" fill="rgb(208,179,34)" fg:x="272" fg:w="2"/><text x="25.2041%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.18%)</title><rect x="24.9541%" y="1141" width="0.1835%" height="15" fill="rgb(227,140,7)" fg:x="272" fg:w="2"/><text x="25.2041%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.18%)</title><rect x="24.9541%" y="1125" width="0.1835%" height="15" fill="rgb(214,22,6)" fg:x="272" fg:w="2"/><text x="25.2041%" y="1135.50"></text></g><g><title>__rdl_alloc (1 samples, 0.09%)</title><rect x="25.0459%" y="1109" width="0.0917%" height="15" fill="rgb(207,137,27)" fg:x="273" fg:w="1"/><text x="25.2959%" y="1119.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.09%)</title><rect x="25.0459%" y="1093" width="0.0917%" height="15" fill="rgb(210,8,46)" fg:x="273" fg:w="1"/><text x="25.2959%" y="1103.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="25.1376%" y="1221" width="0.0917%" height="15" fill="rgb(240,16,54)" fg:x="274" fg:w="1"/><text x="25.3876%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (55 samples, 5.05%)</title><rect x="20.4587%" y="1397" width="5.0459%" height="15" fill="rgb(211,209,29)" fg:x="223" fg:w="55"/><text x="20.7087%" y="1407.50">&lt;core:..</text></g><g><title>sqlx_core::pool::inner::check_conn::{{closure}} (55 samples, 5.05%)</title><rect x="20.4587%" y="1381" width="5.0459%" height="15" fill="rgb(226,228,24)" fg:x="223" fg:w="55"/><text x="20.7087%" y="1391.50">sqlx_c..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (55 samples, 5.05%)</title><rect x="20.4587%" y="1365" width="5.0459%" height="15" fill="rgb(222,84,9)" fg:x="223" fg:w="55"/><text x="20.7087%" y="1375.50">&lt;core:..</text></g><g><title>sqlx_core::pool::connection::Floating&lt;sqlx_core::pool::connection::Idle&lt;DB&gt;&gt;::ping::{{closure}} (55 samples, 5.05%)</title><rect x="20.4587%" y="1349" width="5.0459%" height="15" fill="rgb(234,203,30)" fg:x="223" fg:w="55"/><text x="20.7087%" y="1359.50">sqlx_c..</text></g><g><title>&lt;sqlx_core::postgres::connection::PgConnection as sqlx_core::connection::Connection&gt;::ping (7 samples, 0.64%)</title><rect x="24.8624%" y="1333" width="0.6422%" height="15" fill="rgb(238,109,14)" fg:x="271" fg:w="7"/><text x="25.1124%" y="1343.50"></text></g><g><title>sqlx_core::executor::Executor::execute (7 samples, 0.64%)</title><rect x="24.8624%" y="1317" width="0.6422%" height="15" fill="rgb(233,206,34)" fg:x="271" fg:w="7"/><text x="25.1124%" y="1327.50"></text></g><g><title>sqlx_core::executor::Executor::execute_many (6 samples, 0.55%)</title><rect x="24.9541%" y="1301" width="0.5505%" height="15" fill="rgb(220,167,47)" fg:x="272" fg:w="6"/><text x="25.2041%" y="1311.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_core::postgres::connection::PgConnection&gt;::fetch_many (6 samples, 0.55%)</title><rect x="24.9541%" y="1285" width="0.5505%" height="15" fill="rgb(238,105,10)" fg:x="272" fg:w="6"/><text x="25.2041%" y="1295.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new (6 samples, 0.55%)</title><rect x="24.9541%" y="1269" width="0.5505%" height="15" fill="rgb(213,227,17)" fg:x="272" fg:w="6"/><text x="25.2041%" y="1279.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (4 samples, 0.37%)</title><rect x="25.1376%" y="1253" width="0.3670%" height="15" fill="rgb(217,132,38)" fg:x="274" fg:w="4"/><text x="25.3876%" y="1263.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (4 samples, 0.37%)</title><rect x="25.1376%" y="1237" width="0.3670%" height="15" fill="rgb(242,146,4)" fg:x="274" fg:w="4"/><text x="25.3876%" y="1247.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.28%)</title><rect x="25.2294%" y="1221" width="0.2752%" height="15" fill="rgb(212,61,9)" fg:x="275" fg:w="3"/><text x="25.4794%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.28%)</title><rect x="25.2294%" y="1205" width="0.2752%" height="15" fill="rgb(247,126,22)" fg:x="275" fg:w="3"/><text x="25.4794%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.28%)</title><rect x="25.2294%" y="1189" width="0.2752%" height="15" fill="rgb(220,196,2)" fg:x="275" fg:w="3"/><text x="25.4794%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.28%)</title><rect x="25.2294%" y="1173" width="0.2752%" height="15" fill="rgb(208,46,4)" fg:x="275" fg:w="3"/><text x="25.4794%" y="1183.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.28%)</title><rect x="25.2294%" y="1157" width="0.2752%" height="15" fill="rgb(252,104,46)" fg:x="275" fg:w="3"/><text x="25.4794%" y="1167.50"></text></g><g><title>_int_malloc (3 samples, 0.28%)</title><rect x="25.2294%" y="1141" width="0.2752%" height="15" fill="rgb(237,152,48)" fg:x="275" fg:w="3"/><text x="25.4794%" y="1151.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.09%)</title><rect x="25.4128%" y="1125" width="0.0917%" height="15" fill="rgb(221,59,37)" fg:x="277" fg:w="1"/><text x="25.6628%" y="1135.50"></text></g><g><title>&lt;futures_intrusive::sync::semaphore::GenericSemaphoreAcquireFuture&lt;MutexType&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="25.5046%" y="1397" width="0.0917%" height="15" fill="rgb(209,202,51)" fg:x="278" fg:w="1"/><text x="25.7546%" y="1407.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.09%)</title><rect x="25.5046%" y="1381" width="0.0917%" height="15" fill="rgb(228,81,30)" fg:x="278" fg:w="1"/><text x="25.7546%" y="1391.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.09%)</title><rect x="25.5046%" y="1365" width="0.0917%" height="15" fill="rgb(227,42,39)" fg:x="278" fg:w="1"/><text x="25.7546%" y="1375.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (60 samples, 5.50%)</title><rect x="20.1835%" y="1429" width="5.5046%" height="15" fill="rgb(221,26,2)" fg:x="220" fg:w="60"/><text x="20.4335%" y="1439.50">&lt;core::..</text></g><g><title>sqlx_core::pool::inner::SharedPool&lt;DB&gt;::acquire::{{closure}}::{{closure}} (60 samples, 5.50%)</title><rect x="20.1835%" y="1413" width="5.5046%" height="15" fill="rgb(254,61,31)" fg:x="220" fg:w="60"/><text x="20.4335%" y="1423.50">sqlx_co..</text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;sqlx_core::pool::inner::check_conn&lt;sqlx_core::postgres::database::Postgres&gt;::{{closure}}&gt;&gt; (1 samples, 0.09%)</title><rect x="25.5963%" y="1397" width="0.0917%" height="15" fill="rgb(222,173,38)" fg:x="279" fg:w="1"/><text x="25.8463%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::inner::check_conn&lt;sqlx_core::postgres::database::Postgres&gt;::{{closure}}&gt; (1 samples, 0.09%)</title><rect x="25.5963%" y="1381" width="0.0917%" height="15" fill="rgb(218,50,12)" fg:x="279" fg:w="1"/><text x="25.8463%" y="1391.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (1 samples, 0.09%)</title><rect x="25.8716%" y="1381" width="0.0917%" height="15" fill="rgb(223,88,40)" fg:x="282" fg:w="1"/><text x="26.1216%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::driver::sleep::Sleep::poll_elapsed::{{closure}}&gt; (1 samples, 0.09%)</title><rect x="25.8716%" y="1365" width="0.0917%" height="15" fill="rgb(237,54,19)" fg:x="282" fg:w="1"/><text x="26.1216%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::coop::RestoreOnPending&gt; (1 samples, 0.09%)</title><rect x="25.8716%" y="1349" width="0.0917%" height="15" fill="rgb(251,129,25)" fg:x="282" fg:w="1"/><text x="26.1216%" y="1359.50"></text></g><g><title>&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="25.8716%" y="1333" width="0.0917%" height="15" fill="rgb(238,97,19)" fg:x="282" fg:w="1"/><text x="26.1216%" y="1343.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.09%)</title><rect x="25.8716%" y="1317" width="0.0917%" height="15" fill="rgb(240,169,18)" fg:x="282" fg:w="1"/><text x="26.1216%" y="1327.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.09%)</title><rect x="25.8716%" y="1301" width="0.0917%" height="15" fill="rgb(230,187,49)" fg:x="282" fg:w="1"/><text x="26.1216%" y="1311.50"></text></g><g><title>tokio::time::driver::entry::TimerEntry::reset (1 samples, 0.09%)</title><rect x="25.8716%" y="1285" width="0.0917%" height="15" fill="rgb(209,44,26)" fg:x="282" fg:w="1"/><text x="26.1216%" y="1295.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::reregister (1 samples, 0.09%)</title><rect x="25.8716%" y="1269" width="0.0917%" height="15" fill="rgb(244,0,6)" fg:x="282" fg:w="1"/><text x="26.1216%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::time::driver::InnerState&gt;&gt; (1 samples, 0.09%)</title><rect x="25.8716%" y="1253" width="0.0917%" height="15" fill="rgb(248,18,21)" fg:x="282" fg:w="1"/><text x="26.1216%" y="1263.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="25.8716%" y="1237" width="0.0917%" height="15" fill="rgb(245,180,19)" fg:x="282" fg:w="1"/><text x="26.1216%" y="1247.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.09%)</title><rect x="25.8716%" y="1221" width="0.0917%" height="15" fill="rgb(252,118,36)" fg:x="282" fg:w="1"/><text x="26.1216%" y="1231.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.09%)</title><rect x="25.8716%" y="1205" width="0.0917%" height="15" fill="rgb(210,224,19)" fg:x="282" fg:w="1"/><text x="26.1216%" y="1215.50"></text></g><g><title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (1 samples, 0.09%)</title><rect x="25.8716%" y="1189" width="0.0917%" height="15" fill="rgb(218,30,24)" fg:x="282" fg:w="1"/><text x="26.1216%" y="1199.50"></text></g><g><title>tokio::io::driver::Handle::wakeup (1 samples, 0.09%)</title><rect x="25.8716%" y="1173" width="0.0917%" height="15" fill="rgb(219,75,50)" fg:x="282" fg:w="1"/><text x="26.1216%" y="1183.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (1 samples, 0.09%)</title><rect x="25.8716%" y="1157" width="0.0917%" height="15" fill="rgb(234,72,50)" fg:x="282" fg:w="1"/><text x="26.1216%" y="1167.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.09%)</title><rect x="25.8716%" y="1141" width="0.0917%" height="15" fill="rgb(219,100,48)" fg:x="282" fg:w="1"/><text x="26.1216%" y="1151.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.09%)</title><rect x="25.8716%" y="1125" width="0.0917%" height="15" fill="rgb(253,5,41)" fg:x="282" fg:w="1"/><text x="26.1216%" y="1135.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.09%)</title><rect x="25.8716%" y="1109" width="0.0917%" height="15" fill="rgb(247,181,11)" fg:x="282" fg:w="1"/><text x="26.1216%" y="1119.50"></text></g><g><title>__GI___write (1 samples, 0.09%)</title><rect x="25.8716%" y="1093" width="0.0917%" height="15" fill="rgb(222,223,25)" fg:x="282" fg:w="1"/><text x="26.1216%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="25.8716%" y="1077" width="0.0917%" height="15" fill="rgb(214,198,28)" fg:x="282" fg:w="1"/><text x="26.1216%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.09%)</title><rect x="25.9633%" y="1317" width="0.0917%" height="15" fill="rgb(230,46,43)" fg:x="283" fg:w="1"/><text x="26.2133%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.09%)</title><rect x="25.9633%" y="1301" width="0.0917%" height="15" fill="rgb(233,65,53)" fg:x="283" fg:w="1"/><text x="26.2133%" y="1311.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (2 samples, 0.18%)</title><rect x="25.9633%" y="1349" width="0.1835%" height="15" fill="rgb(221,121,27)" fg:x="283" fg:w="2"/><text x="26.2133%" y="1359.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (2 samples, 0.18%)</title><rect x="25.9633%" y="1333" width="0.1835%" height="15" fill="rgb(247,70,47)" fg:x="283" fg:w="2"/><text x="26.2133%" y="1343.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::catch_unwind (1 samples, 0.09%)</title><rect x="26.0550%" y="1317" width="0.0917%" height="15" fill="rgb(228,85,35)" fg:x="284" fg:w="1"/><text x="26.3050%" y="1327.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.09%)</title><rect x="26.0550%" y="1301" width="0.0917%" height="15" fill="rgb(209,50,18)" fg:x="284" fg:w="1"/><text x="26.3050%" y="1311.50"></text></g><g><title>std::panicking::try (1 samples, 0.09%)</title><rect x="26.0550%" y="1285" width="0.0917%" height="15" fill="rgb(250,19,35)" fg:x="284" fg:w="1"/><text x="26.3050%" y="1295.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.09%)</title><rect x="26.0550%" y="1269" width="0.0917%" height="15" fill="rgb(253,107,29)" fg:x="284" fg:w="1"/><text x="26.3050%" y="1279.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.09%)</title><rect x="26.0550%" y="1253" width="0.0917%" height="15" fill="rgb(252,179,29)" fg:x="284" fg:w="1"/><text x="26.3050%" y="1263.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::{{closure}} (1 samples, 0.09%)</title><rect x="26.0550%" y="1237" width="0.0917%" height="15" fill="rgb(238,194,6)" fg:x="284" fg:w="1"/><text x="26.3050%" y="1247.50"></text></g><g><title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (1 samples, 0.09%)</title><rect x="26.0550%" y="1221" width="0.0917%" height="15" fill="rgb(238,164,29)" fg:x="284" fg:w="1"/><text x="26.3050%" y="1231.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="26.0550%" y="1205" width="0.0917%" height="15" fill="rgb(224,25,9)" fg:x="284" fg:w="1"/><text x="26.3050%" y="1215.50"></text></g><g><title>tokio::park::thread::clone (1 samples, 0.09%)</title><rect x="26.0550%" y="1189" width="0.0917%" height="15" fill="rgb(244,153,23)" fg:x="284" fg:w="1"/><text x="26.3050%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="26.0550%" y="1173" width="0.0917%" height="15" fill="rgb(212,203,14)" fg:x="284" fg:w="1"/><text x="26.3050%" y="1183.50"></text></g><g><title>tokio::time::driver::entry::StateCell::poll (3 samples, 0.28%)</title><rect x="25.9633%" y="1365" width="0.2752%" height="15" fill="rgb(220,164,20)" fg:x="283" fg:w="3"/><text x="26.2133%" y="1375.50"></text></g><g><title>tokio::time::driver::entry::StateCell::read_state (1 samples, 0.09%)</title><rect x="26.1468%" y="1349" width="0.0917%" height="15" fill="rgb(222,203,48)" fg:x="285" fg:w="1"/><text x="26.3968%" y="1359.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (1 samples, 0.09%)</title><rect x="26.1468%" y="1333" width="0.0917%" height="15" fill="rgb(215,159,22)" fg:x="285" fg:w="1"/><text x="26.3968%" y="1343.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="26.1468%" y="1317" width="0.0917%" height="15" fill="rgb(216,183,47)" fg:x="285" fg:w="1"/><text x="26.3968%" y="1327.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::reregister (1 samples, 0.09%)</title><rect x="26.2385%" y="1349" width="0.0917%" height="15" fill="rgb(229,195,25)" fg:x="286" fg:w="1"/><text x="26.4885%" y="1359.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn tokio::park::Unpark&gt; as tokio::park::Unpark&gt;::unpark (1 samples, 0.09%)</title><rect x="26.2385%" y="1333" width="0.0917%" height="15" fill="rgb(224,132,51)" fg:x="286" fg:w="1"/><text x="26.4885%" y="1343.50"></text></g><g><title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (1 samples, 0.09%)</title><rect x="26.2385%" y="1317" width="0.0917%" height="15" fill="rgb(240,63,7)" fg:x="286" fg:w="1"/><text x="26.4885%" y="1327.50"></text></g><g><title>tokio::io::driver::Handle::wakeup (1 samples, 0.09%)</title><rect x="26.2385%" y="1301" width="0.0917%" height="15" fill="rgb(249,182,41)" fg:x="286" fg:w="1"/><text x="26.4885%" y="1311.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (1 samples, 0.09%)</title><rect x="26.2385%" y="1285" width="0.0917%" height="15" fill="rgb(243,47,26)" fg:x="286" fg:w="1"/><text x="26.4885%" y="1295.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.09%)</title><rect x="26.2385%" y="1269" width="0.0917%" height="15" fill="rgb(233,48,2)" fg:x="286" fg:w="1"/><text x="26.4885%" y="1279.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.09%)</title><rect x="26.2385%" y="1253" width="0.0917%" height="15" fill="rgb(244,165,34)" fg:x="286" fg:w="1"/><text x="26.4885%" y="1263.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.09%)</title><rect x="26.2385%" y="1237" width="0.0917%" height="15" fill="rgb(207,89,7)" fg:x="286" fg:w="1"/><text x="26.4885%" y="1247.50"></text></g><g><title>__GI___write (1 samples, 0.09%)</title><rect x="26.2385%" y="1221" width="0.0917%" height="15" fill="rgb(244,117,36)" fg:x="286" fg:w="1"/><text x="26.4885%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="26.2385%" y="1205" width="0.0917%" height="15" fill="rgb(226,144,34)" fg:x="286" fg:w="1"/><text x="26.4885%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="26.2385%" y="1189" width="0.0917%" height="15" fill="rgb(213,23,19)" fg:x="286" fg:w="1"/><text x="26.4885%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="26.2385%" y="1173" width="0.0917%" height="15" fill="rgb(217,75,12)" fg:x="286" fg:w="1"/><text x="26.4885%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="26.2385%" y="1157" width="0.0917%" height="15" fill="rgb(224,159,17)" fg:x="286" fg:w="1"/><text x="26.4885%" y="1167.50"></text></g><g><title>tokio::time::driver::entry::TimerEntry::reset (3 samples, 0.28%)</title><rect x="26.2385%" y="1365" width="0.2752%" height="15" fill="rgb(217,118,1)" fg:x="286" fg:w="3"/><text x="26.4885%" y="1375.50"></text></g><g><title>tokio::time::driver::ClockTime::deadline_to_tick (2 samples, 0.18%)</title><rect x="26.3303%" y="1349" width="0.1835%" height="15" fill="rgb(232,180,48)" fg:x="287" fg:w="2"/><text x="26.5803%" y="1359.50"></text></g><g><title>tokio::time::driver::ClockTime::instant_to_tick (2 samples, 0.18%)</title><rect x="26.3303%" y="1333" width="0.1835%" height="15" fill="rgb(230,27,33)" fg:x="287" fg:w="2"/><text x="26.5803%" y="1343.50"></text></g><g><title>tokio::time::instant::Instant::checked_duration_since (2 samples, 0.18%)</title><rect x="26.3303%" y="1317" width="0.1835%" height="15" fill="rgb(205,31,21)" fg:x="287" fg:w="2"/><text x="26.5803%" y="1327.50"></text></g><g><title>std::time::Instant::checked_duration_since (2 samples, 0.18%)</title><rect x="26.3303%" y="1301" width="0.1835%" height="15" fill="rgb(253,59,4)" fg:x="287" fg:w="2"/><text x="26.5803%" y="1311.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.09%)</title><rect x="26.4220%" y="1285" width="0.0917%" height="15" fill="rgb(224,201,9)" fg:x="288" fg:w="1"/><text x="26.6720%" y="1295.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.09%)</title><rect x="26.4220%" y="1269" width="0.0917%" height="15" fill="rgb(229,206,30)" fg:x="288" fg:w="1"/><text x="26.6720%" y="1279.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (71 samples, 6.51%)</title><rect x="20.1835%" y="1445" width="6.5138%" height="15" fill="rgb(212,67,47)" fg:x="220" fg:w="71"/><text x="20.4335%" y="1455.50">&lt;tokio::t..</text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (11 samples, 1.01%)</title><rect x="25.6881%" y="1429" width="1.0092%" height="15" fill="rgb(211,96,50)" fg:x="280" fg:w="11"/><text x="25.9381%" y="1439.50"></text></g><g><title>&lt;tokio::time::driver::sleep::Sleep as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="25.6881%" y="1413" width="1.0092%" height="15" fill="rgb(252,114,18)" fg:x="280" fg:w="11"/><text x="25.9381%" y="1423.50"></text></g><g><title>tokio::time::driver::sleep::Sleep::poll_elapsed (9 samples, 0.83%)</title><rect x="25.8716%" y="1397" width="0.8257%" height="15" fill="rgb(223,58,37)" fg:x="282" fg:w="9"/><text x="26.1216%" y="1407.50"></text></g><g><title>tokio::time::driver::entry::TimerEntry::poll_elapsed (8 samples, 0.73%)</title><rect x="25.9633%" y="1381" width="0.7339%" height="15" fill="rgb(237,70,4)" fg:x="283" fg:w="8"/><text x="26.2133%" y="1391.50"></text></g><g><title>tokio::time::driver::handle::Handle::is_shutdown (2 samples, 0.18%)</title><rect x="26.5138%" y="1365" width="0.1835%" height="15" fill="rgb(244,85,46)" fg:x="289" fg:w="2"/><text x="26.7638%" y="1375.50"></text></g><g><title>tokio::time::driver::Inner::is_shutdown (2 samples, 0.18%)</title><rect x="26.5138%" y="1349" width="0.1835%" height="15" fill="rgb(223,39,52)" fg:x="289" fg:w="2"/><text x="26.7638%" y="1359.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (2 samples, 0.18%)</title><rect x="26.5138%" y="1333" width="0.1835%" height="15" fill="rgb(218,200,14)" fg:x="289" fg:w="2"/><text x="26.7638%" y="1343.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.18%)</title><rect x="26.5138%" y="1317" width="0.1835%" height="15" fill="rgb(208,171,16)" fg:x="289" fg:w="2"/><text x="26.7638%" y="1327.50"></text></g><g><title>tokio::time::driver::Inner::lock (1 samples, 0.09%)</title><rect x="26.7890%" y="1349" width="0.0917%" height="15" fill="rgb(234,200,18)" fg:x="292" fg:w="1"/><text x="27.0390%" y="1359.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.09%)</title><rect x="26.7890%" y="1333" width="0.0917%" height="15" fill="rgb(228,45,11)" fg:x="292" fg:w="1"/><text x="27.0390%" y="1343.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.09%)</title><rect x="26.7890%" y="1317" width="0.0917%" height="15" fill="rgb(237,182,11)" fg:x="292" fg:w="1"/><text x="27.0390%" y="1327.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.09%)</title><rect x="26.7890%" y="1301" width="0.0917%" height="15" fill="rgb(241,175,49)" fg:x="292" fg:w="1"/><text x="27.0390%" y="1311.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.09%)</title><rect x="26.7890%" y="1285" width="0.0917%" height="15" fill="rgb(247,38,35)" fg:x="292" fg:w="1"/><text x="27.0390%" y="1295.50"></text></g><g><title>___pthread_mutex_lock (1 samples, 0.09%)</title><rect x="26.7890%" y="1269" width="0.0917%" height="15" fill="rgb(228,39,49)" fg:x="292" fg:w="1"/><text x="27.0390%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::timeout::Timeout&lt;core::future::from_generator::GenFuture&lt;sqlx_core::pool::inner::SharedPool&lt;sqlx_core::postgres::database::Postgres&gt;::acquire::{{closure}}::{{closure}}&gt;&gt;&gt; (3 samples, 0.28%)</title><rect x="26.6972%" y="1445" width="0.2752%" height="15" fill="rgb(226,101,26)" fg:x="291" fg:w="3"/><text x="26.9472%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::driver::sleep::Sleep&gt; (3 samples, 0.28%)</title><rect x="26.6972%" y="1429" width="0.2752%" height="15" fill="rgb(206,141,19)" fg:x="291" fg:w="3"/><text x="26.9472%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::driver::entry::TimerEntry&gt; (3 samples, 0.28%)</title><rect x="26.6972%" y="1413" width="0.2752%" height="15" fill="rgb(211,200,13)" fg:x="291" fg:w="3"/><text x="26.9472%" y="1423.50"></text></g><g><title>&lt;tokio::time::driver::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (3 samples, 0.28%)</title><rect x="26.6972%" y="1397" width="0.2752%" height="15" fill="rgb(241,121,6)" fg:x="291" fg:w="3"/><text x="26.9472%" y="1407.50"></text></g><g><title>tokio::time::driver::entry::TimerEntry::cancel (2 samples, 0.18%)</title><rect x="26.7890%" y="1381" width="0.1835%" height="15" fill="rgb(234,221,29)" fg:x="292" fg:w="2"/><text x="27.0390%" y="1391.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::clear_entry (2 samples, 0.18%)</title><rect x="26.7890%" y="1365" width="0.1835%" height="15" fill="rgb(229,136,5)" fg:x="292" fg:w="2"/><text x="27.0390%" y="1375.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::remove (1 samples, 0.09%)</title><rect x="26.8807%" y="1349" width="0.0917%" height="15" fill="rgb(238,36,11)" fg:x="293" fg:w="1"/><text x="27.1307%" y="1359.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::remove_entry (1 samples, 0.09%)</title><rect x="26.8807%" y="1333" width="0.0917%" height="15" fill="rgb(251,55,41)" fg:x="293" fg:w="1"/><text x="27.1307%" y="1343.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (1 samples, 0.09%)</title><rect x="26.8807%" y="1317" width="0.0917%" height="15" fill="rgb(242,34,40)" fg:x="293" fg:w="1"/><text x="27.1307%" y="1327.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::ne (1 samples, 0.09%)</title><rect x="26.8807%" y="1301" width="0.0917%" height="15" fill="rgb(215,42,17)" fg:x="293" fg:w="1"/><text x="27.1307%" y="1311.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (77 samples, 7.06%)</title><rect x="20.0917%" y="1477" width="7.0642%" height="15" fill="rgb(207,44,46)" fg:x="219" fg:w="77"/><text x="20.3417%" y="1487.50">&lt;core::fu..</text></g><g><title>sqlx_core::pool::inner::SharedPool&lt;DB&gt;::acquire::{{closure}} (77 samples, 7.06%)</title><rect x="20.0917%" y="1461" width="7.0642%" height="15" fill="rgb(211,206,28)" fg:x="219" fg:w="77"/><text x="20.3417%" y="1471.50">sqlx_core..</text></g><g><title>std::time::Instant::now (2 samples, 0.18%)</title><rect x="26.9725%" y="1445" width="0.1835%" height="15" fill="rgb(237,167,16)" fg:x="294" fg:w="2"/><text x="27.2225%" y="1455.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.18%)</title><rect x="26.9725%" y="1429" width="0.1835%" height="15" fill="rgb(233,66,6)" fg:x="294" fg:w="2"/><text x="27.2225%" y="1439.50"></text></g><g><title>std::sys::unix::time::inner::now (2 samples, 0.18%)</title><rect x="26.9725%" y="1413" width="0.1835%" height="15" fill="rgb(246,123,29)" fg:x="294" fg:w="2"/><text x="27.2225%" y="1423.50"></text></g><g><title>__clock_gettime_2 (2 samples, 0.18%)</title><rect x="26.9725%" y="1397" width="0.1835%" height="15" fill="rgb(209,62,40)" fg:x="294" fg:w="2"/><text x="27.2225%" y="1407.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.09%)</title><rect x="27.0642%" y="1381" width="0.0917%" height="15" fill="rgb(218,4,25)" fg:x="295" fg:w="1"/><text x="27.3142%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="27.0642%" y="1365" width="0.0917%" height="15" fill="rgb(253,91,49)" fg:x="295" fg:w="1"/><text x="27.3142%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="27.0642%" y="1349" width="0.0917%" height="15" fill="rgb(228,155,29)" fg:x="295" fg:w="1"/><text x="27.3142%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="27.0642%" y="1333" width="0.0917%" height="15" fill="rgb(243,57,37)" fg:x="295" fg:w="1"/><text x="27.3142%" y="1343.50"></text></g><g><title>sqlx_core::pool::Pool&lt;DB&gt;::acquire::{{closure}} (78 samples, 7.16%)</title><rect x="20.0917%" y="1493" width="7.1560%" height="15" fill="rgb(244,167,17)" fg:x="219" fg:w="78"/><text x="20.3417%" y="1503.50">sqlx_core:..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.09%)</title><rect x="27.1560%" y="1477" width="0.0917%" height="15" fill="rgb(207,181,38)" fg:x="296" fg:w="1"/><text x="27.4060%" y="1487.50"></text></g><g><title>sqlx_core::pool::Pool&lt;DB&gt;::acquire::{{closure}}::{{closure}} (1 samples, 0.09%)</title><rect x="27.1560%" y="1461" width="0.0917%" height="15" fill="rgb(211,8,23)" fg:x="296" fg:w="1"/><text x="27.4060%" y="1471.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;sqlx_core::pool::connection::Live&lt;DB&gt;&gt;::attach (1 samples, 0.09%)</title><rect x="27.1560%" y="1445" width="0.0917%" height="15" fill="rgb(235,11,44)" fg:x="296" fg:w="1"/><text x="27.4060%" y="1455.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="27.1560%" y="1429" width="0.0917%" height="15" fill="rgb(248,18,52)" fg:x="296" fg:w="1"/><text x="27.4060%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::task::list::OwnedTasksInner&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="27.2477%" y="1365" width="0.0917%" height="15" fill="rgb(208,4,7)" fg:x="297" fg:w="1"/><text x="27.4977%" y="1375.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="27.2477%" y="1349" width="0.0917%" height="15" fill="rgb(240,17,39)" fg:x="297" fg:w="1"/><text x="27.4977%" y="1359.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.09%)</title><rect x="27.2477%" y="1333" width="0.0917%" height="15" fill="rgb(207,170,3)" fg:x="297" fg:w="1"/><text x="27.4977%" y="1343.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.09%)</title><rect x="27.2477%" y="1317" width="0.0917%" height="15" fill="rgb(236,100,52)" fg:x="297" fg:w="1"/><text x="27.4977%" y="1327.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="27.2477%" y="1301" width="0.0917%" height="15" fill="rgb(246,78,51)" fg:x="297" fg:w="1"/><text x="27.4977%" y="1311.50"></text></g><g><title>malloc_consolidate (1 samples, 0.09%)</title><rect x="27.3394%" y="1205" width="0.0917%" height="15" fill="rgb(211,17,15)" fg:x="298" fg:w="1"/><text x="27.5894%" y="1215.50"></text></g><g><title>sqlx_core::pool::executor::&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_optional::{{closure}} (3 samples, 0.28%)</title><rect x="27.2477%" y="1493" width="0.2752%" height="15" fill="rgb(209,59,46)" fg:x="297" fg:w="3"/><text x="27.4977%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_core::postgres::database::Postgres&gt;&gt; (3 samples, 0.28%)</title><rect x="27.2477%" y="1477" width="0.2752%" height="15" fill="rgb(210,92,25)" fg:x="297" fg:w="3"/><text x="27.4977%" y="1487.50"></text></g><g><title>&lt;sqlx_core::pool::connection::PoolConnection&lt;DB&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.28%)</title><rect x="27.2477%" y="1461" width="0.2752%" height="15" fill="rgb(238,174,52)" fg:x="297" fg:w="3"/><text x="27.4977%" y="1471.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn (3 samples, 0.28%)</title><rect x="27.2477%" y="1445" width="0.2752%" height="15" fill="rgb(230,73,7)" fg:x="297" fg:w="3"/><text x="27.4977%" y="1455.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (3 samples, 0.28%)</title><rect x="27.2477%" y="1429" width="0.2752%" height="15" fill="rgb(243,124,40)" fg:x="297" fg:w="3"/><text x="27.4977%" y="1439.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (3 samples, 0.28%)</title><rect x="27.2477%" y="1413" width="0.2752%" height="15" fill="rgb(244,170,11)" fg:x="297" fg:w="3"/><text x="27.4977%" y="1423.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::bind_new_task (3 samples, 0.28%)</title><rect x="27.2477%" y="1397" width="0.2752%" height="15" fill="rgb(207,114,54)" fg:x="297" fg:w="3"/><text x="27.4977%" y="1407.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (3 samples, 0.28%)</title><rect x="27.2477%" y="1381" width="0.2752%" height="15" fill="rgb(205,42,20)" fg:x="297" fg:w="3"/><text x="27.4977%" y="1391.50"></text></g><g><title>tokio::runtime::task::new_task (2 samples, 0.18%)</title><rect x="27.3394%" y="1365" width="0.1835%" height="15" fill="rgb(230,30,28)" fg:x="298" fg:w="2"/><text x="27.5894%" y="1375.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (2 samples, 0.18%)</title><rect x="27.3394%" y="1349" width="0.1835%" height="15" fill="rgb(205,73,54)" fg:x="298" fg:w="2"/><text x="27.5894%" y="1359.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (2 samples, 0.18%)</title><rect x="27.3394%" y="1333" width="0.1835%" height="15" fill="rgb(254,227,23)" fg:x="298" fg:w="2"/><text x="27.5894%" y="1343.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.18%)</title><rect x="27.3394%" y="1317" width="0.1835%" height="15" fill="rgb(228,202,34)" fg:x="298" fg:w="2"/><text x="27.5894%" y="1327.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.18%)</title><rect x="27.3394%" y="1301" width="0.1835%" height="15" fill="rgb(222,225,37)" fg:x="298" fg:w="2"/><text x="27.5894%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.18%)</title><rect x="27.3394%" y="1285" width="0.1835%" height="15" fill="rgb(221,14,54)" fg:x="298" fg:w="2"/><text x="27.5894%" y="1295.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.18%)</title><rect x="27.3394%" y="1269" width="0.1835%" height="15" fill="rgb(254,102,2)" fg:x="298" fg:w="2"/><text x="27.5894%" y="1279.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.18%)</title><rect x="27.3394%" y="1253" width="0.1835%" height="15" fill="rgb(232,104,17)" fg:x="298" fg:w="2"/><text x="27.5894%" y="1263.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.18%)</title><rect x="27.3394%" y="1237" width="0.1835%" height="15" fill="rgb(250,220,14)" fg:x="298" fg:w="2"/><text x="27.5894%" y="1247.50"></text></g><g><title>_int_malloc (2 samples, 0.18%)</title><rect x="27.3394%" y="1221" width="0.1835%" height="15" fill="rgb(241,158,9)" fg:x="298" fg:w="2"/><text x="27.5894%" y="1231.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.09%)</title><rect x="27.4312%" y="1205" width="0.0917%" height="15" fill="rgb(246,9,43)" fg:x="299" fg:w="1"/><text x="27.6812%" y="1215.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="27.5229%" y="1317" width="0.0917%" height="15" fill="rgb(206,73,33)" fg:x="300" fg:w="1"/><text x="27.7729%" y="1327.50"></text></g><g><title>&lt;sha2::sha256::Engine256 as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="27.5229%" y="1301" width="0.0917%" height="15" fill="rgb(222,79,8)" fg:x="300" fg:w="1"/><text x="27.7729%" y="1311.50"></text></g><g><title>&lt;block_buffer::BlockBuffer&lt;BlockSize&gt; as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="27.5229%" y="1285" width="0.0917%" height="15" fill="rgb(234,8,54)" fg:x="300" fg:w="1"/><text x="27.7729%" y="1295.50"></text></g><g><title>generic_array::impls::&lt;impl core::clone::Clone for generic_array::GenericArray&lt;T,N&gt;&gt;::clone (1 samples, 0.09%)</title><rect x="27.5229%" y="1269" width="0.0917%" height="15" fill="rgb(209,134,38)" fg:x="300" fg:w="1"/><text x="27.7729%" y="1279.50"></text></g><g><title>generic_array::functional::FunctionalSequence::map (1 samples, 0.09%)</title><rect x="27.5229%" y="1253" width="0.0917%" height="15" fill="rgb(230,127,29)" fg:x="300" fg:w="1"/><text x="27.7729%" y="1263.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="27.5229%" y="1237" width="0.0917%" height="15" fill="rgb(242,44,41)" fg:x="300" fg:w="1"/><text x="27.7729%" y="1247.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.09%)</title><rect x="27.5229%" y="1221" width="0.0917%" height="15" fill="rgb(222,56,43)" fg:x="300" fg:w="1"/><text x="27.7729%" y="1231.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (1 samples, 0.09%)</title><rect x="27.6147%" y="1317" width="0.0917%" height="15" fill="rgb(238,39,47)" fg:x="301" fg:w="1"/><text x="27.8647%" y="1327.50"></text></g><g><title>sha2::sha256::Engine256::update (1 samples, 0.09%)</title><rect x="27.6147%" y="1301" width="0.0917%" height="15" fill="rgb(226,79,43)" fg:x="301" fg:w="1"/><text x="27.8647%" y="1311.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (1 samples, 0.09%)</title><rect x="27.6147%" y="1285" width="0.0917%" height="15" fill="rgb(242,105,53)" fg:x="301" fg:w="1"/><text x="27.8647%" y="1295.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.09%)</title><rect x="27.6147%" y="1269" width="0.0917%" height="15" fill="rgb(251,132,46)" fg:x="301" fg:w="1"/><text x="27.8647%" y="1279.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.09%)</title><rect x="27.6147%" y="1253" width="0.0917%" height="15" fill="rgb(231,77,14)" fg:x="301" fg:w="1"/><text x="27.8647%" y="1263.50"></text></g><g><title>__memmove_avx_unaligned (1 samples, 0.09%)</title><rect x="27.6147%" y="1237" width="0.0917%" height="15" fill="rgb(240,135,9)" fg:x="301" fg:w="1"/><text x="27.8647%" y="1247.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be_bytes (3 samples, 0.28%)</title><rect x="28.0734%" y="1269" width="0.2752%" height="15" fill="rgb(248,109,14)" fg:x="306" fg:w="3"/><text x="28.3234%" y="1279.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be (3 samples, 0.28%)</title><rect x="28.0734%" y="1253" width="0.2752%" height="15" fill="rgb(227,146,52)" fg:x="306" fg:w="3"/><text x="28.3234%" y="1263.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (3 samples, 0.28%)</title><rect x="28.0734%" y="1237" width="0.2752%" height="15" fill="rgb(232,54,3)" fg:x="306" fg:w="3"/><text x="28.3234%" y="1247.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::digest_pad (1 samples, 0.09%)</title><rect x="28.4404%" y="1237" width="0.0917%" height="15" fill="rgb(229,201,43)" fg:x="310" fg:w="1"/><text x="28.6904%" y="1247.50"></text></g><g><title>block_buffer::set_zero (1 samples, 0.09%)</title><rect x="28.4404%" y="1221" width="0.0917%" height="15" fill="rgb(252,161,33)" fg:x="310" fg:w="1"/><text x="28.6904%" y="1231.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.09%)</title><rect x="28.4404%" y="1205" width="0.0917%" height="15" fill="rgb(226,146,40)" fg:x="310" fg:w="1"/><text x="28.6904%" y="1215.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.09%)</title><rect x="28.4404%" y="1189" width="0.0917%" height="15" fill="rgb(219,47,25)" fg:x="310" fg:w="1"/><text x="28.6904%" y="1199.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_shuffle_epi32 (2 samples, 0.18%)</title><rect x="28.5321%" y="1173" width="0.1835%" height="15" fill="rgb(250,135,13)" fg:x="311" fg:w="2"/><text x="28.7821%" y="1183.50"></text></g><g><title>core::core_arch::x86::sha::_mm_sha256msg1_epu32 (3 samples, 0.28%)</title><rect x="28.7156%" y="1157" width="0.2752%" height="15" fill="rgb(219,229,18)" fg:x="313" fg:w="3"/><text x="28.9656%" y="1167.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (17 samples, 1.56%)</title><rect x="27.5229%" y="1333" width="1.5596%" height="15" fill="rgb(217,152,27)" fg:x="300" fg:w="17"/><text x="27.7729%" y="1343.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (15 samples, 1.38%)</title><rect x="27.7064%" y="1317" width="1.3761%" height="15" fill="rgb(225,71,47)" fg:x="302" fg:w="15"/><text x="27.9564%" y="1327.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (12 samples, 1.10%)</title><rect x="27.9817%" y="1301" width="1.1009%" height="15" fill="rgb(220,139,14)" fg:x="305" fg:w="12"/><text x="28.2317%" y="1311.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (11 samples, 1.01%)</title><rect x="28.0734%" y="1285" width="1.0092%" height="15" fill="rgb(247,54,32)" fg:x="306" fg:w="11"/><text x="28.3234%" y="1295.50"></text></g><g><title>sha2::sha256::Engine256::finish (8 samples, 0.73%)</title><rect x="28.3486%" y="1269" width="0.7339%" height="15" fill="rgb(252,131,39)" fg:x="309" fg:w="8"/><text x="28.5986%" y="1279.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (7 samples, 0.64%)</title><rect x="28.4404%" y="1253" width="0.6422%" height="15" fill="rgb(210,108,39)" fg:x="310" fg:w="7"/><text x="28.6904%" y="1263.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (6 samples, 0.55%)</title><rect x="28.5321%" y="1237" width="0.5505%" height="15" fill="rgb(205,23,29)" fg:x="311" fg:w="6"/><text x="28.7821%" y="1247.50"></text></g><g><title>sha2::sha256::compress256 (6 samples, 0.55%)</title><rect x="28.5321%" y="1221" width="0.5505%" height="15" fill="rgb(246,139,46)" fg:x="311" fg:w="6"/><text x="28.7821%" y="1231.50"></text></g><g><title>sha2::sha256::x86::compress (6 samples, 0.55%)</title><rect x="28.5321%" y="1205" width="0.5505%" height="15" fill="rgb(250,81,26)" fg:x="311" fg:w="6"/><text x="28.7821%" y="1215.50"></text></g><g><title>sha2::sha256::x86::digest_blocks (6 samples, 0.55%)</title><rect x="28.5321%" y="1189" width="0.5505%" height="15" fill="rgb(214,104,7)" fg:x="311" fg:w="6"/><text x="28.7821%" y="1199.50"></text></g><g><title>sha2::sha256::x86::schedule (4 samples, 0.37%)</title><rect x="28.7156%" y="1173" width="0.3670%" height="15" fill="rgb(233,189,8)" fg:x="313" fg:w="4"/><text x="28.9656%" y="1183.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (1 samples, 0.09%)</title><rect x="28.9908%" y="1157" width="0.0917%" height="15" fill="rgb(228,141,17)" fg:x="316" fg:w="1"/><text x="29.2408%" y="1167.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.09%)</title><rect x="29.1743%" y="1269" width="0.0917%" height="15" fill="rgb(247,157,1)" fg:x="318" fg:w="1"/><text x="29.4243%" y="1279.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.09%)</title><rect x="29.1743%" y="1253" width="0.0917%" height="15" fill="rgb(249,225,5)" fg:x="318" fg:w="1"/><text x="29.4243%" y="1263.50"></text></g><g><title>__memmove_avx_unaligned (1 samples, 0.09%)</title><rect x="29.1743%" y="1237" width="0.0917%" height="15" fill="rgb(242,55,13)" fg:x="318" fg:w="1"/><text x="29.4243%" y="1247.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_shuffle_epi32 (2 samples, 0.18%)</title><rect x="29.2661%" y="1205" width="0.1835%" height="15" fill="rgb(230,49,50)" fg:x="319" fg:w="2"/><text x="29.5161%" y="1215.50"></text></g><g><title>core::core_arch::x86::sha::_mm_sha256msg1_epu32 (3 samples, 0.28%)</title><rect x="29.4495%" y="1189" width="0.2752%" height="15" fill="rgb(241,111,38)" fg:x="321" fg:w="3"/><text x="29.6995%" y="1199.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_from_slice (9 samples, 0.83%)</title><rect x="29.0826%" y="1333" width="0.8257%" height="15" fill="rgb(252,155,4)" fg:x="317" fg:w="9"/><text x="29.3326%" y="1343.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (8 samples, 0.73%)</title><rect x="29.1743%" y="1317" width="0.7339%" height="15" fill="rgb(212,69,32)" fg:x="318" fg:w="8"/><text x="29.4243%" y="1327.50"></text></g><g><title>sha2::sha256::Engine256::update (8 samples, 0.73%)</title><rect x="29.1743%" y="1301" width="0.7339%" height="15" fill="rgb(243,107,47)" fg:x="318" fg:w="8"/><text x="29.4243%" y="1311.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (8 samples, 0.73%)</title><rect x="29.1743%" y="1285" width="0.7339%" height="15" fill="rgb(247,130,12)" fg:x="318" fg:w="8"/><text x="29.4243%" y="1295.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (7 samples, 0.64%)</title><rect x="29.2661%" y="1269" width="0.6422%" height="15" fill="rgb(233,74,16)" fg:x="319" fg:w="7"/><text x="29.5161%" y="1279.50"></text></g><g><title>sha2::sha256::compress256 (7 samples, 0.64%)</title><rect x="29.2661%" y="1253" width="0.6422%" height="15" fill="rgb(208,58,18)" fg:x="319" fg:w="7"/><text x="29.5161%" y="1263.50"></text></g><g><title>sha2::sha256::x86::compress (7 samples, 0.64%)</title><rect x="29.2661%" y="1237" width="0.6422%" height="15" fill="rgb(242,225,1)" fg:x="319" fg:w="7"/><text x="29.5161%" y="1247.50"></text></g><g><title>sha2::sha256::x86::digest_blocks (7 samples, 0.64%)</title><rect x="29.2661%" y="1221" width="0.6422%" height="15" fill="rgb(249,39,40)" fg:x="319" fg:w="7"/><text x="29.5161%" y="1231.50"></text></g><g><title>sha2::sha256::x86::schedule (5 samples, 0.46%)</title><rect x="29.4495%" y="1205" width="0.4587%" height="15" fill="rgb(207,72,44)" fg:x="321" fg:w="5"/><text x="29.6995%" y="1215.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (2 samples, 0.18%)</title><rect x="29.7248%" y="1189" width="0.1835%" height="15" fill="rgb(215,193,12)" fg:x="324" fg:w="2"/><text x="29.9748%" y="1199.50"></text></g><g><title>sqlx_core::postgres::connection::sasl::authenticate::{{closure}} (27 samples, 2.48%)</title><rect x="27.5229%" y="1365" width="2.4771%" height="15" fill="rgb(248,41,39)" fg:x="300" fg:w="27"/><text x="27.7729%" y="1375.50">sq..</text></g><g><title>sqlx_core::postgres::connection::sasl::hi (27 samples, 2.48%)</title><rect x="27.5229%" y="1349" width="2.4771%" height="15" fill="rgb(253,85,4)" fg:x="300" fg:w="27"/><text x="27.7729%" y="1359.50">sq..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.09%)</title><rect x="29.9083%" y="1333" width="0.0917%" height="15" fill="rgb(243,70,31)" fg:x="326" fg:w="1"/><text x="30.1583%" y="1343.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="29.9083%" y="1317" width="0.0917%" height="15" fill="rgb(253,195,26)" fg:x="326" fg:w="1"/><text x="30.1583%" y="1327.50"></text></g><g><title>sqlx_core::pool::inner::SharedPool&lt;DB&gt;::acquire::{{closure}}::{{closure}} (28 samples, 2.57%)</title><rect x="27.5229%" y="1493" width="2.5688%" height="15" fill="rgb(243,42,11)" fg:x="300" fg:w="28"/><text x="27.7729%" y="1503.50">sq..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 2.57%)</title><rect x="27.5229%" y="1477" width="2.5688%" height="15" fill="rgb(239,66,17)" fg:x="300" fg:w="28"/><text x="27.7729%" y="1487.50">&lt;c..</text></g><g><title>sqlx_core::pool::inner::SharedPool&lt;DB&gt;::connection::{{closure}} (28 samples, 2.57%)</title><rect x="27.5229%" y="1461" width="2.5688%" height="15" fill="rgb(217,132,21)" fg:x="300" fg:w="28"/><text x="27.7729%" y="1471.50">sq..</text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 2.57%)</title><rect x="27.5229%" y="1445" width="2.5688%" height="15" fill="rgb(252,202,21)" fg:x="300" fg:w="28"/><text x="27.7729%" y="1455.50">&lt;t..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (28 samples, 2.57%)</title><rect x="27.5229%" y="1429" width="2.5688%" height="15" fill="rgb(233,98,36)" fg:x="300" fg:w="28"/><text x="27.7729%" y="1439.50">&lt;c..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 2.57%)</title><rect x="27.5229%" y="1413" width="2.5688%" height="15" fill="rgb(216,153,54)" fg:x="300" fg:w="28"/><text x="27.7729%" y="1423.50">&lt;c..</text></g><g><title>sqlx_core::postgres::connection::establish::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::establish::{{closure}} (28 samples, 2.57%)</title><rect x="27.5229%" y="1397" width="2.5688%" height="15" fill="rgb(250,99,7)" fg:x="300" fg:w="28"/><text x="27.7729%" y="1407.50">sq..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 2.57%)</title><rect x="27.5229%" y="1381" width="2.5688%" height="15" fill="rgb(207,56,50)" fg:x="300" fg:w="28"/><text x="27.7729%" y="1391.50">&lt;c..</text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv::{{closure}} (1 samples, 0.09%)</title><rect x="30.0000%" y="1365" width="0.0917%" height="15" fill="rgb(244,61,34)" fg:x="327" fg:w="1"/><text x="30.2500%" y="1375.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="30.0000%" y="1349" width="0.0917%" height="15" fill="rgb(241,50,38)" fg:x="327" fg:w="1"/><text x="30.2500%" y="1359.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv_unchecked::{{closure}} (1 samples, 0.09%)</title><rect x="30.0000%" y="1333" width="0.0917%" height="15" fill="rgb(212,166,30)" fg:x="327" fg:w="1"/><text x="30.2500%" y="1343.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (1 samples, 0.09%)</title><rect x="30.1835%" y="1253" width="0.0917%" height="15" fill="rgb(249,127,32)" fg:x="329" fg:w="1"/><text x="30.4335%" y="1263.50"></text></g><g><title>sha2::sha256::Engine256::update (1 samples, 0.09%)</title><rect x="30.1835%" y="1237" width="0.0917%" height="15" fill="rgb(209,103,0)" fg:x="329" fg:w="1"/><text x="30.4335%" y="1247.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (1 samples, 0.09%)</title><rect x="30.1835%" y="1221" width="0.0917%" height="15" fill="rgb(238,209,51)" fg:x="329" fg:w="1"/><text x="30.4335%" y="1231.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::remaining (1 samples, 0.09%)</title><rect x="30.1835%" y="1205" width="0.0917%" height="15" fill="rgb(237,56,23)" fg:x="329" fg:w="1"/><text x="30.4335%" y="1215.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::Mac&gt;::finalize (2 samples, 0.18%)</title><rect x="30.1835%" y="1269" width="0.1835%" height="15" fill="rgb(215,153,46)" fg:x="329" fg:w="2"/><text x="30.4335%" y="1279.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (1 samples, 0.09%)</title><rect x="30.2752%" y="1253" width="0.0917%" height="15" fill="rgb(224,49,31)" fg:x="330" fg:w="1"/><text x="30.5252%" y="1263.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (1 samples, 0.09%)</title><rect x="30.2752%" y="1237" width="0.0917%" height="15" fill="rgb(250,18,42)" fg:x="330" fg:w="1"/><text x="30.5252%" y="1247.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (1 samples, 0.09%)</title><rect x="30.2752%" y="1221" width="0.0917%" height="15" fill="rgb(215,176,39)" fg:x="330" fg:w="1"/><text x="30.5252%" y="1231.50"></text></g><g><title>sha2::sha256::Engine256::finish (1 samples, 0.09%)</title><rect x="30.2752%" y="1205" width="0.0917%" height="15" fill="rgb(223,77,29)" fg:x="330" fg:w="1"/><text x="30.5252%" y="1215.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (1 samples, 0.09%)</title><rect x="30.2752%" y="1189" width="0.0917%" height="15" fill="rgb(234,94,52)" fg:x="330" fg:w="1"/><text x="30.5252%" y="1199.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::digest_pad (1 samples, 0.09%)</title><rect x="30.2752%" y="1173" width="0.0917%" height="15" fill="rgb(220,154,50)" fg:x="330" fg:w="1"/><text x="30.5252%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (329 samples, 30.18%)</title><rect x="0.2752%" y="1509" width="30.1835%" height="15" fill="rgb(212,11,10)" fg:x="3" fg:w="329"/><text x="0.5252%" y="1519.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as co..</text></g><g><title>sqlx_core::pool::options::PoolOptions&lt;DB&gt;::connect::{{closure}} (4 samples, 0.37%)</title><rect x="30.0917%" y="1493" width="0.3670%" height="15" fill="rgb(205,166,19)" fg:x="328" fg:w="4"/><text x="30.3417%" y="1503.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="30.0917%" y="1477" width="0.3670%" height="15" fill="rgb(244,198,16)" fg:x="328" fg:w="4"/><text x="30.3417%" y="1487.50"></text></g><g><title>sqlx_core::pool::options::PoolOptions&lt;DB&gt;::connect_with::{{closure}} (4 samples, 0.37%)</title><rect x="30.0917%" y="1461" width="0.3670%" height="15" fill="rgb(219,69,12)" fg:x="328" fg:w="4"/><text x="30.3417%" y="1471.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="30.0917%" y="1445" width="0.3670%" height="15" fill="rgb(245,30,7)" fg:x="328" fg:w="4"/><text x="30.3417%" y="1455.50"></text></g><g><title>sqlx_core::pool::options::init_min_connections::{{closure}} (4 samples, 0.37%)</title><rect x="30.0917%" y="1429" width="0.3670%" height="15" fill="rgb(218,221,48)" fg:x="328" fg:w="4"/><text x="30.3417%" y="1439.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="30.0917%" y="1413" width="0.3670%" height="15" fill="rgb(216,66,15)" fg:x="328" fg:w="4"/><text x="30.3417%" y="1423.50"></text></g><g><title>sqlx_core::pool::inner::SharedPool&lt;DB&gt;::connection::{{closure}} (4 samples, 0.37%)</title><rect x="30.0917%" y="1397" width="0.3670%" height="15" fill="rgb(226,122,50)" fg:x="328" fg:w="4"/><text x="30.3417%" y="1407.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="30.0917%" y="1381" width="0.3670%" height="15" fill="rgb(239,156,16)" fg:x="328" fg:w="4"/><text x="30.3417%" y="1391.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="30.0917%" y="1365" width="0.3670%" height="15" fill="rgb(224,27,38)" fg:x="328" fg:w="4"/><text x="30.3417%" y="1375.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="30.0917%" y="1349" width="0.3670%" height="15" fill="rgb(224,39,27)" fg:x="328" fg:w="4"/><text x="30.3417%" y="1359.50"></text></g><g><title>sqlx_core::postgres::connection::establish::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::establish::{{closure}} (4 samples, 0.37%)</title><rect x="30.0917%" y="1333" width="0.3670%" height="15" fill="rgb(215,92,29)" fg:x="328" fg:w="4"/><text x="30.3417%" y="1343.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.1835%" y="1317" width="0.2752%" height="15" fill="rgb(207,159,16)" fg:x="329" fg:w="3"/><text x="30.4335%" y="1327.50"></text></g><g><title>sqlx_core::postgres::connection::sasl::authenticate::{{closure}} (3 samples, 0.28%)</title><rect x="30.1835%" y="1301" width="0.2752%" height="15" fill="rgb(238,163,47)" fg:x="329" fg:w="3"/><text x="30.4335%" y="1311.50"></text></g><g><title>sqlx_core::postgres::connection::sasl::hi (3 samples, 0.28%)</title><rect x="30.1835%" y="1285" width="0.2752%" height="15" fill="rgb(219,91,49)" fg:x="329" fg:w="3"/><text x="30.4335%" y="1295.50"></text></g><g><title>&lt;hmac::Hmac&lt;D&gt; as crypto_mac::NewMac&gt;::new_from_slice (1 samples, 0.09%)</title><rect x="30.3670%" y="1269" width="0.0917%" height="15" fill="rgb(227,167,31)" fg:x="331" fg:w="1"/><text x="30.6170%" y="1279.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (1 samples, 0.09%)</title><rect x="30.3670%" y="1253" width="0.0917%" height="15" fill="rgb(234,80,54)" fg:x="331" fg:w="1"/><text x="30.6170%" y="1263.50"></text></g><g><title>sha2::sha256::Engine256::update (1 samples, 0.09%)</title><rect x="30.3670%" y="1237" width="0.0917%" height="15" fill="rgb(212,114,2)" fg:x="331" fg:w="1"/><text x="30.6170%" y="1247.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (1 samples, 0.09%)</title><rect x="30.3670%" y="1221" width="0.0917%" height="15" fill="rgb(234,50,24)" fg:x="331" fg:w="1"/><text x="30.6170%" y="1231.50"></text></g><g><title>sha2::sha256::Engine256::update::{{closure}} (1 samples, 0.09%)</title><rect x="30.3670%" y="1205" width="0.0917%" height="15" fill="rgb(221,68,8)" fg:x="331" fg:w="1"/><text x="30.6170%" y="1215.50"></text></g><g><title>sha2::sha256::compress256 (1 samples, 0.09%)</title><rect x="30.3670%" y="1189" width="0.0917%" height="15" fill="rgb(254,180,31)" fg:x="331" fg:w="1"/><text x="30.6170%" y="1199.50"></text></g><g><title>sha2::sha256::x86::compress (1 samples, 0.09%)</title><rect x="30.3670%" y="1173" width="0.0917%" height="15" fill="rgb(247,130,50)" fg:x="331" fg:w="1"/><text x="30.6170%" y="1183.50"></text></g><g><title>sha2::sha256::x86::digest_blocks (1 samples, 0.09%)</title><rect x="30.3670%" y="1157" width="0.0917%" height="15" fill="rgb(211,109,4)" fg:x="331" fg:w="1"/><text x="30.6170%" y="1167.50"></text></g><g><title>sha2::sha256::x86::schedule (1 samples, 0.09%)</title><rect x="30.3670%" y="1141" width="0.0917%" height="15" fill="rgb(238,50,21)" fg:x="331" fg:w="1"/><text x="30.6170%" y="1151.50"></text></g><g><title>core::core_arch::x86::sha::_mm_sha256msg1_epu32 (1 samples, 0.09%)</title><rect x="30.3670%" y="1125" width="0.0917%" height="15" fill="rgb(225,57,45)" fg:x="331" fg:w="1"/><text x="30.6170%" y="1135.50"></text></g><g><title>&lt;futures_util::future::join_all::JoinAll&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="30.4587%" y="1509" width="0.1835%" height="15" fill="rgb(209,196,50)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1519.50"></text></g><g><title>&lt;futures_util::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="30.4587%" y="1493" width="0.1835%" height="15" fill="rgb(242,140,13)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1503.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="30.4587%" y="1477" width="0.1835%" height="15" fill="rgb(217,111,7)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1487.50"></text></g><g><title>backend::get_abbrev::{{closure}} (2 samples, 0.18%)</title><rect x="30.4587%" y="1461" width="0.1835%" height="15" fill="rgb(253,193,51)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1471.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="30.4587%" y="1445" width="0.1835%" height="15" fill="rgb(252,70,29)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1455.50"></text></g><g><title>sqlx_core::query::Map&lt;DB,F,A&gt;::fetch_one::{{closure}} (2 samples, 0.18%)</title><rect x="30.4587%" y="1429" width="0.1835%" height="15" fill="rgb(232,127,12)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1439.50"></text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="30.4587%" y="1413" width="0.1835%" height="15" fill="rgb(211,180,21)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1423.50"></text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="30.4587%" y="1397" width="0.1835%" height="15" fill="rgb(229,72,13)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1407.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="30.4587%" y="1381" width="0.1835%" height="15" fill="rgb(240,211,49)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1391.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (2 samples, 0.18%)</title><rect x="30.4587%" y="1365" width="0.1835%" height="15" fill="rgb(219,149,40)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1375.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="30.4587%" y="1349" width="0.1835%" height="15" fill="rgb(210,127,46)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1359.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="30.4587%" y="1333" width="0.1835%" height="15" fill="rgb(220,106,7)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1343.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="30.4587%" y="1317" width="0.1835%" height="15" fill="rgb(249,31,22)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1327.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="30.4587%" y="1301" width="0.1835%" height="15" fill="rgb(253,1,49)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1311.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (2 samples, 0.18%)</title><rect x="30.4587%" y="1285" width="0.1835%" height="15" fill="rgb(227,144,33)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1295.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="30.4587%" y="1269" width="0.1835%" height="15" fill="rgb(249,163,44)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1279.50"></text></g><g><title>sqlx_core::query::Map&lt;DB,F,A&gt;::fetch_optional::{{closure}} (2 samples, 0.18%)</title><rect x="30.4587%" y="1253" width="0.1835%" height="15" fill="rgb(234,15,39)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1263.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="30.4587%" y="1237" width="0.1835%" height="15" fill="rgb(207,66,16)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="30.4587%" y="1221" width="0.1835%" height="15" fill="rgb(233,112,24)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1231.50"></text></g><g><title>sqlx_core::pool::executor::&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_optional::{{closure}} (2 samples, 0.18%)</title><rect x="30.4587%" y="1205" width="0.1835%" height="15" fill="rgb(230,90,22)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_core::postgres::database::Postgres&gt;&gt; (2 samples, 0.18%)</title><rect x="30.4587%" y="1189" width="0.1835%" height="15" fill="rgb(229,61,13)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1199.50"></text></g><g><title>&lt;sqlx_core::pool::connection::PoolConnection&lt;DB&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.18%)</title><rect x="30.4587%" y="1173" width="0.1835%" height="15" fill="rgb(225,57,24)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1183.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn (2 samples, 0.18%)</title><rect x="30.4587%" y="1157" width="0.1835%" height="15" fill="rgb(208,169,48)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1167.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (2 samples, 0.18%)</title><rect x="30.4587%" y="1141" width="0.1835%" height="15" fill="rgb(244,218,51)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1151.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (2 samples, 0.18%)</title><rect x="30.4587%" y="1125" width="0.1835%" height="15" fill="rgb(214,148,10)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1135.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::bind_new_task (2 samples, 0.18%)</title><rect x="30.4587%" y="1109" width="0.1835%" height="15" fill="rgb(225,174,27)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1119.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (2 samples, 0.18%)</title><rect x="30.4587%" y="1093" width="0.1835%" height="15" fill="rgb(230,96,26)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1103.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (2 samples, 0.18%)</title><rect x="30.4587%" y="1077" width="0.1835%" height="15" fill="rgb(232,10,30)" fg:x="332" fg:w="2"/><text x="30.7087%" y="1087.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (1 samples, 0.09%)</title><rect x="30.5505%" y="1061" width="0.0917%" height="15" fill="rgb(222,8,50)" fg:x="333" fg:w="1"/><text x="30.8005%" y="1071.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_driver (1 samples, 0.09%)</title><rect x="30.5505%" y="1045" width="0.0917%" height="15" fill="rgb(213,81,27)" fg:x="333" fg:w="1"/><text x="30.8005%" y="1055.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (1 samples, 0.09%)</title><rect x="30.5505%" y="1029" width="0.0917%" height="15" fill="rgb(245,50,10)" fg:x="333" fg:w="1"/><text x="30.8005%" y="1039.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (1 samples, 0.09%)</title><rect x="30.6422%" y="357" width="0.0917%" height="15" fill="rgb(216,100,18)" fg:x="334" fg:w="1"/><text x="30.8922%" y="367.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.09%)</title><rect x="30.6422%" y="341" width="0.0917%" height="15" fill="rgb(236,147,54)" fg:x="334" fg:w="1"/><text x="30.8922%" y="351.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="1509" width="0.2752%" height="15" fill="rgb(205,143,26)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1519.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (3 samples, 0.28%)</title><rect x="30.6422%" y="1493" width="0.2752%" height="15" fill="rgb(236,26,9)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1503.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.28%)</title><rect x="30.6422%" y="1477" width="0.2752%" height="15" fill="rgb(221,165,53)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1487.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.28%)</title><rect x="30.6422%" y="1461" width="0.2752%" height="15" fill="rgb(214,110,17)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1471.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (3 samples, 0.28%)</title><rect x="30.6422%" y="1445" width="0.2752%" height="15" fill="rgb(237,197,12)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1455.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.28%)</title><rect x="30.6422%" y="1429" width="0.2752%" height="15" fill="rgb(205,84,17)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1439.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.28%)</title><rect x="30.6422%" y="1413" width="0.2752%" height="15" fill="rgb(237,18,45)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1423.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="1397" width="0.2752%" height="15" fill="rgb(221,87,14)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1407.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="1381" width="0.2752%" height="15" fill="rgb(238,186,15)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1391.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="1365" width="0.2752%" height="15" fill="rgb(208,115,11)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1375.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="1349" width="0.2752%" height="15" fill="rgb(254,175,0)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1359.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (3 samples, 0.28%)</title><rect x="30.6422%" y="1333" width="0.2752%" height="15" fill="rgb(227,24,42)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1343.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="1317" width="0.2752%" height="15" fill="rgb(223,211,37)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1327.50"></text></g><g><title>sqlx_core::query::Map&lt;DB,F,A&gt;::fetch_many::{{closure}}::{{closure}} (3 samples, 0.28%)</title><rect x="30.6422%" y="1301" width="0.2752%" height="15" fill="rgb(235,49,27)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1311.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="1285" width="0.2752%" height="15" fill="rgb(254,97,51)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1295.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (3 samples, 0.28%)</title><rect x="30.6422%" y="1269" width="0.2752%" height="15" fill="rgb(249,51,40)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1279.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (3 samples, 0.28%)</title><rect x="30.6422%" y="1253" width="0.2752%" height="15" fill="rgb(210,128,45)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1263.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.28%)</title><rect x="30.6422%" y="1237" width="0.2752%" height="15" fill="rgb(224,137,50)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1247.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.28%)</title><rect x="30.6422%" y="1221" width="0.2752%" height="15" fill="rgb(242,15,9)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1231.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="1205" width="0.2752%" height="15" fill="rgb(233,187,41)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1215.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="1189" width="0.2752%" height="15" fill="rgb(227,2,29)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1199.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="1173" width="0.2752%" height="15" fill="rgb(222,70,3)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="1157" width="0.2752%" height="15" fill="rgb(213,11,42)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1167.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (3 samples, 0.28%)</title><rect x="30.6422%" y="1141" width="0.2752%" height="15" fill="rgb(225,150,9)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="1125" width="0.2752%" height="15" fill="rgb(230,162,45)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1135.50"></text></g><g><title>sqlx_core::pool::executor::&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::{{closure}}::{{closure}} (3 samples, 0.28%)</title><rect x="30.6422%" y="1109" width="0.2752%" height="15" fill="rgb(222,14,52)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1119.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="1093" width="0.2752%" height="15" fill="rgb(254,198,14)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1103.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (3 samples, 0.28%)</title><rect x="30.6422%" y="1077" width="0.2752%" height="15" fill="rgb(220,217,30)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1087.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (3 samples, 0.28%)</title><rect x="30.6422%" y="1061" width="0.2752%" height="15" fill="rgb(215,146,41)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1071.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.28%)</title><rect x="30.6422%" y="1045" width="0.2752%" height="15" fill="rgb(217,27,36)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1055.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.28%)</title><rect x="30.6422%" y="1029" width="0.2752%" height="15" fill="rgb(219,218,39)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1039.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="1013" width="0.2752%" height="15" fill="rgb(219,4,42)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1023.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="997" width="0.2752%" height="15" fill="rgb(249,119,36)" fg:x="334" fg:w="3"/><text x="30.8922%" y="1007.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="981" width="0.2752%" height="15" fill="rgb(209,23,33)" fg:x="334" fg:w="3"/><text x="30.8922%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="965" width="0.2752%" height="15" fill="rgb(211,10,0)" fg:x="334" fg:w="3"/><text x="30.8922%" y="975.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (3 samples, 0.28%)</title><rect x="30.6422%" y="949" width="0.2752%" height="15" fill="rgb(208,99,37)" fg:x="334" fg:w="3"/><text x="30.8922%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="933" width="0.2752%" height="15" fill="rgb(213,132,31)" fg:x="334" fg:w="3"/><text x="30.8922%" y="943.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_core::postgres::connection::PgConnection&gt;::fetch_many::{{closure}}::{{closure}} (3 samples, 0.28%)</title><rect x="30.6422%" y="917" width="0.2752%" height="15" fill="rgb(243,129,40)" fg:x="334" fg:w="3"/><text x="30.8922%" y="927.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="901" width="0.2752%" height="15" fill="rgb(210,66,33)" fg:x="334" fg:w="3"/><text x="30.8922%" y="911.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (3 samples, 0.28%)</title><rect x="30.6422%" y="885" width="0.2752%" height="15" fill="rgb(209,189,4)" fg:x="334" fg:w="3"/><text x="30.8922%" y="895.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (3 samples, 0.28%)</title><rect x="30.6422%" y="869" width="0.2752%" height="15" fill="rgb(214,107,37)" fg:x="334" fg:w="3"/><text x="30.8922%" y="879.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.28%)</title><rect x="30.6422%" y="853" width="0.2752%" height="15" fill="rgb(245,88,54)" fg:x="334" fg:w="3"/><text x="30.8922%" y="863.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.28%)</title><rect x="30.6422%" y="837" width="0.2752%" height="15" fill="rgb(205,146,20)" fg:x="334" fg:w="3"/><text x="30.8922%" y="847.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="821" width="0.2752%" height="15" fill="rgb(220,161,25)" fg:x="334" fg:w="3"/><text x="30.8922%" y="831.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="805" width="0.2752%" height="15" fill="rgb(215,152,15)" fg:x="334" fg:w="3"/><text x="30.8922%" y="815.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="789" width="0.2752%" height="15" fill="rgb(233,192,44)" fg:x="334" fg:w="3"/><text x="30.8922%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="773" width="0.2752%" height="15" fill="rgb(240,170,46)" fg:x="334" fg:w="3"/><text x="30.8922%" y="783.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (3 samples, 0.28%)</title><rect x="30.6422%" y="757" width="0.2752%" height="15" fill="rgb(207,104,33)" fg:x="334" fg:w="3"/><text x="30.8922%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="741" width="0.2752%" height="15" fill="rgb(219,21,39)" fg:x="334" fg:w="3"/><text x="30.8922%" y="751.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.28%)</title><rect x="30.6422%" y="725" width="0.2752%" height="15" fill="rgb(214,133,29)" fg:x="334" fg:w="3"/><text x="30.8922%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="709" width="0.2752%" height="15" fill="rgb(226,93,6)" fg:x="334" fg:w="3"/><text x="30.8922%" y="719.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv::{{closure}} (3 samples, 0.28%)</title><rect x="30.6422%" y="693" width="0.2752%" height="15" fill="rgb(252,222,34)" fg:x="334" fg:w="3"/><text x="30.8922%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="677" width="0.2752%" height="15" fill="rgb(252,92,48)" fg:x="334" fg:w="3"/><text x="30.8922%" y="687.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv_unchecked::{{closure}} (3 samples, 0.28%)</title><rect x="30.6422%" y="661" width="0.2752%" height="15" fill="rgb(245,223,24)" fg:x="334" fg:w="3"/><text x="30.8922%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="645" width="0.2752%" height="15" fill="rgb(205,176,3)" fg:x="334" fg:w="3"/><text x="30.8922%" y="655.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read::{{closure}} (3 samples, 0.28%)</title><rect x="30.6422%" y="629" width="0.2752%" height="15" fill="rgb(235,151,15)" fg:x="334" fg:w="3"/><text x="30.8922%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="613" width="0.2752%" height="15" fill="rgb(237,209,11)" fg:x="334" fg:w="3"/><text x="30.8922%" y="623.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_with::{{closure}} (3 samples, 0.28%)</title><rect x="30.6422%" y="597" width="0.2752%" height="15" fill="rgb(243,227,24)" fg:x="334" fg:w="3"/><text x="30.8922%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="581" width="0.2752%" height="15" fill="rgb(239,193,16)" fg:x="334" fg:w="3"/><text x="30.8922%" y="591.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_raw::{{closure}} (3 samples, 0.28%)</title><rect x="30.6422%" y="565" width="0.2752%" height="15" fill="rgb(231,27,9)" fg:x="334" fg:w="3"/><text x="30.8922%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="549" width="0.2752%" height="15" fill="rgb(219,169,10)" fg:x="334" fg:w="3"/><text x="30.8922%" y="559.50"></text></g><g><title>sqlx_core::io::buf_stream::read_raw_into::{{closure}} (3 samples, 0.28%)</title><rect x="30.6422%" y="533" width="0.2752%" height="15" fill="rgb(244,229,43)" fg:x="334" fg:w="3"/><text x="30.8922%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="517" width="0.2752%" height="15" fill="rgb(254,38,20)" fg:x="334" fg:w="3"/><text x="30.8922%" y="527.50"></text></g><g><title>sqlx_core::io::buf_stream::BufTruncator::read::{{closure}} (3 samples, 0.28%)</title><rect x="30.6422%" y="501" width="0.2752%" height="15" fill="rgb(250,47,30)" fg:x="334" fg:w="3"/><text x="30.8922%" y="511.50"></text></g><g><title>&lt;tokio::io::util::read::Read&lt;R&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.6422%" y="485" width="0.2752%" height="15" fill="rgb(224,124,36)" fg:x="334" fg:w="3"/><text x="30.8922%" y="495.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.28%)</title><rect x="30.6422%" y="469" width="0.2752%" height="15" fill="rgb(246,68,51)" fg:x="334" fg:w="3"/><text x="30.8922%" y="479.50"></text></g><g><title>&lt;sqlx_core::net::tls::MaybeTlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.28%)</title><rect x="30.6422%" y="453" width="0.2752%" height="15" fill="rgb(253,43,49)" fg:x="334" fg:w="3"/><text x="30.8922%" y="463.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.28%)</title><rect x="30.6422%" y="437" width="0.2752%" height="15" fill="rgb(219,54,36)" fg:x="334" fg:w="3"/><text x="30.8922%" y="447.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (3 samples, 0.28%)</title><rect x="30.6422%" y="421" width="0.2752%" height="15" fill="rgb(227,133,34)" fg:x="334" fg:w="3"/><text x="30.8922%" y="431.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (3 samples, 0.28%)</title><rect x="30.6422%" y="405" width="0.2752%" height="15" fill="rgb(247,227,15)" fg:x="334" fg:w="3"/><text x="30.8922%" y="415.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_read_io (3 samples, 0.28%)</title><rect x="30.6422%" y="389" width="0.2752%" height="15" fill="rgb(229,96,14)" fg:x="334" fg:w="3"/><text x="30.8922%" y="399.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (3 samples, 0.28%)</title><rect x="30.6422%" y="373" width="0.2752%" height="15" fill="rgb(220,79,17)" fg:x="334" fg:w="3"/><text x="30.8922%" y="383.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read::{{closure}} (2 samples, 0.18%)</title><rect x="30.7339%" y="357" width="0.1835%" height="15" fill="rgb(205,131,53)" fg:x="335" fg:w="2"/><text x="30.9839%" y="367.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2 samples, 0.18%)</title><rect x="30.7339%" y="341" width="0.1835%" height="15" fill="rgb(209,50,29)" fg:x="335" fg:w="2"/><text x="30.9839%" y="351.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2 samples, 0.18%)</title><rect x="30.7339%" y="325" width="0.1835%" height="15" fill="rgb(245,86,46)" fg:x="335" fg:w="2"/><text x="30.9839%" y="335.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (2 samples, 0.18%)</title><rect x="30.7339%" y="309" width="0.1835%" height="15" fill="rgb(235,66,46)" fg:x="335" fg:w="2"/><text x="30.9839%" y="319.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (2 samples, 0.18%)</title><rect x="30.7339%" y="293" width="0.1835%" height="15" fill="rgb(232,148,31)" fg:x="335" fg:w="2"/><text x="30.9839%" y="303.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.18%)</title><rect x="30.7339%" y="277" width="0.1835%" height="15" fill="rgb(217,149,8)" fg:x="335" fg:w="2"/><text x="30.9839%" y="287.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2 samples, 0.18%)</title><rect x="30.7339%" y="261" width="0.1835%" height="15" fill="rgb(209,183,11)" fg:x="335" fg:w="2"/><text x="30.9839%" y="271.50"></text></g><g><title>std::sys::unix::net::Socket::read (2 samples, 0.18%)</title><rect x="30.7339%" y="245" width="0.1835%" height="15" fill="rgb(208,55,20)" fg:x="335" fg:w="2"/><text x="30.9839%" y="255.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (2 samples, 0.18%)</title><rect x="30.7339%" y="229" width="0.1835%" height="15" fill="rgb(218,39,14)" fg:x="335" fg:w="2"/><text x="30.9839%" y="239.50"></text></g><g><title>__libc_recv (2 samples, 0.18%)</title><rect x="30.7339%" y="213" width="0.1835%" height="15" fill="rgb(216,169,33)" fg:x="335" fg:w="2"/><text x="30.9839%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="30.7339%" y="197" width="0.1835%" height="15" fill="rgb(233,80,24)" fg:x="335" fg:w="2"/><text x="30.9839%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="30.7339%" y="181" width="0.1835%" height="15" fill="rgb(213,179,31)" fg:x="335" fg:w="2"/><text x="30.9839%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="30.7339%" y="165" width="0.1835%" height="15" fill="rgb(209,19,5)" fg:x="335" fg:w="2"/><text x="30.9839%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="30.7339%" y="149" width="0.1835%" height="15" fill="rgb(219,18,35)" fg:x="335" fg:w="2"/><text x="30.9839%" y="159.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="30.7339%" y="133" width="0.1835%" height="15" fill="rgb(209,169,16)" fg:x="335" fg:w="2"/><text x="30.9839%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="30.7339%" y="117" width="0.1835%" height="15" fill="rgb(245,90,51)" fg:x="335" fg:w="2"/><text x="30.9839%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="30.8257%" y="101" width="0.0917%" height="15" fill="rgb(220,99,45)" fg:x="336" fg:w="1"/><text x="31.0757%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="30.8257%" y="85" width="0.0917%" height="15" fill="rgb(249,89,25)" fg:x="336" fg:w="1"/><text x="31.0757%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="30.8257%" y="69" width="0.0917%" height="15" fill="rgb(239,193,0)" fg:x="336" fg:w="1"/><text x="31.0757%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="30.8257%" y="53" width="0.0917%" height="15" fill="rgb(231,126,1)" fg:x="336" fg:w="1"/><text x="31.0757%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="30.8257%" y="37" width="0.0917%" height="15" fill="rgb(243,166,3)" fg:x="336" fg:w="1"/><text x="31.0757%" y="47.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="30.9174%" y="1285" width="0.0917%" height="15" fill="rgb(223,22,34)" fg:x="337" fg:w="1"/><text x="31.1674%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::common::lazy::Lazy&lt;hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;::connect_to::{{closure}},futures_util::future::either::Either&lt;futures_util::future::try_future::AndThen&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error::new_connect&lt;alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;&gt;,futures_util::future::either::Either&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;::connect_to::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;,futures_util::future::ready::Ready&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;,hyper::error::Error&gt;&gt;&gt;,hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;::connect_to::{{closure}}::{{closure}}&gt;,futures_util::future::ready::Ready&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;,hyper::error::Error&gt;&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="31.0092%" y="1237" width="0.0917%" height="15" fill="rgb(251,52,51)" fg:x="338" fg:w="1"/><text x="31.2592%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::common::lazy::Inner&lt;hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;::connect_to::{{closure}},futures_util::future::either::Either&lt;futures_util::future::try_future::AndThen&lt;futures_util::future::try_future::MapErr&lt;hyper::service::oneshot::Oneshot&lt;reqwest::connect::Connector,http::uri::Uri&gt;,hyper::error::Error::new_connect&lt;alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;&gt;,futures_util::future::either::Either&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;::connect_to::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;,futures_util::future::ready::Ready&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;,hyper::error::Error&gt;&gt;&gt;,hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;::connect_to::{{closure}}::{{closure}}&gt;,futures_util::future::ready::Ready&lt;core::result::Result&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;,hyper::error::Error&gt;&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="31.0092%" y="1221" width="0.0917%" height="15" fill="rgb(221,165,28)" fg:x="338" fg:w="1"/><text x="31.2592%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;::connect_to::{{closure}}&gt; (1 samples, 0.09%)</title><rect x="31.0092%" y="1205" width="0.0917%" height="15" fill="rgb(218,121,47)" fg:x="338" fg:w="1"/><text x="31.2592%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (1 samples, 0.09%)</title><rect x="31.0092%" y="1189" width="0.0917%" height="15" fill="rgb(209,120,9)" fg:x="338" fg:w="1"/><text x="31.2592%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.9174%" y="1413" width="0.2752%" height="15" fill="rgb(236,68,12)" fg:x="337" fg:w="3"/><text x="31.1674%" y="1423.50"></text></g><g><title>backend::get_stops::{{closure}} (3 samples, 0.28%)</title><rect x="30.9174%" y="1397" width="0.2752%" height="15" fill="rgb(225,194,26)" fg:x="337" fg:w="3"/><text x="31.1674%" y="1407.50"></text></g><g><title>&lt;reqwest::async_impl::client::Pending as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.9174%" y="1381" width="0.2752%" height="15" fill="rgb(231,84,39)" fg:x="337" fg:w="3"/><text x="31.1674%" y="1391.50"></text></g><g><title>&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.9174%" y="1365" width="0.2752%" height="15" fill="rgb(210,11,45)" fg:x="337" fg:w="3"/><text x="31.1674%" y="1375.50"></text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.9174%" y="1349" width="0.2752%" height="15" fill="rgb(224,54,52)" fg:x="337" fg:w="3"/><text x="31.1674%" y="1359.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.9174%" y="1333" width="0.2752%" height="15" fill="rgb(238,102,14)" fg:x="337" fg:w="3"/><text x="31.1674%" y="1343.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::{{closure}} (3 samples, 0.28%)</title><rect x="30.9174%" y="1317" width="0.2752%" height="15" fill="rgb(243,160,52)" fg:x="337" fg:w="3"/><text x="31.1674%" y="1327.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="30.9174%" y="1301" width="0.2752%" height="15" fill="rgb(216,114,19)" fg:x="337" fg:w="3"/><text x="31.1674%" y="1311.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::send_request::{{closure}} (2 samples, 0.18%)</title><rect x="31.0092%" y="1285" width="0.1835%" height="15" fill="rgb(244,166,37)" fg:x="338" fg:w="2"/><text x="31.2592%" y="1295.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="31.0092%" y="1269" width="0.1835%" height="15" fill="rgb(246,29,44)" fg:x="338" fg:w="2"/><text x="31.2592%" y="1279.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::connection_for::{{closure}} (2 samples, 0.18%)</title><rect x="31.0092%" y="1253" width="0.1835%" height="15" fill="rgb(215,56,53)" fg:x="338" fg:w="2"/><text x="31.2592%" y="1263.50"></text></g><g><title>futures_util::future::select::select (1 samples, 0.09%)</title><rect x="31.1009%" y="1237" width="0.0917%" height="15" fill="rgb(217,60,2)" fg:x="339" fg:w="1"/><text x="31.3509%" y="1247.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="31.1009%" y="1221" width="0.0917%" height="15" fill="rgb(207,26,24)" fg:x="339" fg:w="1"/><text x="31.3509%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="31.1927%" y="1093" width="0.0917%" height="15" fill="rgb(252,210,15)" fg:x="340" fg:w="1"/><text x="31.4427%" y="1103.50"></text></g><g><title>__rust_probestack (1 samples, 0.09%)</title><rect x="31.1927%" y="1077" width="0.0917%" height="15" fill="rgb(253,209,26)" fg:x="340" fg:w="1"/><text x="31.4427%" y="1087.50"></text></g><g><title>futures_channel::mpsc::channel (1 samples, 0.09%)</title><rect x="31.2844%" y="997" width="0.0917%" height="15" fill="rgb(238,170,14)" fg:x="341" fg:w="1"/><text x="31.5344%" y="1007.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="31.2844%" y="981" width="0.0917%" height="15" fill="rgb(216,178,15)" fg:x="341" fg:w="1"/><text x="31.5344%" y="991.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.09%)</title><rect x="31.2844%" y="965" width="0.0917%" height="15" fill="rgb(250,197,2)" fg:x="341" fg:w="1"/><text x="31.5344%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="31.2844%" y="949" width="0.0917%" height="15" fill="rgb(212,70,42)" fg:x="341" fg:w="1"/><text x="31.5344%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="31.2844%" y="933" width="0.0917%" height="15" fill="rgb(227,213,9)" fg:x="341" fg:w="1"/><text x="31.5344%" y="943.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="31.2844%" y="917" width="0.0917%" height="15" fill="rgb(245,99,25)" fg:x="341" fg:w="1"/><text x="31.5344%" y="927.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="31.2844%" y="901" width="0.0917%" height="15" fill="rgb(250,82,29)" fg:x="341" fg:w="1"/><text x="31.5344%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="31.2844%" y="1045" width="0.2752%" height="15" fill="rgb(241,226,54)" fg:x="341" fg:w="3"/><text x="31.5344%" y="1055.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}} (3 samples, 0.28%)</title><rect x="31.2844%" y="1029" width="0.2752%" height="15" fill="rgb(221,99,41)" fg:x="341" fg:w="3"/><text x="31.5344%" y="1039.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new (3 samples, 0.28%)</title><rect x="31.2844%" y="1013" width="0.2752%" height="15" fill="rgb(213,90,21)" fg:x="341" fg:w="3"/><text x="31.5344%" y="1023.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (2 samples, 0.18%)</title><rect x="31.3761%" y="997" width="0.1835%" height="15" fill="rgb(205,208,24)" fg:x="342" fg:w="2"/><text x="31.6261%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (2 samples, 0.18%)</title><rect x="31.3761%" y="981" width="0.1835%" height="15" fill="rgb(246,31,12)" fg:x="342" fg:w="2"/><text x="31.6261%" y="991.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.18%)</title><rect x="31.3761%" y="965" width="0.1835%" height="15" fill="rgb(213,154,6)" fg:x="342" fg:w="2"/><text x="31.6261%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.18%)</title><rect x="31.3761%" y="949" width="0.1835%" height="15" fill="rgb(222,163,29)" fg:x="342" fg:w="2"/><text x="31.6261%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.18%)</title><rect x="31.3761%" y="933" width="0.1835%" height="15" fill="rgb(227,201,8)" fg:x="342" fg:w="2"/><text x="31.6261%" y="943.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.18%)</title><rect x="31.3761%" y="917" width="0.1835%" height="15" fill="rgb(233,9,32)" fg:x="342" fg:w="2"/><text x="31.6261%" y="927.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.18%)</title><rect x="31.3761%" y="901" width="0.1835%" height="15" fill="rgb(217,54,24)" fg:x="342" fg:w="2"/><text x="31.6261%" y="911.50"></text></g><g><title>_int_malloc (2 samples, 0.18%)</title><rect x="31.3761%" y="885" width="0.1835%" height="15" fill="rgb(235,192,0)" fg:x="342" fg:w="2"/><text x="31.6261%" y="895.50"></text></g><g><title>alloc_perturb (1 samples, 0.09%)</title><rect x="31.4679%" y="869" width="0.0917%" height="15" fill="rgb(235,45,9)" fg:x="343" fg:w="1"/><text x="31.7179%" y="879.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (2 samples, 0.18%)</title><rect x="31.5596%" y="501" width="0.1835%" height="15" fill="rgb(246,42,40)" fg:x="344" fg:w="2"/><text x="31.8096%" y="511.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (12 samples, 1.10%)</title><rect x="30.9174%" y="1493" width="1.1009%" height="15" fill="rgb(248,111,24)" fg:x="337" fg:w="12"/><text x="31.1674%" y="1503.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 1.10%)</title><rect x="30.9174%" y="1477" width="1.1009%" height="15" fill="rgb(249,65,22)" fg:x="337" fg:w="12"/><text x="31.1674%" y="1487.50"></text></g><g><title>backend::fill_occupancy::{{closure}}::{{closure}}::{{closure}} (12 samples, 1.10%)</title><rect x="30.9174%" y="1461" width="1.1009%" height="15" fill="rgb(238,111,51)" fg:x="337" fg:w="12"/><text x="31.1674%" y="1471.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 1.10%)</title><rect x="30.9174%" y="1445" width="1.1009%" height="15" fill="rgb(250,118,22)" fg:x="337" fg:w="12"/><text x="31.1674%" y="1455.50"></text></g><g><title>backend::occupancy::{{closure}} (12 samples, 1.10%)</title><rect x="30.9174%" y="1429" width="1.1009%" height="15" fill="rgb(234,84,26)" fg:x="337" fg:w="12"/><text x="31.1674%" y="1439.50"></text></g><g><title>&lt;futures_util::future::join_all::JoinAll&lt;F&gt; as core::future::future::Future&gt;::poll (9 samples, 0.83%)</title><rect x="31.1927%" y="1413" width="0.8257%" height="15" fill="rgb(243,172,12)" fg:x="340" fg:w="9"/><text x="31.4427%" y="1423.50"></text></g><g><title>&lt;futures_util::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (9 samples, 0.83%)</title><rect x="31.1927%" y="1397" width="0.8257%" height="15" fill="rgb(236,150,49)" fg:x="340" fg:w="9"/><text x="31.4427%" y="1407.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.83%)</title><rect x="31.1927%" y="1381" width="0.8257%" height="15" fill="rgb(225,197,26)" fg:x="340" fg:w="9"/><text x="31.4427%" y="1391.50"></text></g><g><title>backend::get_abbrev::{{closure}} (9 samples, 0.83%)</title><rect x="31.1927%" y="1365" width="0.8257%" height="15" fill="rgb(214,17,42)" fg:x="340" fg:w="9"/><text x="31.4427%" y="1375.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.83%)</title><rect x="31.1927%" y="1349" width="0.8257%" height="15" fill="rgb(224,165,40)" fg:x="340" fg:w="9"/><text x="31.4427%" y="1359.50"></text></g><g><title>sqlx_core::query::Map&lt;DB,F,A&gt;::fetch_one::{{closure}} (9 samples, 0.83%)</title><rect x="31.1927%" y="1333" width="0.8257%" height="15" fill="rgb(246,100,4)" fg:x="340" fg:w="9"/><text x="31.4427%" y="1343.50"></text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (9 samples, 0.83%)</title><rect x="31.1927%" y="1317" width="0.8257%" height="15" fill="rgb(222,103,0)" fg:x="340" fg:w="9"/><text x="31.4427%" y="1327.50"></text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (9 samples, 0.83%)</title><rect x="31.1927%" y="1301" width="0.8257%" height="15" fill="rgb(227,189,26)" fg:x="340" fg:w="9"/><text x="31.4427%" y="1311.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (9 samples, 0.83%)</title><rect x="31.1927%" y="1285" width="0.8257%" height="15" fill="rgb(214,202,17)" fg:x="340" fg:w="9"/><text x="31.4427%" y="1295.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (9 samples, 0.83%)</title><rect x="31.1927%" y="1269" width="0.8257%" height="15" fill="rgb(229,111,3)" fg:x="340" fg:w="9"/><text x="31.4427%" y="1279.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (9 samples, 0.83%)</title><rect x="31.1927%" y="1253" width="0.8257%" height="15" fill="rgb(229,172,15)" fg:x="340" fg:w="9"/><text x="31.4427%" y="1263.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (9 samples, 0.83%)</title><rect x="31.1927%" y="1237" width="0.8257%" height="15" fill="rgb(230,224,35)" fg:x="340" fg:w="9"/><text x="31.4427%" y="1247.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (9 samples, 0.83%)</title><rect x="31.1927%" y="1221" width="0.8257%" height="15" fill="rgb(251,141,6)" fg:x="340" fg:w="9"/><text x="31.4427%" y="1231.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (9 samples, 0.83%)</title><rect x="31.1927%" y="1205" width="0.8257%" height="15" fill="rgb(225,208,6)" fg:x="340" fg:w="9"/><text x="31.4427%" y="1215.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (9 samples, 0.83%)</title><rect x="31.1927%" y="1189" width="0.8257%" height="15" fill="rgb(246,181,16)" fg:x="340" fg:w="9"/><text x="31.4427%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.83%)</title><rect x="31.1927%" y="1173" width="0.8257%" height="15" fill="rgb(227,129,36)" fg:x="340" fg:w="9"/><text x="31.4427%" y="1183.50"></text></g><g><title>sqlx_core::query::Map&lt;DB,F,A&gt;::fetch_optional::{{closure}} (9 samples, 0.83%)</title><rect x="31.1927%" y="1157" width="0.8257%" height="15" fill="rgb(248,117,24)" fg:x="340" fg:w="9"/><text x="31.4427%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (9 samples, 0.83%)</title><rect x="31.1927%" y="1141" width="0.8257%" height="15" fill="rgb(214,185,35)" fg:x="340" fg:w="9"/><text x="31.4427%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.83%)</title><rect x="31.1927%" y="1125" width="0.8257%" height="15" fill="rgb(236,150,34)" fg:x="340" fg:w="9"/><text x="31.4427%" y="1135.50"></text></g><g><title>sqlx_core::pool::executor::&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_optional::{{closure}} (9 samples, 0.83%)</title><rect x="31.1927%" y="1109" width="0.8257%" height="15" fill="rgb(243,228,27)" fg:x="340" fg:w="9"/><text x="31.4427%" y="1119.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8 samples, 0.73%)</title><rect x="31.2844%" y="1093" width="0.7339%" height="15" fill="rgb(245,77,44)" fg:x="341" fg:w="8"/><text x="31.5344%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.73%)</title><rect x="31.2844%" y="1077" width="0.7339%" height="15" fill="rgb(235,214,42)" fg:x="341" fg:w="8"/><text x="31.5344%" y="1087.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_core::postgres::connection::PgConnection&gt;::fetch_optional::{{closure}} (8 samples, 0.73%)</title><rect x="31.2844%" y="1061" width="0.7339%" height="15" fill="rgb(221,74,3)" fg:x="341" fg:w="8"/><text x="31.5344%" y="1071.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="31.5596%" y="1045" width="0.4587%" height="15" fill="rgb(206,121,29)" fg:x="344" fg:w="5"/><text x="31.8096%" y="1055.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (5 samples, 0.46%)</title><rect x="31.5596%" y="1029" width="0.4587%" height="15" fill="rgb(249,131,53)" fg:x="344" fg:w="5"/><text x="31.8096%" y="1039.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (5 samples, 0.46%)</title><rect x="31.5596%" y="1013" width="0.4587%" height="15" fill="rgb(236,170,29)" fg:x="344" fg:w="5"/><text x="31.8096%" y="1023.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.46%)</title><rect x="31.5596%" y="997" width="0.4587%" height="15" fill="rgb(247,96,15)" fg:x="344" fg:w="5"/><text x="31.8096%" y="1007.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.46%)</title><rect x="31.5596%" y="981" width="0.4587%" height="15" fill="rgb(211,210,7)" fg:x="344" fg:w="5"/><text x="31.8096%" y="991.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="31.5596%" y="965" width="0.4587%" height="15" fill="rgb(240,88,50)" fg:x="344" fg:w="5"/><text x="31.8096%" y="975.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="31.5596%" y="949" width="0.4587%" height="15" fill="rgb(209,229,26)" fg:x="344" fg:w="5"/><text x="31.8096%" y="959.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="31.5596%" y="933" width="0.4587%" height="15" fill="rgb(210,68,23)" fg:x="344" fg:w="5"/><text x="31.8096%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="31.5596%" y="917" width="0.4587%" height="15" fill="rgb(229,180,13)" fg:x="344" fg:w="5"/><text x="31.8096%" y="927.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (5 samples, 0.46%)</title><rect x="31.5596%" y="901" width="0.4587%" height="15" fill="rgb(236,53,44)" fg:x="344" fg:w="5"/><text x="31.8096%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="31.5596%" y="885" width="0.4587%" height="15" fill="rgb(244,214,29)" fg:x="344" fg:w="5"/><text x="31.8096%" y="895.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}}::{{closure}} (5 samples, 0.46%)</title><rect x="31.5596%" y="869" width="0.4587%" height="15" fill="rgb(220,75,29)" fg:x="344" fg:w="5"/><text x="31.8096%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="31.5596%" y="853" width="0.4587%" height="15" fill="rgb(214,183,37)" fg:x="344" fg:w="5"/><text x="31.8096%" y="863.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv::{{closure}} (5 samples, 0.46%)</title><rect x="31.5596%" y="837" width="0.4587%" height="15" fill="rgb(239,117,29)" fg:x="344" fg:w="5"/><text x="31.8096%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="31.5596%" y="821" width="0.4587%" height="15" fill="rgb(237,171,35)" fg:x="344" fg:w="5"/><text x="31.8096%" y="831.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv_unchecked::{{closure}} (5 samples, 0.46%)</title><rect x="31.5596%" y="805" width="0.4587%" height="15" fill="rgb(229,178,53)" fg:x="344" fg:w="5"/><text x="31.8096%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="31.5596%" y="789" width="0.4587%" height="15" fill="rgb(210,102,19)" fg:x="344" fg:w="5"/><text x="31.8096%" y="799.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read::{{closure}} (5 samples, 0.46%)</title><rect x="31.5596%" y="773" width="0.4587%" height="15" fill="rgb(235,127,22)" fg:x="344" fg:w="5"/><text x="31.8096%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="31.5596%" y="757" width="0.4587%" height="15" fill="rgb(244,31,31)" fg:x="344" fg:w="5"/><text x="31.8096%" y="767.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_with::{{closure}} (5 samples, 0.46%)</title><rect x="31.5596%" y="741" width="0.4587%" height="15" fill="rgb(231,43,21)" fg:x="344" fg:w="5"/><text x="31.8096%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="31.5596%" y="725" width="0.4587%" height="15" fill="rgb(217,131,35)" fg:x="344" fg:w="5"/><text x="31.8096%" y="735.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_raw::{{closure}} (5 samples, 0.46%)</title><rect x="31.5596%" y="709" width="0.4587%" height="15" fill="rgb(221,149,4)" fg:x="344" fg:w="5"/><text x="31.8096%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="31.5596%" y="693" width="0.4587%" height="15" fill="rgb(232,170,28)" fg:x="344" fg:w="5"/><text x="31.8096%" y="703.50"></text></g><g><title>sqlx_core::io::buf_stream::read_raw_into::{{closure}} (5 samples, 0.46%)</title><rect x="31.5596%" y="677" width="0.4587%" height="15" fill="rgb(238,56,10)" fg:x="344" fg:w="5"/><text x="31.8096%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="31.5596%" y="661" width="0.4587%" height="15" fill="rgb(235,196,14)" fg:x="344" fg:w="5"/><text x="31.8096%" y="671.50"></text></g><g><title>sqlx_core::io::buf_stream::BufTruncator::read::{{closure}} (5 samples, 0.46%)</title><rect x="31.5596%" y="645" width="0.4587%" height="15" fill="rgb(216,45,48)" fg:x="344" fg:w="5"/><text x="31.8096%" y="655.50"></text></g><g><title>&lt;tokio::io::util::read::Read&lt;R&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="31.5596%" y="629" width="0.4587%" height="15" fill="rgb(238,213,17)" fg:x="344" fg:w="5"/><text x="31.8096%" y="639.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (5 samples, 0.46%)</title><rect x="31.5596%" y="613" width="0.4587%" height="15" fill="rgb(212,13,2)" fg:x="344" fg:w="5"/><text x="31.8096%" y="623.50"></text></g><g><title>&lt;sqlx_core::net::tls::MaybeTlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (5 samples, 0.46%)</title><rect x="31.5596%" y="597" width="0.4587%" height="15" fill="rgb(240,114,20)" fg:x="344" fg:w="5"/><text x="31.8096%" y="607.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (5 samples, 0.46%)</title><rect x="31.5596%" y="581" width="0.4587%" height="15" fill="rgb(228,41,40)" fg:x="344" fg:w="5"/><text x="31.8096%" y="591.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (5 samples, 0.46%)</title><rect x="31.5596%" y="565" width="0.4587%" height="15" fill="rgb(244,132,35)" fg:x="344" fg:w="5"/><text x="31.8096%" y="575.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (5 samples, 0.46%)</title><rect x="31.5596%" y="549" width="0.4587%" height="15" fill="rgb(253,189,4)" fg:x="344" fg:w="5"/><text x="31.8096%" y="559.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_read_io (5 samples, 0.46%)</title><rect x="31.5596%" y="533" width="0.4587%" height="15" fill="rgb(224,37,19)" fg:x="344" fg:w="5"/><text x="31.8096%" y="543.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (5 samples, 0.46%)</title><rect x="31.5596%" y="517" width="0.4587%" height="15" fill="rgb(235,223,18)" fg:x="344" fg:w="5"/><text x="31.8096%" y="527.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read::{{closure}} (3 samples, 0.28%)</title><rect x="31.7431%" y="501" width="0.2752%" height="15" fill="rgb(235,163,25)" fg:x="346" fg:w="3"/><text x="31.9931%" y="511.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (3 samples, 0.28%)</title><rect x="31.7431%" y="485" width="0.2752%" height="15" fill="rgb(217,145,28)" fg:x="346" fg:w="3"/><text x="31.9931%" y="495.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (3 samples, 0.28%)</title><rect x="31.7431%" y="469" width="0.2752%" height="15" fill="rgb(223,223,32)" fg:x="346" fg:w="3"/><text x="31.9931%" y="479.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (3 samples, 0.28%)</title><rect x="31.7431%" y="453" width="0.2752%" height="15" fill="rgb(227,189,39)" fg:x="346" fg:w="3"/><text x="31.9931%" y="463.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (3 samples, 0.28%)</title><rect x="31.7431%" y="437" width="0.2752%" height="15" fill="rgb(248,10,22)" fg:x="346" fg:w="3"/><text x="31.9931%" y="447.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (3 samples, 0.28%)</title><rect x="31.7431%" y="421" width="0.2752%" height="15" fill="rgb(248,46,39)" fg:x="346" fg:w="3"/><text x="31.9931%" y="431.50"></text></g><g><title>std::sys_common::net::TcpStream::read (3 samples, 0.28%)</title><rect x="31.7431%" y="405" width="0.2752%" height="15" fill="rgb(248,113,48)" fg:x="346" fg:w="3"/><text x="31.9931%" y="415.50"></text></g><g><title>std::sys::unix::net::Socket::read (3 samples, 0.28%)</title><rect x="31.7431%" y="389" width="0.2752%" height="15" fill="rgb(245,16,25)" fg:x="346" fg:w="3"/><text x="31.9931%" y="399.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (3 samples, 0.28%)</title><rect x="31.7431%" y="373" width="0.2752%" height="15" fill="rgb(249,152,16)" fg:x="346" fg:w="3"/><text x="31.9931%" y="383.50"></text></g><g><title>__libc_recv (3 samples, 0.28%)</title><rect x="31.7431%" y="357" width="0.2752%" height="15" fill="rgb(250,16,1)" fg:x="346" fg:w="3"/><text x="31.9931%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="31.8349%" y="341" width="0.1835%" height="15" fill="rgb(249,138,3)" fg:x="347" fg:w="2"/><text x="32.0849%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="31.8349%" y="325" width="0.1835%" height="15" fill="rgb(227,71,41)" fg:x="347" fg:w="2"/><text x="32.0849%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="31.8349%" y="309" width="0.1835%" height="15" fill="rgb(209,184,23)" fg:x="347" fg:w="2"/><text x="32.0849%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="31.8349%" y="293" width="0.1835%" height="15" fill="rgb(223,215,31)" fg:x="347" fg:w="2"/><text x="32.0849%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="31.8349%" y="277" width="0.1835%" height="15" fill="rgb(210,146,28)" fg:x="347" fg:w="2"/><text x="32.0849%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="31.8349%" y="261" width="0.1835%" height="15" fill="rgb(209,183,41)" fg:x="347" fg:w="2"/><text x="32.0849%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="31.8349%" y="245" width="0.1835%" height="15" fill="rgb(209,224,45)" fg:x="347" fg:w="2"/><text x="32.0849%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="31.9266%" y="229" width="0.0917%" height="15" fill="rgb(224,209,51)" fg:x="348" fg:w="1"/><text x="32.1766%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="31.9266%" y="213" width="0.0917%" height="15" fill="rgb(223,17,39)" fg:x="348" fg:w="1"/><text x="32.1766%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="31.9266%" y="197" width="0.0917%" height="15" fill="rgb(234,204,37)" fg:x="348" fg:w="1"/><text x="32.1766%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="31.9266%" y="181" width="0.0917%" height="15" fill="rgb(236,120,5)" fg:x="348" fg:w="1"/><text x="32.1766%" y="191.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_for_each::TryForEach&lt;St,Fut,F&gt; as core::future::future::Future&gt;::poll (13 samples, 1.19%)</title><rect x="30.9174%" y="1509" width="1.1927%" height="15" fill="rgb(248,97,27)" fg:x="337" fg:w="13"/><text x="31.1674%" y="1519.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (1 samples, 0.09%)</title><rect x="32.0183%" y="1493" width="0.0917%" height="15" fill="rgb(240,66,17)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1503.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="32.0183%" y="1477" width="0.0917%" height="15" fill="rgb(210,79,3)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1487.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="32.0183%" y="1461" width="0.0917%" height="15" fill="rgb(214,176,27)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1471.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="32.0183%" y="1445" width="0.0917%" height="15" fill="rgb(235,185,3)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1455.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="1429" width="0.0917%" height="15" fill="rgb(227,24,12)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1439.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="1413" width="0.0917%" height="15" fill="rgb(252,169,48)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1423.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="1397" width="0.0917%" height="15" fill="rgb(212,65,1)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1407.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="1381" width="0.0917%" height="15" fill="rgb(242,39,24)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1391.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (1 samples, 0.09%)</title><rect x="32.0183%" y="1365" width="0.0917%" height="15" fill="rgb(249,32,23)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1375.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="1349" width="0.0917%" height="15" fill="rgb(251,195,23)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1359.50"></text></g><g><title>sqlx_core::query::Map&lt;DB,F,A&gt;::fetch_many::{{closure}}::{{closure}} (1 samples, 0.09%)</title><rect x="32.0183%" y="1333" width="0.0917%" height="15" fill="rgb(236,174,8)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1343.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="1317" width="0.0917%" height="15" fill="rgb(220,197,8)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1327.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (1 samples, 0.09%)</title><rect x="32.0183%" y="1301" width="0.0917%" height="15" fill="rgb(240,108,37)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1311.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (1 samples, 0.09%)</title><rect x="32.0183%" y="1285" width="0.0917%" height="15" fill="rgb(232,176,24)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1295.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="32.0183%" y="1269" width="0.0917%" height="15" fill="rgb(243,35,29)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1279.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="32.0183%" y="1253" width="0.0917%" height="15" fill="rgb(210,37,18)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1263.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="1237" width="0.0917%" height="15" fill="rgb(224,184,40)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1247.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="1221" width="0.0917%" height="15" fill="rgb(236,39,29)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1231.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="1205" width="0.0917%" height="15" fill="rgb(232,48,39)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="1189" width="0.0917%" height="15" fill="rgb(236,34,42)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1199.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (1 samples, 0.09%)</title><rect x="32.0183%" y="1173" width="0.0917%" height="15" fill="rgb(243,106,37)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="1157" width="0.0917%" height="15" fill="rgb(218,96,6)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1167.50"></text></g><g><title>sqlx_core::pool::executor::&lt;impl sqlx_core::executor::Executor for &amp;sqlx_core::pool::Pool&lt;DB&gt;&gt;::fetch_many::{{closure}}::{{closure}} (1 samples, 0.09%)</title><rect x="32.0183%" y="1141" width="0.0917%" height="15" fill="rgb(235,130,12)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1151.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="1125" width="0.0917%" height="15" fill="rgb(231,95,0)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1135.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (1 samples, 0.09%)</title><rect x="32.0183%" y="1109" width="0.0917%" height="15" fill="rgb(228,12,23)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1119.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (1 samples, 0.09%)</title><rect x="32.0183%" y="1093" width="0.0917%" height="15" fill="rgb(216,12,1)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1103.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="32.0183%" y="1077" width="0.0917%" height="15" fill="rgb(219,59,3)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1087.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="32.0183%" y="1061" width="0.0917%" height="15" fill="rgb(215,208,46)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1071.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="1045" width="0.0917%" height="15" fill="rgb(254,224,29)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1055.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="1029" width="0.0917%" height="15" fill="rgb(232,14,29)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1039.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="1013" width="0.0917%" height="15" fill="rgb(208,45,52)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="997" width="0.0917%" height="15" fill="rgb(234,191,28)" fg:x="349" fg:w="1"/><text x="32.2683%" y="1007.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (1 samples, 0.09%)</title><rect x="32.0183%" y="981" width="0.0917%" height="15" fill="rgb(244,67,43)" fg:x="349" fg:w="1"/><text x="32.2683%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="965" width="0.0917%" height="15" fill="rgb(236,189,24)" fg:x="349" fg:w="1"/><text x="32.2683%" y="975.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_core::postgres::connection::PgConnection&gt;::fetch_many::{{closure}}::{{closure}} (1 samples, 0.09%)</title><rect x="32.0183%" y="949" width="0.0917%" height="15" fill="rgb(239,214,33)" fg:x="349" fg:w="1"/><text x="32.2683%" y="959.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="933" width="0.0917%" height="15" fill="rgb(226,176,41)" fg:x="349" fg:w="1"/><text x="32.2683%" y="943.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (1 samples, 0.09%)</title><rect x="32.0183%" y="917" width="0.0917%" height="15" fill="rgb(248,47,8)" fg:x="349" fg:w="1"/><text x="32.2683%" y="927.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (1 samples, 0.09%)</title><rect x="32.0183%" y="901" width="0.0917%" height="15" fill="rgb(218,81,44)" fg:x="349" fg:w="1"/><text x="32.2683%" y="911.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="32.0183%" y="885" width="0.0917%" height="15" fill="rgb(213,98,6)" fg:x="349" fg:w="1"/><text x="32.2683%" y="895.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="32.0183%" y="869" width="0.0917%" height="15" fill="rgb(222,85,22)" fg:x="349" fg:w="1"/><text x="32.2683%" y="879.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="853" width="0.0917%" height="15" fill="rgb(239,46,39)" fg:x="349" fg:w="1"/><text x="32.2683%" y="863.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="837" width="0.0917%" height="15" fill="rgb(237,12,29)" fg:x="349" fg:w="1"/><text x="32.2683%" y="847.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="821" width="0.0917%" height="15" fill="rgb(214,77,8)" fg:x="349" fg:w="1"/><text x="32.2683%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="805" width="0.0917%" height="15" fill="rgb(217,168,37)" fg:x="349" fg:w="1"/><text x="32.2683%" y="815.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (1 samples, 0.09%)</title><rect x="32.0183%" y="789" width="0.0917%" height="15" fill="rgb(221,217,23)" fg:x="349" fg:w="1"/><text x="32.2683%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="773" width="0.0917%" height="15" fill="rgb(243,229,36)" fg:x="349" fg:w="1"/><text x="32.2683%" y="783.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.09%)</title><rect x="32.0183%" y="757" width="0.0917%" height="15" fill="rgb(251,163,40)" fg:x="349" fg:w="1"/><text x="32.2683%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="741" width="0.0917%" height="15" fill="rgb(237,222,12)" fg:x="349" fg:w="1"/><text x="32.2683%" y="751.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv::{{closure}} (1 samples, 0.09%)</title><rect x="32.0183%" y="725" width="0.0917%" height="15" fill="rgb(248,132,6)" fg:x="349" fg:w="1"/><text x="32.2683%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="709" width="0.0917%" height="15" fill="rgb(227,167,50)" fg:x="349" fg:w="1"/><text x="32.2683%" y="719.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv_unchecked::{{closure}} (1 samples, 0.09%)</title><rect x="32.0183%" y="693" width="0.0917%" height="15" fill="rgb(242,84,37)" fg:x="349" fg:w="1"/><text x="32.2683%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="677" width="0.0917%" height="15" fill="rgb(212,4,50)" fg:x="349" fg:w="1"/><text x="32.2683%" y="687.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read::{{closure}} (1 samples, 0.09%)</title><rect x="32.0183%" y="661" width="0.0917%" height="15" fill="rgb(230,228,32)" fg:x="349" fg:w="1"/><text x="32.2683%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="645" width="0.0917%" height="15" fill="rgb(248,217,23)" fg:x="349" fg:w="1"/><text x="32.2683%" y="655.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_with::{{closure}} (1 samples, 0.09%)</title><rect x="32.0183%" y="629" width="0.0917%" height="15" fill="rgb(238,197,32)" fg:x="349" fg:w="1"/><text x="32.2683%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="613" width="0.0917%" height="15" fill="rgb(236,106,1)" fg:x="349" fg:w="1"/><text x="32.2683%" y="623.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_raw::{{closure}} (1 samples, 0.09%)</title><rect x="32.0183%" y="597" width="0.0917%" height="15" fill="rgb(219,228,13)" fg:x="349" fg:w="1"/><text x="32.2683%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="581" width="0.0917%" height="15" fill="rgb(238,30,35)" fg:x="349" fg:w="1"/><text x="32.2683%" y="591.50"></text></g><g><title>sqlx_core::io::buf_stream::read_raw_into::{{closure}} (1 samples, 0.09%)</title><rect x="32.0183%" y="565" width="0.0917%" height="15" fill="rgb(236,70,23)" fg:x="349" fg:w="1"/><text x="32.2683%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="549" width="0.0917%" height="15" fill="rgb(249,104,48)" fg:x="349" fg:w="1"/><text x="32.2683%" y="559.50"></text></g><g><title>sqlx_core::io::buf_stream::BufTruncator::read::{{closure}} (1 samples, 0.09%)</title><rect x="32.0183%" y="533" width="0.0917%" height="15" fill="rgb(254,117,50)" fg:x="349" fg:w="1"/><text x="32.2683%" y="543.50"></text></g><g><title>&lt;tokio::io::util::read::Read&lt;R&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.0183%" y="517" width="0.0917%" height="15" fill="rgb(223,152,4)" fg:x="349" fg:w="1"/><text x="32.2683%" y="527.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="32.0183%" y="501" width="0.0917%" height="15" fill="rgb(245,6,2)" fg:x="349" fg:w="1"/><text x="32.2683%" y="511.50"></text></g><g><title>&lt;sqlx_core::net::tls::MaybeTlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="32.0183%" y="485" width="0.0917%" height="15" fill="rgb(249,150,24)" fg:x="349" fg:w="1"/><text x="32.2683%" y="495.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="32.0183%" y="469" width="0.0917%" height="15" fill="rgb(228,185,42)" fg:x="349" fg:w="1"/><text x="32.2683%" y="479.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (1 samples, 0.09%)</title><rect x="32.0183%" y="453" width="0.0917%" height="15" fill="rgb(226,39,33)" fg:x="349" fg:w="1"/><text x="32.2683%" y="463.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 0.09%)</title><rect x="32.0183%" y="437" width="0.0917%" height="15" fill="rgb(221,166,19)" fg:x="349" fg:w="1"/><text x="32.2683%" y="447.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_read_io (1 samples, 0.09%)</title><rect x="32.0183%" y="421" width="0.0917%" height="15" fill="rgb(209,109,2)" fg:x="349" fg:w="1"/><text x="32.2683%" y="431.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (1 samples, 0.09%)</title><rect x="32.0183%" y="405" width="0.0917%" height="15" fill="rgb(252,216,26)" fg:x="349" fg:w="1"/><text x="32.2683%" y="415.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read::{{closure}} (1 samples, 0.09%)</title><rect x="32.0183%" y="389" width="0.0917%" height="15" fill="rgb(227,173,36)" fg:x="349" fg:w="1"/><text x="32.2683%" y="399.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.09%)</title><rect x="32.0183%" y="373" width="0.0917%" height="15" fill="rgb(209,90,7)" fg:x="349" fg:w="1"/><text x="32.2683%" y="383.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.09%)</title><rect x="32.0183%" y="357" width="0.0917%" height="15" fill="rgb(250,194,11)" fg:x="349" fg:w="1"/><text x="32.2683%" y="367.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (1 samples, 0.09%)</title><rect x="32.0183%" y="341" width="0.0917%" height="15" fill="rgb(220,72,50)" fg:x="349" fg:w="1"/><text x="32.2683%" y="351.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (1 samples, 0.09%)</title><rect x="32.0183%" y="325" width="0.0917%" height="15" fill="rgb(222,106,48)" fg:x="349" fg:w="1"/><text x="32.2683%" y="335.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.09%)</title><rect x="32.0183%" y="309" width="0.0917%" height="15" fill="rgb(216,220,45)" fg:x="349" fg:w="1"/><text x="32.2683%" y="319.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1 samples, 0.09%)</title><rect x="32.0183%" y="293" width="0.0917%" height="15" fill="rgb(234,112,18)" fg:x="349" fg:w="1"/><text x="32.2683%" y="303.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.09%)</title><rect x="32.0183%" y="277" width="0.0917%" height="15" fill="rgb(206,179,9)" fg:x="349" fg:w="1"/><text x="32.2683%" y="287.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.09%)</title><rect x="32.0183%" y="261" width="0.0917%" height="15" fill="rgb(215,115,40)" fg:x="349" fg:w="1"/><text x="32.2683%" y="271.50"></text></g><g><title>__libc_recv (1 samples, 0.09%)</title><rect x="32.0183%" y="245" width="0.0917%" height="15" fill="rgb(222,69,34)" fg:x="349" fg:w="1"/><text x="32.2683%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="32.0183%" y="229" width="0.0917%" height="15" fill="rgb(209,161,10)" fg:x="349" fg:w="1"/><text x="32.2683%" y="239.50"></text></g><g><title>EVP_DigestVerifyFinal (1 samples, 0.09%)</title><rect x="32.1101%" y="917" width="0.0917%" height="15" fill="rgb(217,6,38)" fg:x="350" fg:w="1"/><text x="32.3601%" y="927.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="32.1101%" y="901" width="0.0917%" height="15" fill="rgb(229,229,48)" fg:x="350" fg:w="1"/><text x="32.3601%" y="911.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="32.1101%" y="885" width="0.0917%" height="15" fill="rgb(225,21,28)" fg:x="350" fg:w="1"/><text x="32.3601%" y="895.50"></text></g><g><title>BN_mod_exp_mont (1 samples, 0.09%)</title><rect x="32.1101%" y="869" width="0.0917%" height="15" fill="rgb(206,33,13)" fg:x="350" fg:w="1"/><text x="32.3601%" y="879.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="32.1101%" y="853" width="0.0917%" height="15" fill="rgb(242,178,17)" fg:x="350" fg:w="1"/><text x="32.3601%" y="863.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="32.1101%" y="837" width="0.0917%" height="15" fill="rgb(220,162,5)" fg:x="350" fg:w="1"/><text x="32.3601%" y="847.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="32.1101%" y="821" width="0.0917%" height="15" fill="rgb(210,33,43)" fg:x="350" fg:w="1"/><text x="32.3601%" y="831.50"></text></g><g><title>[libcrypto.so.1.1] (2 samples, 0.18%)</title><rect x="32.2018%" y="869" width="0.1835%" height="15" fill="rgb(216,116,54)" fg:x="351" fg:w="2"/><text x="32.4518%" y="879.50"></text></g><g><title>[libcrypto.so.1.1] (2 samples, 0.18%)</title><rect x="32.2018%" y="853" width="0.1835%" height="15" fill="rgb(249,92,24)" fg:x="351" fg:w="2"/><text x="32.4518%" y="863.50"></text></g><g><title>[libcrypto.so.1.1] (2 samples, 0.18%)</title><rect x="32.2018%" y="837" width="0.1835%" height="15" fill="rgb(231,189,14)" fg:x="351" fg:w="2"/><text x="32.4518%" y="847.50"></text></g><g><title>[libcrypto.so.1.1] (2 samples, 0.18%)</title><rect x="32.2018%" y="821" width="0.1835%" height="15" fill="rgb(230,8,41)" fg:x="351" fg:w="2"/><text x="32.4518%" y="831.50"></text></g><g><title>&lt;hyper::common::lazy::Lazy&lt;F,R&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1509" width="0.3670%" height="15" fill="rgb(249,7,27)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1519.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1493" width="0.3670%" height="15" fill="rgb(232,86,5)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1503.50"></text></g><g><title>&lt;futures_util::future::try_future::AndThen&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1477" width="0.3670%" height="15" fill="rgb(224,175,18)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1487.50"></text></g><g><title>&lt;futures_util::future::try_future::TryFlatten&lt;Fut1,Fut2&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1461" width="0.3670%" height="15" fill="rgb(220,129,12)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1471.50"></text></g><g><title>&lt;futures_util::future::try_future::try_flatten::TryFlatten&lt;Fut,&lt;Fut as futures_core::future::TryFuture&gt;::Ok&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1445" width="0.3670%" height="15" fill="rgb(210,19,36)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1455.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1429" width="0.3670%" height="15" fill="rgb(219,96,14)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1439.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1413" width="0.3670%" height="15" fill="rgb(249,106,1)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1423.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1397" width="0.3670%" height="15" fill="rgb(249,155,20)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1407.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1381" width="0.3670%" height="15" fill="rgb(244,168,9)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1391.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1365" width="0.3670%" height="15" fill="rgb(216,23,50)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1375.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1349" width="0.3670%" height="15" fill="rgb(224,219,20)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1359.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1333" width="0.3670%" height="15" fill="rgb(222,156,15)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1343.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1317" width="0.3670%" height="15" fill="rgb(231,97,17)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1327.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1301" width="0.3670%" height="15" fill="rgb(218,70,48)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1311.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1285" width="0.3670%" height="15" fill="rgb(212,196,52)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1295.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1269" width="0.3670%" height="15" fill="rgb(243,203,18)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1279.50"></text></g><g><title>&lt;hyper::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1253" width="0.3670%" height="15" fill="rgb(252,125,41)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1263.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1237" width="0.3670%" height="15" fill="rgb(223,180,33)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1221" width="0.3670%" height="15" fill="rgb(254,159,46)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1231.50"></text></g><g><title>reqwest::connect::with_timeout::{{closure}} (4 samples, 0.37%)</title><rect x="32.1101%" y="1205" width="0.3670%" height="15" fill="rgb(254,38,10)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1189" width="0.3670%" height="15" fill="rgb(208,217,32)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1199.50"></text></g><g><title>reqwest::connect::Connector::connect_with_maybe_proxy::{{closure}} (4 samples, 0.37%)</title><rect x="32.1101%" y="1173" width="0.3670%" height="15" fill="rgb(221,120,13)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1183.50"></text></g><g><title>&lt;hyper_tls::client::HttpsConnecting&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1157" width="0.3670%" height="15" fill="rgb(246,54,52)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1141" width="0.3670%" height="15" fill="rgb(242,34,25)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1125" width="0.3670%" height="15" fill="rgb(247,209,9)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1135.50"></text></g><g><title>&lt;hyper_tls::client::HttpsConnector&lt;T&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::{{closure}} (4 samples, 0.37%)</title><rect x="32.1101%" y="1109" width="0.3670%" height="15" fill="rgb(228,71,26)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1093" width="0.3670%" height="15" fill="rgb(222,145,49)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1103.50"></text></g><g><title>tokio_native_tls::TlsConnector::connect::{{closure}} (4 samples, 0.37%)</title><rect x="32.1101%" y="1077" width="0.3670%" height="15" fill="rgb(218,121,17)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1061" width="0.3670%" height="15" fill="rgb(244,50,7)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1071.50"></text></g><g><title>tokio_native_tls::handshake::{{closure}} (4 samples, 0.37%)</title><rect x="32.1101%" y="1045" width="0.3670%" height="15" fill="rgb(246,229,37)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1055.50"></text></g><g><title>&lt;tokio_native_tls::MidHandshake&lt;S&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.1101%" y="1029" width="0.3670%" height="15" fill="rgb(225,18,5)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1039.50"></text></g><g><title>native_tls::MidHandshakeTlsStream&lt;S&gt;::handshake (4 samples, 0.37%)</title><rect x="32.1101%" y="1013" width="0.3670%" height="15" fill="rgb(213,204,8)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1023.50"></text></g><g><title>native_tls::imp::MidHandshakeTlsStream&lt;S&gt;::handshake (4 samples, 0.37%)</title><rect x="32.1101%" y="997" width="0.3670%" height="15" fill="rgb(238,103,6)" fg:x="350" fg:w="4"/><text x="32.3601%" y="1007.50"></text></g><g><title>openssl::ssl::MidHandshakeSslStream&lt;S&gt;::handshake (4 samples, 0.37%)</title><rect x="32.1101%" y="981" width="0.3670%" height="15" fill="rgb(222,25,35)" fg:x="350" fg:w="4"/><text x="32.3601%" y="991.50"></text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::do_handshake (4 samples, 0.37%)</title><rect x="32.1101%" y="965" width="0.3670%" height="15" fill="rgb(213,203,35)" fg:x="350" fg:w="4"/><text x="32.3601%" y="975.50"></text></g><g><title>[libssl.so.1.1] (4 samples, 0.37%)</title><rect x="32.1101%" y="949" width="0.3670%" height="15" fill="rgb(221,79,53)" fg:x="350" fg:w="4"/><text x="32.3601%" y="959.50"></text></g><g><title>[libssl.so.1.1] (4 samples, 0.37%)</title><rect x="32.1101%" y="933" width="0.3670%" height="15" fill="rgb(243,200,35)" fg:x="350" fg:w="4"/><text x="32.3601%" y="943.50"></text></g><g><title>[libssl.so.1.1] (3 samples, 0.28%)</title><rect x="32.2018%" y="917" width="0.2752%" height="15" fill="rgb(248,60,25)" fg:x="351" fg:w="3"/><text x="32.4518%" y="927.50"></text></g><g><title>[libssl.so.1.1] (3 samples, 0.28%)</title><rect x="32.2018%" y="901" width="0.2752%" height="15" fill="rgb(227,53,46)" fg:x="351" fg:w="3"/><text x="32.4518%" y="911.50"></text></g><g><title>[libssl.so.1.1] (3 samples, 0.28%)</title><rect x="32.2018%" y="885" width="0.2752%" height="15" fill="rgb(216,120,32)" fg:x="351" fg:w="3"/><text x="32.4518%" y="895.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.09%)</title><rect x="32.3853%" y="869" width="0.0917%" height="15" fill="rgb(220,134,1)" fg:x="353" fg:w="1"/><text x="32.6353%" y="879.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="32.3853%" y="853" width="0.0917%" height="15" fill="rgb(237,168,5)" fg:x="353" fg:w="1"/><text x="32.6353%" y="863.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="32.3853%" y="837" width="0.0917%" height="15" fill="rgb(231,100,33)" fg:x="353" fg:w="1"/><text x="32.6353%" y="847.50"></text></g><g><title>HMAC_Final (1 samples, 0.09%)</title><rect x="32.3853%" y="821" width="0.0917%" height="15" fill="rgb(236,177,47)" fg:x="353" fg:w="1"/><text x="32.6353%" y="831.50"></text></g><g><title>EVP_MD_CTX_copy_ex (1 samples, 0.09%)</title><rect x="32.3853%" y="805" width="0.0917%" height="15" fill="rgb(235,7,49)" fg:x="353" fg:w="1"/><text x="32.6353%" y="815.50"></text></g><g><title>EVP_MD_CTX_clear_flags (1 samples, 0.09%)</title><rect x="32.3853%" y="789" width="0.0917%" height="15" fill="rgb(232,119,22)" fg:x="353" fg:w="1"/><text x="32.6353%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.09%)</title><rect x="32.5688%" y="1317" width="0.0917%" height="15" fill="rgb(254,73,53)" fg:x="355" fg:w="1"/><text x="32.8188%" y="1327.50"></text></g><g><title>hyper::client::pool::Checkout&lt;T&gt;::checkout::{{closure}} (1 samples, 0.09%)</title><rect x="32.5688%" y="1301" width="0.0917%" height="15" fill="rgb(251,35,20)" fg:x="355" fg:w="1"/><text x="32.8188%" y="1311.50"></text></g><g><title>hyper::client::pool::IdlePopper&lt;T&gt;::pop (1 samples, 0.09%)</title><rect x="32.5688%" y="1285" width="0.0917%" height="15" fill="rgb(241,119,20)" fg:x="355" fg:w="1"/><text x="32.8188%" y="1295.50"></text></g><g><title>hyper::client::pool::Expiration::expires (1 samples, 0.09%)</title><rect x="32.5688%" y="1269" width="0.0917%" height="15" fill="rgb(207,102,14)" fg:x="355" fg:w="1"/><text x="32.8188%" y="1279.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.09%)</title><rect x="32.5688%" y="1253" width="0.0917%" height="15" fill="rgb(248,201,50)" fg:x="355" fg:w="1"/><text x="32.8188%" y="1263.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.09%)</title><rect x="32.5688%" y="1237" width="0.0917%" height="15" fill="rgb(222,185,44)" fg:x="355" fg:w="1"/><text x="32.8188%" y="1247.50"></text></g><g><title>std::sys::unix::time::inner::now (1 samples, 0.09%)</title><rect x="32.5688%" y="1221" width="0.0917%" height="15" fill="rgb(218,107,18)" fg:x="355" fg:w="1"/><text x="32.8188%" y="1231.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.09%)</title><rect x="32.5688%" y="1205" width="0.0917%" height="15" fill="rgb(237,177,39)" fg:x="355" fg:w="1"/><text x="32.8188%" y="1215.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.09%)</title><rect x="32.6606%" y="1317" width="0.0917%" height="15" fill="rgb(246,69,6)" fg:x="356" fg:w="1"/><text x="32.9106%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.09%)</title><rect x="32.6606%" y="1301" width="0.0917%" height="15" fill="rgb(234,208,37)" fg:x="356" fg:w="1"/><text x="32.9106%" y="1311.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.09%)</title><rect x="32.6606%" y="1285" width="0.0917%" height="15" fill="rgb(225,4,6)" fg:x="356" fg:w="1"/><text x="32.9106%" y="1295.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.09%)</title><rect x="32.6606%" y="1269" width="0.0917%" height="15" fill="rgb(233,45,0)" fg:x="356" fg:w="1"/><text x="32.9106%" y="1279.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (1 samples, 0.09%)</title><rect x="32.6606%" y="1253" width="0.0917%" height="15" fill="rgb(226,136,5)" fg:x="356" fg:w="1"/><text x="32.9106%" y="1263.50"></text></g><g><title>&lt;http::uri::scheme::Scheme as core::hash::Hash&gt;::hash (1 samples, 0.09%)</title><rect x="32.6606%" y="1237" width="0.0917%" height="15" fill="rgb(211,91,47)" fg:x="356" fg:w="1"/><text x="32.9106%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.4771%" y="1413" width="0.3670%" height="15" fill="rgb(242,88,51)" fg:x="354" fg:w="4"/><text x="32.7271%" y="1423.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::connection_for::{{closure}} (4 samples, 0.37%)</title><rect x="32.4771%" y="1397" width="0.3670%" height="15" fill="rgb(230,91,28)" fg:x="354" fg:w="4"/><text x="32.7271%" y="1407.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.4771%" y="1381" width="0.3670%" height="15" fill="rgb(254,186,29)" fg:x="354" fg:w="4"/><text x="32.7271%" y="1391.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (4 samples, 0.37%)</title><rect x="32.4771%" y="1365" width="0.3670%" height="15" fill="rgb(238,6,4)" fg:x="354" fg:w="4"/><text x="32.7271%" y="1375.50"></text></g><g><title>&lt;hyper::client::pool::Checkout&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="32.4771%" y="1349" width="0.3670%" height="15" fill="rgb(221,151,16)" fg:x="354" fg:w="4"/><text x="32.7271%" y="1359.50"></text></g><g><title>hyper::client::pool::Checkout&lt;T&gt;::checkout (4 samples, 0.37%)</title><rect x="32.4771%" y="1333" width="0.3670%" height="15" fill="rgb(251,143,52)" fg:x="354" fg:w="4"/><text x="32.7271%" y="1343.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (1 samples, 0.09%)</title><rect x="32.7523%" y="1317" width="0.0917%" height="15" fill="rgb(206,90,15)" fg:x="357" fg:w="1"/><text x="33.0023%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (1 samples, 0.09%)</title><rect x="32.7523%" y="1301" width="0.0917%" height="15" fill="rgb(218,35,8)" fg:x="357" fg:w="1"/><text x="33.0023%" y="1311.50"></text></g><g><title>&lt;reqwest::async_impl::client::PendingRequest as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="32.4771%" y="1509" width="0.4587%" height="15" fill="rgb(239,215,6)" fg:x="354" fg:w="5"/><text x="32.7271%" y="1519.50"></text></g><g><title>&lt;hyper::client::client::ResponseFuture as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="32.4771%" y="1493" width="0.4587%" height="15" fill="rgb(245,116,39)" fg:x="354" fg:w="5"/><text x="32.7271%" y="1503.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="32.4771%" y="1477" width="0.4587%" height="15" fill="rgb(242,65,28)" fg:x="354" fg:w="5"/><text x="32.7271%" y="1487.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::retryably_send_request::{{closure}} (5 samples, 0.46%)</title><rect x="32.4771%" y="1461" width="0.4587%" height="15" fill="rgb(252,132,53)" fg:x="354" fg:w="5"/><text x="32.7271%" y="1471.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="32.4771%" y="1445" width="0.4587%" height="15" fill="rgb(224,159,50)" fg:x="354" fg:w="5"/><text x="32.7271%" y="1455.50"></text></g><g><title>hyper::client::client::Client&lt;C,B&gt;::send_request::{{closure}} (5 samples, 0.46%)</title><rect x="32.4771%" y="1429" width="0.4587%" height="15" fill="rgb(224,93,4)" fg:x="354" fg:w="5"/><text x="32.7271%" y="1439.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.8440%" y="1413" width="0.0917%" height="15" fill="rgb(208,81,34)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1423.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.8440%" y="1397" width="0.0917%" height="15" fill="rgb(233,92,54)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1407.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.8440%" y="1381" width="0.0917%" height="15" fill="rgb(237,21,14)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1391.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.8440%" y="1365" width="0.0917%" height="15" fill="rgb(249,128,51)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1375.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.09%)</title><rect x="32.8440%" y="1349" width="0.0917%" height="15" fill="rgb(223,129,24)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1359.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.8440%" y="1333" width="0.0917%" height="15" fill="rgb(231,168,25)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1343.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.8440%" y="1317" width="0.0917%" height="15" fill="rgb(224,39,20)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1327.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.8440%" y="1301" width="0.0917%" height="15" fill="rgb(225,152,53)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1311.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.8440%" y="1285" width="0.0917%" height="15" fill="rgb(252,17,24)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1295.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.09%)</title><rect x="32.8440%" y="1269" width="0.0917%" height="15" fill="rgb(250,114,30)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1279.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.8440%" y="1253" width="0.0917%" height="15" fill="rgb(229,5,4)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1263.50"></text></g><g><title>&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.8440%" y="1237" width="0.0917%" height="15" fill="rgb(225,176,49)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1247.50"></text></g><g><title>&lt;futures_util::future::future::Then&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.8440%" y="1221" width="0.0917%" height="15" fill="rgb(224,221,49)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1231.50"></text></g><g><title>&lt;futures_util::future::future::flatten::Flatten&lt;Fut,&lt;Fut as core::future::future::Future&gt;::Output&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.8440%" y="1205" width="0.0917%" height="15" fill="rgb(253,169,27)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1215.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.8440%" y="1189" width="0.0917%" height="15" fill="rgb(211,206,16)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1199.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.8440%" y="1173" width="0.0917%" height="15" fill="rgb(244,87,35)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1183.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.8440%" y="1157" width="0.0917%" height="15" fill="rgb(246,28,10)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;http::response::Response&lt;hyper::body::body::Body&gt;,(hyper::error::Error,core::option::Option&lt;http::request::Request&lt;reqwest::async_impl::body::ImplStream&gt;&gt;)&gt;&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="32.8440%" y="1141" width="0.0917%" height="15" fill="rgb(229,12,44)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;http::response::Response&lt;hyper::body::body::Body&gt;,(hyper::error::Error,core::option::Option&lt;http::request::Request&lt;reqwest::async_impl::body::ImplStream&gt;&gt;)&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="32.8440%" y="1125" width="0.0917%" height="15" fill="rgb(210,145,37)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="32.8440%" y="1109" width="0.0917%" height="15" fill="rgb(227,112,52)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1119.50"></text></g><g><title>__free (1 samples, 0.09%)</title><rect x="32.8440%" y="1093" width="0.0917%" height="15" fill="rgb(238,155,34)" fg:x="358" fg:w="1"/><text x="33.0940%" y="1103.50"></text></g><g><title>sqlx_core::pool::inner::SharedPool&lt;DB&gt;::connection::{{closure}} (1 samples, 0.09%)</title><rect x="32.9358%" y="1445" width="0.0917%" height="15" fill="rgb(239,226,36)" fg:x="359" fg:w="1"/><text x="33.1858%" y="1455.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.9358%" y="1429" width="0.0917%" height="15" fill="rgb(230,16,23)" fg:x="359" fg:w="1"/><text x="33.1858%" y="1439.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1 samples, 0.09%)</title><rect x="32.9358%" y="1413" width="0.0917%" height="15" fill="rgb(236,171,36)" fg:x="359" fg:w="1"/><text x="33.1858%" y="1423.50"></text></g><g><title>&lt;tokio::time::driver::sleep::Sleep as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="32.9358%" y="1397" width="0.0917%" height="15" fill="rgb(221,22,14)" fg:x="359" fg:w="1"/><text x="33.1858%" y="1407.50"></text></g><g><title>tokio::time::driver::sleep::Sleep::poll_elapsed (1 samples, 0.09%)</title><rect x="32.9358%" y="1381" width="0.0917%" height="15" fill="rgb(242,43,11)" fg:x="359" fg:w="1"/><text x="33.1858%" y="1391.50"></text></g><g><title>tokio::time::driver::entry::TimerEntry::poll_elapsed (1 samples, 0.09%)</title><rect x="32.9358%" y="1365" width="0.0917%" height="15" fill="rgb(232,69,23)" fg:x="359" fg:w="1"/><text x="33.1858%" y="1375.50"></text></g><g><title>tokio::time::driver::entry::StateCell::poll (1 samples, 0.09%)</title><rect x="32.9358%" y="1349" width="0.0917%" height="15" fill="rgb(216,180,54)" fg:x="359" fg:w="1"/><text x="33.1858%" y="1359.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (1 samples, 0.09%)</title><rect x="32.9358%" y="1333" width="0.0917%" height="15" fill="rgb(216,5,24)" fg:x="359" fg:w="1"/><text x="33.1858%" y="1343.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.18%)</title><rect x="33.1193%" y="997" width="0.1835%" height="15" fill="rgb(225,89,9)" fg:x="361" fg:w="2"/><text x="33.3693%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.18%)</title><rect x="33.1193%" y="981" width="0.1835%" height="15" fill="rgb(243,75,33)" fg:x="361" fg:w="2"/><text x="33.3693%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.18%)</title><rect x="33.1193%" y="965" width="0.1835%" height="15" fill="rgb(247,141,45)" fg:x="361" fg:w="2"/><text x="33.3693%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.18%)</title><rect x="33.1193%" y="949" width="0.1835%" height="15" fill="rgb(232,177,36)" fg:x="361" fg:w="2"/><text x="33.3693%" y="959.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.18%)</title><rect x="33.1193%" y="933" width="0.1835%" height="15" fill="rgb(219,125,36)" fg:x="361" fg:w="2"/><text x="33.3693%" y="943.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.18%)</title><rect x="33.1193%" y="917" width="0.1835%" height="15" fill="rgb(227,94,9)" fg:x="361" fg:w="2"/><text x="33.3693%" y="927.50"></text></g><g><title>_int_malloc (2 samples, 0.18%)</title><rect x="33.1193%" y="901" width="0.1835%" height="15" fill="rgb(240,34,52)" fg:x="361" fg:w="2"/><text x="33.3693%" y="911.50"></text></g><g><title>futures_channel::mpsc::channel (4 samples, 0.37%)</title><rect x="33.0275%" y="1013" width="0.3670%" height="15" fill="rgb(216,45,12)" fg:x="360" fg:w="4"/><text x="33.2775%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="33.3028%" y="997" width="0.0917%" height="15" fill="rgb(246,21,19)" fg:x="363" fg:w="1"/><text x="33.5528%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::new (1 samples, 0.09%)</title><rect x="33.3028%" y="981" width="0.0917%" height="15" fill="rgb(213,98,42)" fg:x="363" fg:w="1"/><text x="33.5528%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::init (1 samples, 0.09%)</title><rect x="33.3028%" y="965" width="0.0917%" height="15" fill="rgb(250,136,47)" fg:x="363" fg:w="1"/><text x="33.5528%" y="975.50"></text></g><g><title>___pthread_mutex_init (1 samples, 0.09%)</title><rect x="33.3028%" y="949" width="0.0917%" height="15" fill="rgb(251,124,27)" fg:x="363" fg:w="1"/><text x="33.5528%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="33.0275%" y="1061" width="0.4587%" height="15" fill="rgb(229,180,14)" fg:x="360" fg:w="5"/><text x="33.2775%" y="1071.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}} (5 samples, 0.46%)</title><rect x="33.0275%" y="1045" width="0.4587%" height="15" fill="rgb(245,216,25)" fg:x="360" fg:w="5"/><text x="33.2775%" y="1055.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new (5 samples, 0.46%)</title><rect x="33.0275%" y="1029" width="0.4587%" height="15" fill="rgb(251,43,5)" fg:x="360" fg:w="5"/><text x="33.2775%" y="1039.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (1 samples, 0.09%)</title><rect x="33.3945%" y="1013" width="0.0917%" height="15" fill="rgb(250,128,24)" fg:x="364" fg:w="1"/><text x="33.6445%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.09%)</title><rect x="33.3945%" y="997" width="0.0917%" height="15" fill="rgb(217,117,27)" fg:x="364" fg:w="1"/><text x="33.6445%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.09%)</title><rect x="33.3945%" y="981" width="0.0917%" height="15" fill="rgb(245,147,4)" fg:x="364" fg:w="1"/><text x="33.6445%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="33.3945%" y="965" width="0.0917%" height="15" fill="rgb(242,201,35)" fg:x="364" fg:w="1"/><text x="33.6445%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="33.3945%" y="949" width="0.0917%" height="15" fill="rgb(218,181,1)" fg:x="364" fg:w="1"/><text x="33.6445%" y="959.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="33.3945%" y="933" width="0.0917%" height="15" fill="rgb(222,6,29)" fg:x="364" fg:w="1"/><text x="33.6445%" y="943.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="33.3945%" y="917" width="0.0917%" height="15" fill="rgb(208,186,3)" fg:x="364" fg:w="1"/><text x="33.6445%" y="927.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="33.3945%" y="901" width="0.0917%" height="15" fill="rgb(216,36,26)" fg:x="364" fg:w="1"/><text x="33.6445%" y="911.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (5 samples, 0.46%)</title><rect x="33.5780%" y="501" width="0.4587%" height="15" fill="rgb(248,201,23)" fg:x="366" fg:w="5"/><text x="33.8280%" y="511.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (4 samples, 0.37%)</title><rect x="33.6697%" y="485" width="0.3670%" height="15" fill="rgb(251,170,31)" fg:x="367" fg:w="4"/><text x="33.9197%" y="495.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.18%)</title><rect x="33.8532%" y="469" width="0.1835%" height="15" fill="rgb(207,110,25)" fg:x="369" fg:w="2"/><text x="34.1032%" y="479.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.18%)</title><rect x="33.8532%" y="453" width="0.1835%" height="15" fill="rgb(250,54,15)" fg:x="369" fg:w="2"/><text x="34.1032%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (2 samples, 0.18%)</title><rect x="33.8532%" y="437" width="0.1835%" height="15" fill="rgb(227,68,33)" fg:x="369" fg:w="2"/><text x="34.1032%" y="447.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (2 samples, 0.18%)</title><rect x="33.8532%" y="421" width="0.1835%" height="15" fill="rgb(238,34,41)" fg:x="369" fg:w="2"/><text x="34.1032%" y="431.50"></text></g><g><title>___pthread_mutex_lock (2 samples, 0.18%)</title><rect x="33.8532%" y="405" width="0.1835%" height="15" fill="rgb(220,11,15)" fg:x="369" fg:w="2"/><text x="34.1032%" y="415.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (16 samples, 1.47%)</title><rect x="33.0275%" y="1397" width="1.4679%" height="15" fill="rgb(246,111,35)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1407.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (16 samples, 1.47%)</title><rect x="33.0275%" y="1381" width="1.4679%" height="15" fill="rgb(209,88,53)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1391.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (16 samples, 1.47%)</title><rect x="33.0275%" y="1365" width="1.4679%" height="15" fill="rgb(231,185,47)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1375.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (16 samples, 1.47%)</title><rect x="33.0275%" y="1349" width="1.4679%" height="15" fill="rgb(233,154,1)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1359.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (16 samples, 1.47%)</title><rect x="33.0275%" y="1333" width="1.4679%" height="15" fill="rgb(225,15,46)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1343.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (16 samples, 1.47%)</title><rect x="33.0275%" y="1317" width="1.4679%" height="15" fill="rgb(211,135,41)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1327.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (16 samples, 1.47%)</title><rect x="33.0275%" y="1301" width="1.4679%" height="15" fill="rgb(208,54,0)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1311.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (16 samples, 1.47%)</title><rect x="33.0275%" y="1285" width="1.4679%" height="15" fill="rgb(244,136,14)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1295.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (16 samples, 1.47%)</title><rect x="33.0275%" y="1269" width="1.4679%" height="15" fill="rgb(241,56,14)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1279.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 1.47%)</title><rect x="33.0275%" y="1253" width="1.4679%" height="15" fill="rgb(205,80,24)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1263.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 1.47%)</title><rect x="33.0275%" y="1237" width="1.4679%" height="15" fill="rgb(220,57,4)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1247.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (16 samples, 1.47%)</title><rect x="33.0275%" y="1221" width="1.4679%" height="15" fill="rgb(226,193,50)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1231.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 1.47%)</title><rect x="33.0275%" y="1205" width="1.4679%" height="15" fill="rgb(231,168,22)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1215.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 1.47%)</title><rect x="33.0275%" y="1189" width="1.4679%" height="15" fill="rgb(254,215,14)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1199.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (16 samples, 1.47%)</title><rect x="33.0275%" y="1173" width="1.4679%" height="15" fill="rgb(211,115,16)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1183.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (16 samples, 1.47%)</title><rect x="33.0275%" y="1157" width="1.4679%" height="15" fill="rgb(236,210,16)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1167.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (16 samples, 1.47%)</title><rect x="33.0275%" y="1141" width="1.4679%" height="15" fill="rgb(221,94,12)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 1.47%)</title><rect x="33.0275%" y="1125" width="1.4679%" height="15" fill="rgb(235,218,49)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1135.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (16 samples, 1.47%)</title><rect x="33.0275%" y="1109" width="1.4679%" height="15" fill="rgb(217,114,14)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 1.47%)</title><rect x="33.0275%" y="1093" width="1.4679%" height="15" fill="rgb(216,145,22)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1103.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_core::postgres::connection::PgConnection&gt;::fetch_many::{{closure}}::{{closure}} (16 samples, 1.47%)</title><rect x="33.0275%" y="1077" width="1.4679%" height="15" fill="rgb(217,112,39)" fg:x="360" fg:w="16"/><text x="33.2775%" y="1087.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="33.4862%" y="1061" width="1.0092%" height="15" fill="rgb(225,85,32)" fg:x="365" fg:w="11"/><text x="33.7362%" y="1071.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (11 samples, 1.01%)</title><rect x="33.4862%" y="1045" width="1.0092%" height="15" fill="rgb(245,209,47)" fg:x="365" fg:w="11"/><text x="33.7362%" y="1055.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (11 samples, 1.01%)</title><rect x="33.4862%" y="1029" width="1.0092%" height="15" fill="rgb(218,220,15)" fg:x="365" fg:w="11"/><text x="33.7362%" y="1039.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (11 samples, 1.01%)</title><rect x="33.4862%" y="1013" width="1.0092%" height="15" fill="rgb(222,202,31)" fg:x="365" fg:w="11"/><text x="33.7362%" y="1023.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (11 samples, 1.01%)</title><rect x="33.4862%" y="997" width="1.0092%" height="15" fill="rgb(243,203,4)" fg:x="365" fg:w="11"/><text x="33.7362%" y="1007.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="33.4862%" y="981" width="1.0092%" height="15" fill="rgb(237,92,17)" fg:x="365" fg:w="11"/><text x="33.7362%" y="991.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="33.4862%" y="965" width="1.0092%" height="15" fill="rgb(231,119,7)" fg:x="365" fg:w="11"/><text x="33.7362%" y="975.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="33.4862%" y="949" width="1.0092%" height="15" fill="rgb(237,82,41)" fg:x="365" fg:w="11"/><text x="33.7362%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="33.4862%" y="933" width="1.0092%" height="15" fill="rgb(226,81,48)" fg:x="365" fg:w="11"/><text x="33.7362%" y="943.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (11 samples, 1.01%)</title><rect x="33.4862%" y="917" width="1.0092%" height="15" fill="rgb(234,70,51)" fg:x="365" fg:w="11"/><text x="33.7362%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="33.4862%" y="901" width="1.0092%" height="15" fill="rgb(251,86,4)" fg:x="365" fg:w="11"/><text x="33.7362%" y="911.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}}::{{closure}} (11 samples, 1.01%)</title><rect x="33.4862%" y="885" width="1.0092%" height="15" fill="rgb(244,144,28)" fg:x="365" fg:w="11"/><text x="33.7362%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="33.4862%" y="869" width="1.0092%" height="15" fill="rgb(232,161,39)" fg:x="365" fg:w="11"/><text x="33.7362%" y="879.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv::{{closure}} (11 samples, 1.01%)</title><rect x="33.4862%" y="853" width="1.0092%" height="15" fill="rgb(247,34,51)" fg:x="365" fg:w="11"/><text x="33.7362%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="33.4862%" y="837" width="1.0092%" height="15" fill="rgb(225,132,2)" fg:x="365" fg:w="11"/><text x="33.7362%" y="847.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv_unchecked::{{closure}} (11 samples, 1.01%)</title><rect x="33.4862%" y="821" width="1.0092%" height="15" fill="rgb(209,159,44)" fg:x="365" fg:w="11"/><text x="33.7362%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="33.4862%" y="805" width="1.0092%" height="15" fill="rgb(251,214,1)" fg:x="365" fg:w="11"/><text x="33.7362%" y="815.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read::{{closure}} (11 samples, 1.01%)</title><rect x="33.4862%" y="789" width="1.0092%" height="15" fill="rgb(247,84,47)" fg:x="365" fg:w="11"/><text x="33.7362%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="33.4862%" y="773" width="1.0092%" height="15" fill="rgb(240,111,43)" fg:x="365" fg:w="11"/><text x="33.7362%" y="783.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_with::{{closure}} (11 samples, 1.01%)</title><rect x="33.4862%" y="757" width="1.0092%" height="15" fill="rgb(215,214,35)" fg:x="365" fg:w="11"/><text x="33.7362%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="33.4862%" y="741" width="1.0092%" height="15" fill="rgb(248,207,23)" fg:x="365" fg:w="11"/><text x="33.7362%" y="751.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_raw::{{closure}} (11 samples, 1.01%)</title><rect x="33.4862%" y="725" width="1.0092%" height="15" fill="rgb(214,186,4)" fg:x="365" fg:w="11"/><text x="33.7362%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="33.4862%" y="709" width="1.0092%" height="15" fill="rgb(220,133,22)" fg:x="365" fg:w="11"/><text x="33.7362%" y="719.50"></text></g><g><title>sqlx_core::io::buf_stream::read_raw_into::{{closure}} (11 samples, 1.01%)</title><rect x="33.4862%" y="693" width="1.0092%" height="15" fill="rgb(239,134,19)" fg:x="365" fg:w="11"/><text x="33.7362%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="33.4862%" y="677" width="1.0092%" height="15" fill="rgb(250,140,9)" fg:x="365" fg:w="11"/><text x="33.7362%" y="687.50"></text></g><g><title>sqlx_core::io::buf_stream::BufTruncator::read::{{closure}} (11 samples, 1.01%)</title><rect x="33.4862%" y="661" width="1.0092%" height="15" fill="rgb(225,59,14)" fg:x="365" fg:w="11"/><text x="33.7362%" y="671.50"></text></g><g><title>&lt;tokio::io::util::read::Read&lt;R&gt; as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="33.4862%" y="645" width="1.0092%" height="15" fill="rgb(214,152,51)" fg:x="365" fg:w="11"/><text x="33.7362%" y="655.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (11 samples, 1.01%)</title><rect x="33.4862%" y="629" width="1.0092%" height="15" fill="rgb(251,227,43)" fg:x="365" fg:w="11"/><text x="33.7362%" y="639.50"></text></g><g><title>&lt;sqlx_core::net::tls::MaybeTlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (11 samples, 1.01%)</title><rect x="33.4862%" y="613" width="1.0092%" height="15" fill="rgb(241,96,17)" fg:x="365" fg:w="11"/><text x="33.7362%" y="623.50"></text></g><g><title>&lt;sqlx_core::net::socket::Socket as tokio::io::async_read::AsyncRead&gt;::poll_read (11 samples, 1.01%)</title><rect x="33.4862%" y="597" width="1.0092%" height="15" fill="rgb(234,198,43)" fg:x="365" fg:w="11"/><text x="33.7362%" y="607.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (11 samples, 1.01%)</title><rect x="33.4862%" y="581" width="1.0092%" height="15" fill="rgb(220,108,29)" fg:x="365" fg:w="11"/><text x="33.7362%" y="591.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (11 samples, 1.01%)</title><rect x="33.4862%" y="565" width="1.0092%" height="15" fill="rgb(226,163,33)" fg:x="365" fg:w="11"/><text x="33.7362%" y="575.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (11 samples, 1.01%)</title><rect x="33.4862%" y="549" width="1.0092%" height="15" fill="rgb(205,194,45)" fg:x="365" fg:w="11"/><text x="33.7362%" y="559.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_read_io (11 samples, 1.01%)</title><rect x="33.4862%" y="533" width="1.0092%" height="15" fill="rgb(206,143,44)" fg:x="365" fg:w="11"/><text x="33.7362%" y="543.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (10 samples, 0.92%)</title><rect x="33.5780%" y="517" width="0.9174%" height="15" fill="rgb(236,136,36)" fg:x="366" fg:w="10"/><text x="33.8280%" y="527.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read::{{closure}} (5 samples, 0.46%)</title><rect x="34.0367%" y="501" width="0.4587%" height="15" fill="rgb(249,172,42)" fg:x="371" fg:w="5"/><text x="34.2867%" y="511.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (5 samples, 0.46%)</title><rect x="34.0367%" y="485" width="0.4587%" height="15" fill="rgb(216,139,23)" fg:x="371" fg:w="5"/><text x="34.2867%" y="495.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (5 samples, 0.46%)</title><rect x="34.0367%" y="469" width="0.4587%" height="15" fill="rgb(207,166,20)" fg:x="371" fg:w="5"/><text x="34.2867%" y="479.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (5 samples, 0.46%)</title><rect x="34.0367%" y="453" width="0.4587%" height="15" fill="rgb(210,209,22)" fg:x="371" fg:w="5"/><text x="34.2867%" y="463.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (5 samples, 0.46%)</title><rect x="34.0367%" y="437" width="0.4587%" height="15" fill="rgb(232,118,20)" fg:x="371" fg:w="5"/><text x="34.2867%" y="447.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (5 samples, 0.46%)</title><rect x="34.0367%" y="421" width="0.4587%" height="15" fill="rgb(238,113,42)" fg:x="371" fg:w="5"/><text x="34.2867%" y="431.50"></text></g><g><title>std::sys_common::net::TcpStream::read (5 samples, 0.46%)</title><rect x="34.0367%" y="405" width="0.4587%" height="15" fill="rgb(231,42,5)" fg:x="371" fg:w="5"/><text x="34.2867%" y="415.50"></text></g><g><title>std::sys::unix::net::Socket::read (5 samples, 0.46%)</title><rect x="34.0367%" y="389" width="0.4587%" height="15" fill="rgb(243,166,24)" fg:x="371" fg:w="5"/><text x="34.2867%" y="399.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (5 samples, 0.46%)</title><rect x="34.0367%" y="373" width="0.4587%" height="15" fill="rgb(237,226,12)" fg:x="371" fg:w="5"/><text x="34.2867%" y="383.50"></text></g><g><title>__libc_recv (5 samples, 0.46%)</title><rect x="34.0367%" y="357" width="0.4587%" height="15" fill="rgb(229,133,24)" fg:x="371" fg:w="5"/><text x="34.2867%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.46%)</title><rect x="34.0367%" y="341" width="0.4587%" height="15" fill="rgb(238,33,43)" fg:x="371" fg:w="5"/><text x="34.2867%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.46%)</title><rect x="34.0367%" y="325" width="0.4587%" height="15" fill="rgb(227,59,38)" fg:x="371" fg:w="5"/><text x="34.2867%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.46%)</title><rect x="34.0367%" y="309" width="0.4587%" height="15" fill="rgb(230,97,0)" fg:x="371" fg:w="5"/><text x="34.2867%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.46%)</title><rect x="34.0367%" y="293" width="0.4587%" height="15" fill="rgb(250,173,50)" fg:x="371" fg:w="5"/><text x="34.2867%" y="303.50"></text></g><g><title>[unknown] (4 samples, 0.37%)</title><rect x="34.1284%" y="277" width="0.3670%" height="15" fill="rgb(240,15,50)" fg:x="372" fg:w="4"/><text x="34.3784%" y="287.50"></text></g><g><title>[unknown] (4 samples, 0.37%)</title><rect x="34.1284%" y="261" width="0.3670%" height="15" fill="rgb(221,93,22)" fg:x="372" fg:w="4"/><text x="34.3784%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="34.3119%" y="245" width="0.1835%" height="15" fill="rgb(245,180,53)" fg:x="374" fg:w="2"/><text x="34.5619%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="34.3119%" y="229" width="0.1835%" height="15" fill="rgb(231,88,51)" fg:x="374" fg:w="2"/><text x="34.5619%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="34.4037%" y="213" width="0.0917%" height="15" fill="rgb(240,58,21)" fg:x="375" fg:w="1"/><text x="34.6537%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="34.4037%" y="197" width="0.0917%" height="15" fill="rgb(237,21,10)" fg:x="375" fg:w="1"/><text x="34.6537%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="34.4037%" y="181" width="0.0917%" height="15" fill="rgb(218,43,11)" fg:x="375" fg:w="1"/><text x="34.6537%" y="191.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 1.65%)</title><rect x="32.9358%" y="1509" width="1.6514%" height="15" fill="rgb(218,221,29)" fg:x="359" fg:w="18"/><text x="33.1858%" y="1519.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 1.65%)</title><rect x="32.9358%" y="1493" width="1.6514%" height="15" fill="rgb(214,118,42)" fg:x="359" fg:w="18"/><text x="33.1858%" y="1503.50"></text></g><g><title>sqlx_core::pool::inner::SharedPool&lt;DB&gt;::acquire::{{closure}}::{{closure}} (18 samples, 1.65%)</title><rect x="32.9358%" y="1477" width="1.6514%" height="15" fill="rgb(251,200,26)" fg:x="359" fg:w="18"/><text x="33.1858%" y="1487.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 1.65%)</title><rect x="32.9358%" y="1461" width="1.6514%" height="15" fill="rgb(237,101,39)" fg:x="359" fg:w="18"/><text x="33.1858%" y="1471.50"></text></g><g><title>sqlx_core::pool::inner::check_conn::{{closure}} (17 samples, 1.56%)</title><rect x="33.0275%" y="1445" width="1.5596%" height="15" fill="rgb(251,117,11)" fg:x="360" fg:w="17"/><text x="33.2775%" y="1455.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 1.56%)</title><rect x="33.0275%" y="1429" width="1.5596%" height="15" fill="rgb(216,223,23)" fg:x="360" fg:w="17"/><text x="33.2775%" y="1439.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;sqlx_core::pool::connection::Idle&lt;DB&gt;&gt;::ping::{{closure}} (17 samples, 1.56%)</title><rect x="33.0275%" y="1413" width="1.5596%" height="15" fill="rgb(251,54,12)" fg:x="360" fg:w="17"/><text x="33.2775%" y="1423.50"></text></g><g><title>&lt;sqlx_core::postgres::connection::PgConnection as sqlx_core::connection::Connection&gt;::ping (1 samples, 0.09%)</title><rect x="34.4954%" y="1397" width="0.0917%" height="15" fill="rgb(254,176,54)" fg:x="376" fg:w="1"/><text x="34.7454%" y="1407.50"></text></g><g><title>sqlx_core::executor::Executor::execute (1 samples, 0.09%)</title><rect x="34.4954%" y="1381" width="0.0917%" height="15" fill="rgb(210,32,8)" fg:x="376" fg:w="1"/><text x="34.7454%" y="1391.50"></text></g><g><title>sqlx_core::executor::Executor::execute_many (1 samples, 0.09%)</title><rect x="34.4954%" y="1365" width="0.0917%" height="15" fill="rgb(235,52,38)" fg:x="376" fg:w="1"/><text x="34.7454%" y="1375.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_core::postgres::connection::PgConnection&gt;::fetch_many (1 samples, 0.09%)</title><rect x="34.4954%" y="1349" width="0.0917%" height="15" fill="rgb(231,4,44)" fg:x="376" fg:w="1"/><text x="34.7454%" y="1359.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="34.4954%" y="1333" width="0.0917%" height="15" fill="rgb(249,2,32)" fg:x="376" fg:w="1"/><text x="34.7454%" y="1343.50"></text></g><g><title>futures_channel::mpsc::channel (1 samples, 0.09%)</title><rect x="34.4954%" y="1317" width="0.0917%" height="15" fill="rgb(224,65,26)" fg:x="376" fg:w="1"/><text x="34.7454%" y="1327.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="34.4954%" y="1301" width="0.0917%" height="15" fill="rgb(250,73,40)" fg:x="376" fg:w="1"/><text x="34.7454%" y="1311.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.09%)</title><rect x="34.4954%" y="1285" width="0.0917%" height="15" fill="rgb(253,177,16)" fg:x="376" fg:w="1"/><text x="34.7454%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="34.4954%" y="1269" width="0.0917%" height="15" fill="rgb(217,32,34)" fg:x="376" fg:w="1"/><text x="34.7454%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="34.4954%" y="1253" width="0.0917%" height="15" fill="rgb(212,7,10)" fg:x="376" fg:w="1"/><text x="34.7454%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="34.4954%" y="1237" width="0.0917%" height="15" fill="rgb(245,89,8)" fg:x="376" fg:w="1"/><text x="34.7454%" y="1247.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="34.4954%" y="1221" width="0.0917%" height="15" fill="rgb(237,16,53)" fg:x="376" fg:w="1"/><text x="34.7454%" y="1231.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="34.4954%" y="1205" width="0.0917%" height="15" fill="rgb(250,204,30)" fg:x="376" fg:w="1"/><text x="34.7454%" y="1215.50"></text></g><g><title>__rust_probestack (3 samples, 0.28%)</title><rect x="34.5872%" y="1509" width="0.2752%" height="15" fill="rgb(208,77,27)" fg:x="377" fg:w="3"/><text x="34.8372%" y="1519.50"></text></g><g><title>std::sync::poison::Flag::done (4 samples, 0.37%)</title><rect x="35.1376%" y="1365" width="0.3670%" height="15" fill="rgb(250,204,28)" fg:x="383" fg:w="4"/><text x="35.3876%" y="1375.50"></text></g><g><title>std::thread::panicking (4 samples, 0.37%)</title><rect x="35.1376%" y="1349" width="0.3670%" height="15" fill="rgb(244,63,21)" fg:x="383" fg:w="4"/><text x="35.3876%" y="1359.50"></text></g><g><title>std::panicking::panicking (4 samples, 0.37%)</title><rect x="35.1376%" y="1333" width="0.3670%" height="15" fill="rgb(236,85,44)" fg:x="383" fg:w="4"/><text x="35.3876%" y="1343.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (4 samples, 0.37%)</title><rect x="35.1376%" y="1317" width="0.3670%" height="15" fill="rgb(215,98,4)" fg:x="383" fg:w="4"/><text x="35.3876%" y="1327.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (2 samples, 0.18%)</title><rect x="35.5046%" y="1333" width="0.1835%" height="15" fill="rgb(235,38,11)" fg:x="387" fg:w="2"/><text x="35.7546%" y="1343.50"></text></g><g><title>__GI___lll_lock_wake (2 samples, 0.18%)</title><rect x="35.5046%" y="1317" width="0.1835%" height="15" fill="rgb(254,186,25)" fg:x="387" fg:w="2"/><text x="35.7546%" y="1327.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="35.5046%" y="1301" width="0.1835%" height="15" fill="rgb(225,55,31)" fg:x="387" fg:w="2"/><text x="35.7546%" y="1311.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="35.5046%" y="1285" width="0.1835%" height="15" fill="rgb(211,15,21)" fg:x="387" fg:w="2"/><text x="35.7546%" y="1295.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="35.5046%" y="1269" width="0.1835%" height="15" fill="rgb(215,187,41)" fg:x="387" fg:w="2"/><text x="35.7546%" y="1279.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="35.5046%" y="1253" width="0.1835%" height="15" fill="rgb(248,69,32)" fg:x="387" fg:w="2"/><text x="35.7546%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="35.5963%" y="1237" width="0.0917%" height="15" fill="rgb(252,102,52)" fg:x="388" fg:w="1"/><text x="35.8463%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (7 samples, 0.64%)</title><rect x="35.1376%" y="1397" width="0.6422%" height="15" fill="rgb(253,140,32)" fg:x="383" fg:w="7"/><text x="35.3876%" y="1407.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.64%)</title><rect x="35.1376%" y="1381" width="0.6422%" height="15" fill="rgb(216,56,42)" fg:x="383" fg:w="7"/><text x="35.3876%" y="1391.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (3 samples, 0.28%)</title><rect x="35.5046%" y="1365" width="0.2752%" height="15" fill="rgb(216,184,14)" fg:x="387" fg:w="3"/><text x="35.7546%" y="1375.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (3 samples, 0.28%)</title><rect x="35.5046%" y="1349" width="0.2752%" height="15" fill="rgb(237,187,27)" fg:x="387" fg:w="3"/><text x="35.7546%" y="1359.50"></text></g><g><title>___pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="35.6881%" y="1333" width="0.0917%" height="15" fill="rgb(219,65,3)" fg:x="389" fg:w="1"/><text x="35.9381%" y="1343.50"></text></g><g><title>std::sync::poison::Flag::get (4 samples, 0.37%)</title><rect x="35.7798%" y="1381" width="0.3670%" height="15" fill="rgb(245,83,25)" fg:x="390" fg:w="4"/><text x="36.0298%" y="1391.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (4 samples, 0.37%)</title><rect x="35.7798%" y="1365" width="0.3670%" height="15" fill="rgb(214,205,45)" fg:x="390" fg:w="4"/><text x="36.0298%" y="1375.50"></text></g><g><title>__condvar_dec_grefs (9 samples, 0.83%)</title><rect x="36.8807%" y="1333" width="0.8257%" height="15" fill="rgb(241,20,18)" fg:x="402" fg:w="9"/><text x="37.1307%" y="1343.50"></text></g><g><title>__futex_abstimed_wait_common (11 samples, 1.01%)</title><rect x="37.7064%" y="1333" width="1.0092%" height="15" fill="rgb(232,163,23)" fg:x="411" fg:w="11"/><text x="37.9564%" y="1343.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="38.5321%" y="1317" width="0.1835%" height="15" fill="rgb(214,5,46)" fg:x="420" fg:w="2"/><text x="38.7821%" y="1327.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="38.5321%" y="1301" width="0.1835%" height="15" fill="rgb(229,78,17)" fg:x="420" fg:w="2"/><text x="38.7821%" y="1311.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="38.5321%" y="1285" width="0.1835%" height="15" fill="rgb(248,89,10)" fg:x="420" fg:w="2"/><text x="38.7821%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="38.6239%" y="1269" width="0.0917%" height="15" fill="rgb(248,54,15)" fg:x="421" fg:w="1"/><text x="38.8739%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="38.6239%" y="1253" width="0.0917%" height="15" fill="rgb(223,116,6)" fg:x="421" fg:w="1"/><text x="38.8739%" y="1263.50"></text></g><g><title>__pthread_cleanup_pop (1 samples, 0.09%)</title><rect x="38.7156%" y="1333" width="0.0917%" height="15" fill="rgb(205,125,38)" fg:x="422" fg:w="1"/><text x="38.9656%" y="1343.50"></text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park (50 samples, 4.59%)</title><rect x="35.0459%" y="1493" width="4.5872%" height="15" fill="rgb(251,78,38)" fg:x="382" fg:w="50"/><text x="35.2959%" y="1503.50">&lt;toki..</text></g><g><title>tokio::park::thread::CachedParkThread::with_current (49 samples, 4.50%)</title><rect x="35.1376%" y="1477" width="4.4954%" height="15" fill="rgb(253,78,28)" fg:x="383" fg:w="49"/><text x="35.3876%" y="1487.50">tokio..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (49 samples, 4.50%)</title><rect x="35.1376%" y="1461" width="4.4954%" height="15" fill="rgb(209,120,3)" fg:x="383" fg:w="49"/><text x="35.3876%" y="1471.50">std::..</text></g><g><title>tokio::park::thread::CachedParkThread::with_current::{{closure}} (49 samples, 4.50%)</title><rect x="35.1376%" y="1445" width="4.4954%" height="15" fill="rgb(238,229,9)" fg:x="383" fg:w="49"/><text x="35.3876%" y="1455.50">tokio..</text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park::{{closure}} (49 samples, 4.50%)</title><rect x="35.1376%" y="1429" width="4.4954%" height="15" fill="rgb(253,159,18)" fg:x="383" fg:w="49"/><text x="35.3876%" y="1439.50">&lt;toki..</text></g><g><title>tokio::park::thread::Inner::park (49 samples, 4.50%)</title><rect x="35.1376%" y="1413" width="4.4954%" height="15" fill="rgb(244,42,34)" fg:x="383" fg:w="49"/><text x="35.3876%" y="1423.50">tokio..</text></g><g><title>std::sync::condvar::Condvar::wait (42 samples, 3.85%)</title><rect x="35.7798%" y="1397" width="3.8532%" height="15" fill="rgb(224,8,7)" fg:x="390" fg:w="42"/><text x="36.0298%" y="1407.50">std:..</text></g><g><title>std::sys_common::condvar::Condvar::wait (38 samples, 3.49%)</title><rect x="36.1468%" y="1381" width="3.4862%" height="15" fill="rgb(210,201,45)" fg:x="394" fg:w="38"/><text x="36.3968%" y="1391.50">std..</text></g><g><title>std::sys::unix::condvar::Condvar::wait (38 samples, 3.49%)</title><rect x="36.1468%" y="1365" width="3.4862%" height="15" fill="rgb(252,185,21)" fg:x="394" fg:w="38"/><text x="36.3968%" y="1375.50">std..</text></g><g><title>__GI___pthread_cond_wait (38 samples, 3.49%)</title><rect x="36.1468%" y="1349" width="3.4862%" height="15" fill="rgb(223,131,1)" fg:x="394" fg:w="38"/><text x="36.3968%" y="1359.50">__G..</text></g><g><title>__pthread_mutex_cond_lock (9 samples, 0.83%)</title><rect x="38.8073%" y="1333" width="0.8257%" height="15" fill="rgb(245,141,16)" fg:x="423" fg:w="9"/><text x="39.0573%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="39.5413%" y="1317" width="0.0917%" height="15" fill="rgb(229,55,45)" fg:x="431" fg:w="1"/><text x="39.7913%" y="1327.50"></text></g><g><title>tokio::coop::Budget::initial (3 samples, 0.28%)</title><rect x="39.6330%" y="1477" width="0.2752%" height="15" fill="rgb(208,92,15)" fg:x="432" fg:w="3"/><text x="39.8830%" y="1487.50"></text></g><g><title>[unknown] (437 samples, 40.09%)</title><rect x="0.2752%" y="1525" width="40.0917%" height="15" fill="rgb(234,185,47)" fg:x="3" fg:w="437"/><text x="0.5252%" y="1535.50">[unknown]</text></g><g><title>tokio::park::thread::CachedParkThread::block_on (60 samples, 5.50%)</title><rect x="34.8624%" y="1509" width="5.5046%" height="15" fill="rgb(253,104,50)" fg:x="380" fg:w="60"/><text x="35.1124%" y="1519.50">tokio::..</text></g><g><title>tokio::coop::budget (8 samples, 0.73%)</title><rect x="39.6330%" y="1493" width="0.7339%" height="15" fill="rgb(205,70,7)" fg:x="432" fg:w="8"/><text x="39.8830%" y="1503.50"></text></g><g><title>tokio::coop::with_budget (5 samples, 0.46%)</title><rect x="39.9083%" y="1477" width="0.4587%" height="15" fill="rgb(240,178,43)" fg:x="435" fg:w="5"/><text x="40.1583%" y="1487.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.46%)</title><rect x="39.9083%" y="1461" width="0.4587%" height="15" fill="rgb(214,112,2)" fg:x="435" fg:w="5"/><text x="40.1583%" y="1471.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.46%)</title><rect x="39.9083%" y="1445" width="0.4587%" height="15" fill="rgb(206,46,17)" fg:x="435" fg:w="5"/><text x="40.1583%" y="1455.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (5 samples, 0.46%)</title><rect x="39.9083%" y="1429" width="0.4587%" height="15" fill="rgb(225,220,16)" fg:x="435" fg:w="5"/><text x="40.1583%" y="1439.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on::{{closure}} (5 samples, 0.46%)</title><rect x="39.9083%" y="1413" width="0.4587%" height="15" fill="rgb(238,65,40)" fg:x="435" fg:w="5"/><text x="40.1583%" y="1423.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.46%)</title><rect x="39.9083%" y="1397" width="0.4587%" height="15" fill="rgb(230,151,21)" fg:x="435" fg:w="5"/><text x="40.1583%" y="1407.50"></text></g><g><title>__rust_probestack (4 samples, 0.37%)</title><rect x="40.0000%" y="1381" width="0.3670%" height="15" fill="rgb(218,58,49)" fg:x="436" fg:w="4"/><text x="40.2500%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="41.1927%" y="1509" width="0.0917%" height="15" fill="rgb(219,179,14)" fg:x="449" fg:w="1"/><text x="41.4427%" y="1519.50"></text></g><g><title>[unknown] (25 samples, 2.29%)</title><rect x="42.3853%" y="1493" width="2.2936%" height="15" fill="rgb(223,72,1)" fg:x="462" fg:w="25"/><text x="42.6353%" y="1503.50">[..</text></g><g><title>[unknown] (23 samples, 2.11%)</title><rect x="42.5688%" y="1477" width="2.1101%" height="15" fill="rgb(238,126,10)" fg:x="464" fg:w="23"/><text x="42.8188%" y="1487.50">[..</text></g><g><title>[unknown] (21 samples, 1.93%)</title><rect x="42.7523%" y="1461" width="1.9266%" height="15" fill="rgb(224,206,38)" fg:x="466" fg:w="21"/><text x="43.0023%" y="1471.50">[..</text></g><g><title>[unknown] (11 samples, 1.01%)</title><rect x="43.6697%" y="1445" width="1.0092%" height="15" fill="rgb(212,201,54)" fg:x="476" fg:w="11"/><text x="43.9197%" y="1455.50"></text></g><g><title>[unknown] (3 samples, 0.28%)</title><rect x="44.4037%" y="1429" width="0.2752%" height="15" fill="rgb(218,154,48)" fg:x="484" fg:w="3"/><text x="44.6537%" y="1439.50"></text></g><g><title>__GI___ctype_init (10 samples, 0.92%)</title><rect x="44.6789%" y="1493" width="0.9174%" height="15" fill="rgb(232,93,24)" fg:x="487" fg:w="10"/><text x="44.9289%" y="1503.50"></text></g><g><title>__GI__setjmp (6 samples, 0.55%)</title><rect x="45.5963%" y="1493" width="0.5505%" height="15" fill="rgb(245,30,21)" fg:x="497" fg:w="6"/><text x="45.8463%" y="1503.50"></text></g><g><title>__sigjmp_save (2 samples, 0.18%)</title><rect x="46.1468%" y="1493" width="0.1835%" height="15" fill="rgb(242,148,29)" fg:x="503" fg:w="2"/><text x="46.3968%" y="1503.50"></text></g><g><title>__prctl (1 samples, 0.09%)</title><rect x="46.4220%" y="1413" width="0.0917%" height="15" fill="rgb(244,153,54)" fg:x="506" fg:w="1"/><text x="46.6720%" y="1423.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.18%)</title><rect x="46.4220%" y="1477" width="0.1835%" height="15" fill="rgb(252,87,22)" fg:x="506" fg:w="2"/><text x="46.6720%" y="1487.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.18%)</title><rect x="46.4220%" y="1461" width="0.1835%" height="15" fill="rgb(210,51,29)" fg:x="506" fg:w="2"/><text x="46.6720%" y="1471.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.18%)</title><rect x="46.4220%" y="1445" width="0.1835%" height="15" fill="rgb(242,136,47)" fg:x="506" fg:w="2"/><text x="46.6720%" y="1455.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (2 samples, 0.18%)</title><rect x="46.4220%" y="1429" width="0.1835%" height="15" fill="rgb(238,68,4)" fg:x="506" fg:w="2"/><text x="46.6720%" y="1439.50"></text></g><g><title>std::thread::Thread::cname (1 samples, 0.09%)</title><rect x="46.5138%" y="1413" width="0.0917%" height="15" fill="rgb(242,161,30)" fg:x="507" fg:w="1"/><text x="46.7638%" y="1423.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_deref (1 samples, 0.09%)</title><rect x="46.5138%" y="1397" width="0.0917%" height="15" fill="rgb(218,58,44)" fg:x="507" fg:w="1"/><text x="46.7638%" y="1407.50"></text></g><g><title>__GI___sigaltstack (4 samples, 0.37%)</title><rect x="46.6055%" y="1445" width="0.3670%" height="15" fill="rgb(252,125,32)" fg:x="508" fg:w="4"/><text x="46.8555%" y="1455.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="46.7890%" y="1429" width="0.1835%" height="15" fill="rgb(219,178,0)" fg:x="510" fg:w="2"/><text x="47.0390%" y="1439.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="46.7890%" y="1413" width="0.1835%" height="15" fill="rgb(213,152,7)" fg:x="510" fg:w="2"/><text x="47.0390%" y="1423.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="46.7890%" y="1397" width="0.1835%" height="15" fill="rgb(249,109,34)" fg:x="510" fg:w="2"/><text x="47.0390%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="46.8807%" y="1381" width="0.0917%" height="15" fill="rgb(232,96,21)" fg:x="511" fg:w="1"/><text x="47.1307%" y="1391.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (4 samples, 0.37%)</title><rect x="46.9725%" y="1445" width="0.3670%" height="15" fill="rgb(228,27,39)" fg:x="512" fg:w="4"/><text x="47.2225%" y="1455.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="47.2477%" y="1429" width="0.0917%" height="15" fill="rgb(211,182,52)" fg:x="515" fg:w="1"/><text x="47.4977%" y="1439.50"></text></g><g><title>__GI___mmap64 (3 samples, 0.28%)</title><rect x="47.4312%" y="1413" width="0.2752%" height="15" fill="rgb(234,178,38)" fg:x="517" fg:w="3"/><text x="47.6812%" y="1423.50"></text></g><g><title>[unknown] (3 samples, 0.28%)</title><rect x="47.4312%" y="1397" width="0.2752%" height="15" fill="rgb(221,111,3)" fg:x="517" fg:w="3"/><text x="47.6812%" y="1407.50"></text></g><g><title>[unknown] (3 samples, 0.28%)</title><rect x="47.4312%" y="1381" width="0.2752%" height="15" fill="rgb(228,175,21)" fg:x="517" fg:w="3"/><text x="47.6812%" y="1391.50"></text></g><g><title>[unknown] (3 samples, 0.28%)</title><rect x="47.4312%" y="1365" width="0.2752%" height="15" fill="rgb(228,174,43)" fg:x="517" fg:w="3"/><text x="47.6812%" y="1375.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="47.5229%" y="1349" width="0.1835%" height="15" fill="rgb(211,191,0)" fg:x="518" fg:w="2"/><text x="47.7729%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="47.9817%" y="1381" width="0.0917%" height="15" fill="rgb(253,117,3)" fg:x="523" fg:w="1"/><text x="48.2317%" y="1391.50"></text></g><g><title>__GI___clone (86 samples, 7.89%)</title><rect x="40.3670%" y="1525" width="7.8899%" height="15" fill="rgb(241,127,19)" fg:x="440" fg:w="86"/><text x="40.6170%" y="1535.50">__GI___clone</text></g><g><title>start_thread (76 samples, 6.97%)</title><rect x="41.2844%" y="1509" width="6.9725%" height="15" fill="rgb(218,103,12)" fg:x="450" fg:w="76"/><text x="41.5344%" y="1519.50">start_thr..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (21 samples, 1.93%)</title><rect x="46.3303%" y="1493" width="1.9266%" height="15" fill="rgb(236,214,43)" fg:x="505" fg:w="21"/><text x="46.5803%" y="1503.50">s..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (18 samples, 1.65%)</title><rect x="46.6055%" y="1477" width="1.6514%" height="15" fill="rgb(244,144,19)" fg:x="508" fg:w="18"/><text x="46.8555%" y="1487.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (18 samples, 1.65%)</title><rect x="46.6055%" y="1461" width="1.6514%" height="15" fill="rgb(246,188,10)" fg:x="508" fg:w="18"/><text x="46.8555%" y="1471.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (10 samples, 0.92%)</title><rect x="47.3394%" y="1445" width="0.9174%" height="15" fill="rgb(212,193,33)" fg:x="516" fg:w="10"/><text x="47.5894%" y="1455.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (10 samples, 0.92%)</title><rect x="47.3394%" y="1429" width="0.9174%" height="15" fill="rgb(241,51,29)" fg:x="516" fg:w="10"/><text x="47.5894%" y="1439.50"></text></g><g><title>std::sys::unix::os::page_size (6 samples, 0.55%)</title><rect x="47.7064%" y="1413" width="0.5505%" height="15" fill="rgb(211,58,19)" fg:x="520" fg:w="6"/><text x="47.9564%" y="1423.50"></text></g><g><title>__GI___sysconf (6 samples, 0.55%)</title><rect x="47.7064%" y="1397" width="0.5505%" height="15" fill="rgb(229,111,26)" fg:x="520" fg:w="6"/><text x="47.9564%" y="1407.50"></text></g><g><title>__GI___getpagesize (2 samples, 0.18%)</title><rect x="48.0734%" y="1381" width="0.1835%" height="15" fill="rgb(213,115,40)" fg:x="524" fg:w="2"/><text x="48.3234%" y="1391.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="48.3486%" y="1509" width="0.1835%" height="15" fill="rgb(209,56,44)" fg:x="527" fg:w="2"/><text x="48.5986%" y="1519.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="48.6239%" y="1493" width="0.1835%" height="15" fill="rgb(230,108,32)" fg:x="530" fg:w="2"/><text x="48.8739%" y="1503.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="48.6239%" y="1477" width="0.1835%" height="15" fill="rgb(216,165,31)" fg:x="530" fg:w="2"/><text x="48.8739%" y="1487.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="48.6239%" y="1461" width="0.1835%" height="15" fill="rgb(218,122,21)" fg:x="530" fg:w="2"/><text x="48.8739%" y="1471.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="48.6239%" y="1445" width="0.1835%" height="15" fill="rgb(223,224,47)" fg:x="530" fg:w="2"/><text x="48.8739%" y="1455.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="48.6239%" y="1429" width="0.1835%" height="15" fill="rgb(238,102,44)" fg:x="530" fg:w="2"/><text x="48.8739%" y="1439.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="48.6239%" y="1413" width="0.1835%" height="15" fill="rgb(236,46,40)" fg:x="530" fg:w="2"/><text x="48.8739%" y="1423.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="48.6239%" y="1397" width="0.1835%" height="15" fill="rgb(247,202,50)" fg:x="530" fg:w="2"/><text x="48.8739%" y="1407.50"></text></g><g><title>__GI___tunables_init (1 samples, 0.09%)</title><rect x="48.8073%" y="1477" width="0.0917%" height="15" fill="rgb(209,99,20)" fg:x="532" fg:w="1"/><text x="49.0573%" y="1487.50"></text></g><g><title>backend (534 samples, 48.99%)</title><rect x="0.0000%" y="1541" width="48.9908%" height="15" fill="rgb(252,27,34)" fg:x="0" fg:w="534"/><text x="0.2500%" y="1551.50">backend</text></g><g><title>_start (8 samples, 0.73%)</title><rect x="48.2569%" y="1525" width="0.7339%" height="15" fill="rgb(215,206,23)" fg:x="526" fg:w="8"/><text x="48.5069%" y="1535.50"></text></g><g><title>_dl_start (5 samples, 0.46%)</title><rect x="48.5321%" y="1509" width="0.4587%" height="15" fill="rgb(212,135,36)" fg:x="529" fg:w="5"/><text x="48.7821%" y="1519.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.18%)</title><rect x="48.8073%" y="1493" width="0.1835%" height="15" fill="rgb(240,189,1)" fg:x="532" fg:w="2"/><text x="49.0573%" y="1503.50"></text></g><g><title>dl_main (1 samples, 0.09%)</title><rect x="48.8991%" y="1477" width="0.0917%" height="15" fill="rgb(242,56,20)" fg:x="533" fg:w="1"/><text x="49.1491%" y="1487.50"></text></g><g><title>_dl_receive_error (1 samples, 0.09%)</title><rect x="48.8991%" y="1461" width="0.0917%" height="15" fill="rgb(247,132,33)" fg:x="533" fg:w="1"/><text x="49.1491%" y="1471.50"></text></g><g><title>version_check_doit (1 samples, 0.09%)</title><rect x="48.8991%" y="1445" width="0.0917%" height="15" fill="rgb(208,149,11)" fg:x="533" fg:w="1"/><text x="49.1491%" y="1455.50"></text></g><g><title>_dl_check_all_versions (1 samples, 0.09%)</title><rect x="48.8991%" y="1429" width="0.0917%" height="15" fill="rgb(211,33,11)" fg:x="533" fg:w="1"/><text x="49.1491%" y="1439.50"></text></g><g><title>_dl_check_map_versions (1 samples, 0.09%)</title><rect x="48.8991%" y="1413" width="0.0917%" height="15" fill="rgb(221,29,38)" fg:x="533" fg:w="1"/><text x="49.1491%" y="1423.50"></text></g><g><title>[[heap]] (1 samples, 0.09%)</title><rect x="48.9908%" y="1525" width="0.0917%" height="15" fill="rgb(206,182,49)" fg:x="534" fg:w="1"/><text x="49.2408%" y="1535.50"></text></g><g><title>__pthread_getaffinity_alias (1 samples, 0.09%)</title><rect x="48.9908%" y="1509" width="0.0917%" height="15" fill="rgb(216,140,1)" fg:x="534" fg:w="1"/><text x="49.2408%" y="1519.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="48.9908%" y="1493" width="0.0917%" height="15" fill="rgb(232,57,40)" fg:x="534" fg:w="1"/><text x="49.2408%" y="1503.50"></text></g><g><title>[anon] (1 samples, 0.09%)</title><rect x="49.0826%" y="1525" width="0.0917%" height="15" fill="rgb(224,186,18)" fg:x="535" fg:w="1"/><text x="49.3326%" y="1535.50"></text></g><g><title>EVP_CIPHER_CTX_test_flags (1 samples, 0.09%)</title><rect x="49.0826%" y="1509" width="0.0917%" height="15" fill="rgb(215,121,11)" fg:x="535" fg:w="1"/><text x="49.3326%" y="1519.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="49.0826%" y="1493" width="0.0917%" height="15" fill="rgb(245,147,10)" fg:x="535" fg:w="1"/><text x="49.3326%" y="1503.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="49.0826%" y="1477" width="0.0917%" height="15" fill="rgb(238,153,13)" fg:x="535" fg:w="1"/><text x="49.3326%" y="1487.50"></text></g><g><title>BIO_write (1 samples, 0.09%)</title><rect x="49.1743%" y="1173" width="0.0917%" height="15" fill="rgb(233,108,0)" fg:x="536" fg:w="1"/><text x="49.4243%" y="1183.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="49.1743%" y="1157" width="0.0917%" height="15" fill="rgb(212,157,17)" fg:x="536" fg:w="1"/><text x="49.4243%" y="1167.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="49.1743%" y="1141" width="0.0917%" height="15" fill="rgb(225,213,38)" fg:x="536" fg:w="1"/><text x="49.4243%" y="1151.50"></text></g><g><title>openssl::ssl::bio::bwrite (1 samples, 0.09%)</title><rect x="49.1743%" y="1125" width="0.0917%" height="15" fill="rgb(248,16,11)" fg:x="536" fg:w="1"/><text x="49.4243%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.09%)</title><rect x="49.1743%" y="1109" width="0.0917%" height="15" fill="rgb(241,33,4)" fg:x="536" fg:w="1"/><text x="49.4243%" y="1119.50"></text></g><g><title>std::panicking::try (1 samples, 0.09%)</title><rect x="49.1743%" y="1093" width="0.0917%" height="15" fill="rgb(222,26,43)" fg:x="536" fg:w="1"/><text x="49.4243%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.09%)</title><rect x="49.1743%" y="1077" width="0.0917%" height="15" fill="rgb(243,29,36)" fg:x="536" fg:w="1"/><text x="49.4243%" y="1087.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.09%)</title><rect x="49.1743%" y="1061" width="0.0917%" height="15" fill="rgb(241,9,27)" fg:x="536" fg:w="1"/><text x="49.4243%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.09%)</title><rect x="49.1743%" y="1045" width="0.0917%" height="15" fill="rgb(205,117,26)" fg:x="536" fg:w="1"/><text x="49.4243%" y="1055.50"></text></g><g><title>openssl::ssl::bio::bwrite::{{closure}} (1 samples, 0.09%)</title><rect x="49.1743%" y="1029" width="0.0917%" height="15" fill="rgb(209,80,39)" fg:x="536" fg:w="1"/><text x="49.4243%" y="1039.50"></text></g><g><title>&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Write&gt;::write (1 samples, 0.09%)</title><rect x="49.1743%" y="1013" width="0.0917%" height="15" fill="rgb(239,155,6)" fg:x="536" fg:w="1"/><text x="49.4243%" y="1023.50"></text></g><g><title>tokio_native_tls::AllowStd&lt;S&gt;::with_context (1 samples, 0.09%)</title><rect x="49.1743%" y="997" width="0.0917%" height="15" fill="rgb(212,104,12)" fg:x="536" fg:w="1"/><text x="49.4243%" y="1007.50"></text></g><g><title>&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Write&gt;::write::{{closure}} (1 samples, 0.09%)</title><rect x="49.1743%" y="981" width="0.0917%" height="15" fill="rgb(234,204,3)" fg:x="536" fg:w="1"/><text x="49.4243%" y="991.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.09%)</title><rect x="49.1743%" y="965" width="0.0917%" height="15" fill="rgb(251,218,7)" fg:x="536" fg:w="1"/><text x="49.4243%" y="975.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (1 samples, 0.09%)</title><rect x="49.1743%" y="949" width="0.0917%" height="15" fill="rgb(221,81,32)" fg:x="536" fg:w="1"/><text x="49.4243%" y="959.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1 samples, 0.09%)</title><rect x="49.1743%" y="933" width="0.0917%" height="15" fill="rgb(214,152,26)" fg:x="536" fg:w="1"/><text x="49.4243%" y="943.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_write_io (1 samples, 0.09%)</title><rect x="49.1743%" y="917" width="0.0917%" height="15" fill="rgb(223,22,3)" fg:x="536" fg:w="1"/><text x="49.4243%" y="927.50"></text></g><g><title>CRYPTO_zalloc (1 samples, 0.09%)</title><rect x="49.2661%" y="1173" width="0.0917%" height="15" fill="rgb(207,174,7)" fg:x="537" fg:w="1"/><text x="49.5161%" y="1183.50"></text></g><g><title>EVP_CIPHER_CTX_cipher (1 samples, 0.09%)</title><rect x="49.3578%" y="1157" width="0.0917%" height="15" fill="rgb(224,19,52)" fg:x="538" fg:w="1"/><text x="49.6078%" y="1167.50"></text></g><g><title>EVP_CipherInit_ex (3 samples, 0.28%)</title><rect x="49.3578%" y="1173" width="0.2752%" height="15" fill="rgb(228,24,14)" fg:x="538" fg:w="3"/><text x="49.6078%" y="1183.50"></text></g><g><title>[libcrypto.so.1.1] (2 samples, 0.18%)</title><rect x="49.4495%" y="1157" width="0.1835%" height="15" fill="rgb(230,153,43)" fg:x="539" fg:w="2"/><text x="49.6995%" y="1167.50"></text></g><g><title>CRYPTO_gcm128_setiv (2 samples, 0.18%)</title><rect x="49.4495%" y="1141" width="0.1835%" height="15" fill="rgb(231,106,12)" fg:x="539" fg:w="2"/><text x="49.6995%" y="1151.50"></text></g><g><title>[libcrypto.so.1.1] (2 samples, 0.18%)</title><rect x="49.4495%" y="1125" width="0.1835%" height="15" fill="rgb(215,92,2)" fg:x="539" fg:w="2"/><text x="49.6995%" y="1135.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (9 samples, 0.83%)</title><rect x="49.1743%" y="1509" width="0.8257%" height="15" fill="rgb(249,143,25)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1519.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (9 samples, 0.83%)</title><rect x="49.1743%" y="1493" width="0.8257%" height="15" fill="rgb(252,7,35)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1503.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (9 samples, 0.83%)</title><rect x="49.1743%" y="1477" width="0.8257%" height="15" fill="rgb(216,69,40)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1487.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_flush (9 samples, 0.83%)</title><rect x="49.1743%" y="1461" width="0.8257%" height="15" fill="rgb(240,36,33)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1471.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (9 samples, 0.83%)</title><rect x="49.1743%" y="1445" width="0.8257%" height="15" fill="rgb(231,128,14)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1455.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (9 samples, 0.83%)</title><rect x="49.1743%" y="1429" width="0.8257%" height="15" fill="rgb(245,143,14)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1439.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush_flattened (9 samples, 0.83%)</title><rect x="49.1743%" y="1413" width="0.8257%" height="15" fill="rgb(222,130,28)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1423.50"></text></g><g><title>&lt;reqwest::connect::Conn as tokio::io::async_write::AsyncWrite&gt;::poll_write (9 samples, 0.83%)</title><rect x="49.1743%" y="1397" width="0.8257%" height="15" fill="rgb(212,10,48)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1407.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (9 samples, 0.83%)</title><rect x="49.1743%" y="1381" width="0.8257%" height="15" fill="rgb(254,118,45)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1391.50"></text></g><g><title>&lt;reqwest::connect::native_tls_conn::NativeTlsConn&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (9 samples, 0.83%)</title><rect x="49.1743%" y="1365" width="0.8257%" height="15" fill="rgb(228,6,45)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1375.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (9 samples, 0.83%)</title><rect x="49.1743%" y="1349" width="0.8257%" height="15" fill="rgb(241,18,35)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1359.50"></text></g><g><title>tokio_native_tls::TlsStream&lt;S&gt;::with_context (9 samples, 0.83%)</title><rect x="49.1743%" y="1333" width="0.8257%" height="15" fill="rgb(227,214,53)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1343.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write::{{closure}} (9 samples, 0.83%)</title><rect x="49.1743%" y="1317" width="0.8257%" height="15" fill="rgb(224,107,51)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1327.50"></text></g><g><title>&lt;native_tls::TlsStream&lt;S&gt; as std::io::Write&gt;::write (9 samples, 0.83%)</title><rect x="49.1743%" y="1301" width="0.8257%" height="15" fill="rgb(248,60,28)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1311.50"></text></g><g><title>&lt;native_tls::imp::TlsStream&lt;S&gt; as std::io::Write&gt;::write (9 samples, 0.83%)</title><rect x="49.1743%" y="1285" width="0.8257%" height="15" fill="rgb(249,101,23)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1295.50"></text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Write&gt;::write (9 samples, 0.83%)</title><rect x="49.1743%" y="1269" width="0.8257%" height="15" fill="rgb(228,51,19)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1279.50"></text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::ssl_write (9 samples, 0.83%)</title><rect x="49.1743%" y="1253" width="0.8257%" height="15" fill="rgb(213,20,6)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1263.50"></text></g><g><title>SSL_write (9 samples, 0.83%)</title><rect x="49.1743%" y="1237" width="0.8257%" height="15" fill="rgb(212,124,10)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1247.50"></text></g><g><title>[libssl.so.1.1] (9 samples, 0.83%)</title><rect x="49.1743%" y="1221" width="0.8257%" height="15" fill="rgb(248,3,40)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1231.50"></text></g><g><title>[libssl.so.1.1] (9 samples, 0.83%)</title><rect x="49.1743%" y="1205" width="0.8257%" height="15" fill="rgb(223,178,23)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1215.50"></text></g><g><title>[libssl.so.1.1] (9 samples, 0.83%)</title><rect x="49.1743%" y="1189" width="0.8257%" height="15" fill="rgb(240,132,45)" fg:x="536" fg:w="9"/><text x="49.4243%" y="1199.50"></text></g><g><title>[libcrypto.so.1.1] (4 samples, 0.37%)</title><rect x="49.6330%" y="1173" width="0.3670%" height="15" fill="rgb(245,164,36)" fg:x="541" fg:w="4"/><text x="49.8830%" y="1183.50"></text></g><g><title>[libcrypto.so.1.1] (2 samples, 0.18%)</title><rect x="49.8165%" y="1157" width="0.1835%" height="15" fill="rgb(231,188,53)" fg:x="543" fg:w="2"/><text x="50.0665%" y="1167.50"></text></g><g><title>CRYPTO_gcm128_encrypt_ctr32 (1 samples, 0.09%)</title><rect x="49.9083%" y="1141" width="0.0917%" height="15" fill="rgb(237,198,39)" fg:x="544" fg:w="1"/><text x="50.1583%" y="1151.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="49.9083%" y="1125" width="0.0917%" height="15" fill="rgb(223,120,35)" fg:x="544" fg:w="1"/><text x="50.1583%" y="1135.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="49.9083%" y="1109" width="0.0917%" height="15" fill="rgb(253,107,49)" fg:x="544" fg:w="1"/><text x="50.1583%" y="1119.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append (2 samples, 0.18%)</title><rect x="50.0000%" y="1477" width="0.1835%" height="15" fill="rgb(216,44,31)" fg:x="545" fg:w="2"/><text x="50.2500%" y="1487.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::append (2 samples, 0.18%)</title><rect x="50.0000%" y="1461" width="0.1835%" height="15" fill="rgb(253,87,21)" fg:x="545" fg:w="2"/><text x="50.2500%" y="1471.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append2 (2 samples, 0.18%)</title><rect x="50.0000%" y="1445" width="0.1835%" height="15" fill="rgb(226,18,2)" fg:x="545" fg:w="2"/><text x="50.2500%" y="1455.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert_entry (2 samples, 0.18%)</title><rect x="50.0000%" y="1429" width="0.1835%" height="15" fill="rgb(216,8,46)" fg:x="545" fg:w="2"/><text x="50.2500%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.18%)</title><rect x="50.0000%" y="1413" width="0.1835%" height="15" fill="rgb(226,140,39)" fg:x="545" fg:w="2"/><text x="50.2500%" y="1423.50"></text></g><g><title>core::ptr::write (2 samples, 0.18%)</title><rect x="50.0000%" y="1397" width="0.1835%" height="15" fill="rgb(221,194,54)" fg:x="545" fg:w="2"/><text x="50.2500%" y="1407.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (4 samples, 0.37%)</title><rect x="50.0000%" y="1509" width="0.3670%" height="15" fill="rgb(213,92,11)" fg:x="545" fg:w="4"/><text x="50.2500%" y="1519.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (4 samples, 0.37%)</title><rect x="50.0000%" y="1493" width="0.3670%" height="15" fill="rgb(229,162,46)" fg:x="545" fg:w="4"/><text x="50.2500%" y="1503.50"></text></g><g><title>httparse::ParserConfig::parse_response_with_uninit_headers (2 samples, 0.18%)</title><rect x="50.1835%" y="1477" width="0.1835%" height="15" fill="rgb(214,111,36)" fg:x="547" fg:w="2"/><text x="50.4335%" y="1487.50"></text></g><g><title>httparse::Response::parse_with_config_and_uninit_headers (2 samples, 0.18%)</title><rect x="50.1835%" y="1461" width="0.1835%" height="15" fill="rgb(207,6,21)" fg:x="547" fg:w="2"/><text x="50.4335%" y="1471.50"></text></g><g><title>httparse::parse_headers_iter_uninit (2 samples, 0.18%)</title><rect x="50.1835%" y="1445" width="0.1835%" height="15" fill="rgb(213,127,38)" fg:x="547" fg:w="2"/><text x="50.4335%" y="1455.50"></text></g><g><title>httparse::simd::runtime::match_header_value_vectored (1 samples, 0.09%)</title><rect x="50.2752%" y="1429" width="0.0917%" height="15" fill="rgb(238,118,32)" fg:x="548" fg:w="1"/><text x="50.5252%" y="1439.50"></text></g><g><title>httparse::simd::avx2::match_header_value_batch_32 (1 samples, 0.09%)</title><rect x="50.2752%" y="1413" width="0.0917%" height="15" fill="rgb(240,139,39)" fg:x="548" fg:w="1"/><text x="50.5252%" y="1423.50"></text></g><g><title>httparse::simd::avx2::match_header_value_char_32_avx (1 samples, 0.09%)</title><rect x="50.2752%" y="1397" width="0.0917%" height="15" fill="rgb(235,10,37)" fg:x="548" fg:w="1"/><text x="50.5252%" y="1407.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_cmpeq_epi8 (1 samples, 0.09%)</title><rect x="50.2752%" y="1381" width="0.0917%" height="15" fill="rgb(249,171,38)" fg:x="548" fg:w="1"/><text x="50.5252%" y="1391.50"></text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::ssl_read (1 samples, 0.09%)</title><rect x="50.3670%" y="229" width="0.0917%" height="15" fill="rgb(242,144,32)" fg:x="549" fg:w="1"/><text x="50.6170%" y="239.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (2 samples, 0.18%)</title><rect x="50.3670%" y="421" width="0.1835%" height="15" fill="rgb(217,117,21)" fg:x="549" fg:w="2"/><text x="50.6170%" y="431.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::require_empty_read (2 samples, 0.18%)</title><rect x="50.3670%" y="405" width="0.1835%" height="15" fill="rgb(249,87,1)" fg:x="549" fg:w="2"/><text x="50.6170%" y="415.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (2 samples, 0.18%)</title><rect x="50.3670%" y="389" width="0.1835%" height="15" fill="rgb(248,196,48)" fg:x="549" fg:w="2"/><text x="50.6170%" y="399.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (2 samples, 0.18%)</title><rect x="50.3670%" y="373" width="0.1835%" height="15" fill="rgb(251,206,33)" fg:x="549" fg:w="2"/><text x="50.6170%" y="383.50"></text></g><g><title>&lt;reqwest::connect::Conn as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 0.18%)</title><rect x="50.3670%" y="357" width="0.1835%" height="15" fill="rgb(232,141,28)" fg:x="549" fg:w="2"/><text x="50.6170%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 0.18%)</title><rect x="50.3670%" y="341" width="0.1835%" height="15" fill="rgb(209,167,14)" fg:x="549" fg:w="2"/><text x="50.6170%" y="351.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 0.18%)</title><rect x="50.3670%" y="325" width="0.1835%" height="15" fill="rgb(225,11,50)" fg:x="549" fg:w="2"/><text x="50.6170%" y="335.50"></text></g><g><title>tokio_native_tls::TlsStream&lt;S&gt;::with_context (2 samples, 0.18%)</title><rect x="50.3670%" y="309" width="0.1835%" height="15" fill="rgb(209,50,20)" fg:x="549" fg:w="2"/><text x="50.6170%" y="319.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::{{closure}} (2 samples, 0.18%)</title><rect x="50.3670%" y="293" width="0.1835%" height="15" fill="rgb(212,17,46)" fg:x="549" fg:w="2"/><text x="50.6170%" y="303.50"></text></g><g><title>&lt;native_tls::TlsStream&lt;S&gt; as std::io::Read&gt;::read (2 samples, 0.18%)</title><rect x="50.3670%" y="277" width="0.1835%" height="15" fill="rgb(216,101,39)" fg:x="549" fg:w="2"/><text x="50.6170%" y="287.50"></text></g><g><title>&lt;native_tls::imp::TlsStream&lt;S&gt; as std::io::Read&gt;::read (2 samples, 0.18%)</title><rect x="50.3670%" y="261" width="0.1835%" height="15" fill="rgb(212,228,48)" fg:x="549" fg:w="2"/><text x="50.6170%" y="271.50"></text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Read&gt;::read (2 samples, 0.18%)</title><rect x="50.3670%" y="245" width="0.1835%" height="15" fill="rgb(250,6,50)" fg:x="549" fg:w="2"/><text x="50.6170%" y="255.50"></text></g><g><title>openssl::ssl::error::Error::io_error (1 samples, 0.09%)</title><rect x="50.4587%" y="229" width="0.0917%" height="15" fill="rgb(250,160,48)" fg:x="550" fg:w="1"/><text x="50.7087%" y="239.50"></text></g><g><title>start_thread (3 samples, 0.28%)</title><rect x="50.3670%" y="1509" width="0.2752%" height="15" fill="rgb(244,216,33)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1519.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3 samples, 0.28%)</title><rect x="50.3670%" y="1493" width="0.2752%" height="15" fill="rgb(207,157,5)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1503.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.28%)</title><rect x="50.3670%" y="1477" width="0.2752%" height="15" fill="rgb(228,199,8)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1487.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.28%)</title><rect x="50.3670%" y="1461" width="0.2752%" height="15" fill="rgb(227,80,20)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1471.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 0.28%)</title><rect x="50.3670%" y="1445" width="0.2752%" height="15" fill="rgb(222,9,33)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1455.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (3 samples, 0.28%)</title><rect x="50.3670%" y="1429" width="0.2752%" height="15" fill="rgb(239,44,28)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1439.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.28%)</title><rect x="50.3670%" y="1413" width="0.2752%" height="15" fill="rgb(249,187,43)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1423.50"></text></g><g><title>std::panicking::try (3 samples, 0.28%)</title><rect x="50.3670%" y="1397" width="0.2752%" height="15" fill="rgb(216,141,28)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1407.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.28%)</title><rect x="50.3670%" y="1381" width="0.2752%" height="15" fill="rgb(230,154,53)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1391.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.28%)</title><rect x="50.3670%" y="1365" width="0.2752%" height="15" fill="rgb(227,82,4)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1375.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (3 samples, 0.28%)</title><rect x="50.3670%" y="1349" width="0.2752%" height="15" fill="rgb(220,107,16)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1359.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.28%)</title><rect x="50.3670%" y="1333" width="0.2752%" height="15" fill="rgb(207,187,2)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1343.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (3 samples, 0.28%)</title><rect x="50.3670%" y="1317" width="0.2752%" height="15" fill="rgb(210,162,52)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1327.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (3 samples, 0.28%)</title><rect x="50.3670%" y="1301" width="0.2752%" height="15" fill="rgb(217,216,49)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1311.50"></text></g><g><title>tokio::runtime::blocking::pool::Task::run (3 samples, 0.28%)</title><rect x="50.3670%" y="1285" width="0.2752%" height="15" fill="rgb(218,146,49)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1295.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (3 samples, 0.28%)</title><rect x="50.3670%" y="1269" width="0.2752%" height="15" fill="rgb(216,55,40)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1279.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (3 samples, 0.28%)</title><rect x="50.3670%" y="1253" width="0.2752%" height="15" fill="rgb(208,196,21)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1263.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3 samples, 0.28%)</title><rect x="50.3670%" y="1237" width="0.2752%" height="15" fill="rgb(242,117,42)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1247.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (3 samples, 0.28%)</title><rect x="50.3670%" y="1221" width="0.2752%" height="15" fill="rgb(210,11,23)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1231.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (3 samples, 0.28%)</title><rect x="50.3670%" y="1205" width="0.2752%" height="15" fill="rgb(217,110,2)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.28%)</title><rect x="50.3670%" y="1189" width="0.2752%" height="15" fill="rgb(229,77,54)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1199.50"></text></g><g><title>std::panicking::try (3 samples, 0.28%)</title><rect x="50.3670%" y="1173" width="0.2752%" height="15" fill="rgb(218,53,16)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1183.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.28%)</title><rect x="50.3670%" y="1157" width="0.2752%" height="15" fill="rgb(215,38,13)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1167.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.28%)</title><rect x="50.3670%" y="1141" width="0.2752%" height="15" fill="rgb(235,42,18)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1151.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (3 samples, 0.28%)</title><rect x="50.3670%" y="1125" width="0.2752%" height="15" fill="rgb(219,66,54)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1135.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (3 samples, 0.28%)</title><rect x="50.3670%" y="1109" width="0.2752%" height="15" fill="rgb(222,205,4)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1119.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.28%)</title><rect x="50.3670%" y="1093" width="0.2752%" height="15" fill="rgb(227,213,46)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1103.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (3 samples, 0.28%)</title><rect x="50.3670%" y="1077" width="0.2752%" height="15" fill="rgb(250,145,42)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1087.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="50.3670%" y="1061" width="0.2752%" height="15" fill="rgb(219,15,2)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1071.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (3 samples, 0.28%)</title><rect x="50.3670%" y="1045" width="0.2752%" height="15" fill="rgb(231,181,52)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1055.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (3 samples, 0.28%)</title><rect x="50.3670%" y="1029" width="0.2752%" height="15" fill="rgb(235,1,42)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1039.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (3 samples, 0.28%)</title><rect x="50.3670%" y="1013" width="0.2752%" height="15" fill="rgb(249,88,27)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1023.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (3 samples, 0.28%)</title><rect x="50.3670%" y="997" width="0.2752%" height="15" fill="rgb(235,145,16)" fg:x="549" fg:w="3"/><text x="50.6170%" y="1007.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (3 samples, 0.28%)</title><rect x="50.3670%" y="981" width="0.2752%" height="15" fill="rgb(237,114,19)" fg:x="549" fg:w="3"/><text x="50.6170%" y="991.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (3 samples, 0.28%)</title><rect x="50.3670%" y="965" width="0.2752%" height="15" fill="rgb(238,51,50)" fg:x="549" fg:w="3"/><text x="50.6170%" y="975.50"></text></g><g><title>tokio::coop::budget (3 samples, 0.28%)</title><rect x="50.3670%" y="949" width="0.2752%" height="15" fill="rgb(205,194,25)" fg:x="549" fg:w="3"/><text x="50.6170%" y="959.50"></text></g><g><title>tokio::coop::with_budget (3 samples, 0.28%)</title><rect x="50.3670%" y="933" width="0.2752%" height="15" fill="rgb(215,203,17)" fg:x="549" fg:w="3"/><text x="50.6170%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.28%)</title><rect x="50.3670%" y="917" width="0.2752%" height="15" fill="rgb(233,112,49)" fg:x="549" fg:w="3"/><text x="50.6170%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.28%)</title><rect x="50.3670%" y="901" width="0.2752%" height="15" fill="rgb(241,130,26)" fg:x="549" fg:w="3"/><text x="50.6170%" y="911.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (3 samples, 0.28%)</title><rect x="50.3670%" y="885" width="0.2752%" height="15" fill="rgb(252,223,19)" fg:x="549" fg:w="3"/><text x="50.6170%" y="895.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (3 samples, 0.28%)</title><rect x="50.3670%" y="869" width="0.2752%" height="15" fill="rgb(211,95,25)" fg:x="549" fg:w="3"/><text x="50.6170%" y="879.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (3 samples, 0.28%)</title><rect x="50.3670%" y="853" width="0.2752%" height="15" fill="rgb(251,182,27)" fg:x="549" fg:w="3"/><text x="50.6170%" y="863.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (3 samples, 0.28%)</title><rect x="50.3670%" y="837" width="0.2752%" height="15" fill="rgb(238,24,4)" fg:x="549" fg:w="3"/><text x="50.6170%" y="847.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3 samples, 0.28%)</title><rect x="50.3670%" y="821" width="0.2752%" height="15" fill="rgb(224,220,25)" fg:x="549" fg:w="3"/><text x="50.6170%" y="831.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (3 samples, 0.28%)</title><rect x="50.3670%" y="805" width="0.2752%" height="15" fill="rgb(239,133,26)" fg:x="549" fg:w="3"/><text x="50.6170%" y="815.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (3 samples, 0.28%)</title><rect x="50.3670%" y="789" width="0.2752%" height="15" fill="rgb(211,94,48)" fg:x="549" fg:w="3"/><text x="50.6170%" y="799.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.28%)</title><rect x="50.3670%" y="773" width="0.2752%" height="15" fill="rgb(239,87,6)" fg:x="549" fg:w="3"/><text x="50.6170%" y="783.50"></text></g><g><title>std::panicking::try (3 samples, 0.28%)</title><rect x="50.3670%" y="757" width="0.2752%" height="15" fill="rgb(227,62,0)" fg:x="549" fg:w="3"/><text x="50.6170%" y="767.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.28%)</title><rect x="50.3670%" y="741" width="0.2752%" height="15" fill="rgb(211,226,4)" fg:x="549" fg:w="3"/><text x="50.6170%" y="751.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.28%)</title><rect x="50.3670%" y="725" width="0.2752%" height="15" fill="rgb(253,38,52)" fg:x="549" fg:w="3"/><text x="50.6170%" y="735.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (3 samples, 0.28%)</title><rect x="50.3670%" y="709" width="0.2752%" height="15" fill="rgb(229,126,40)" fg:x="549" fg:w="3"/><text x="50.6170%" y="719.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (3 samples, 0.28%)</title><rect x="50.3670%" y="693" width="0.2752%" height="15" fill="rgb(229,165,44)" fg:x="549" fg:w="3"/><text x="50.6170%" y="703.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.28%)</title><rect x="50.3670%" y="677" width="0.2752%" height="15" fill="rgb(247,95,47)" fg:x="549" fg:w="3"/><text x="50.6170%" y="687.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (3 samples, 0.28%)</title><rect x="50.3670%" y="661" width="0.2752%" height="15" fill="rgb(216,140,30)" fg:x="549" fg:w="3"/><text x="50.6170%" y="671.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="50.3670%" y="645" width="0.2752%" height="15" fill="rgb(246,214,8)" fg:x="549" fg:w="3"/><text x="50.6170%" y="655.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="50.3670%" y="629" width="0.2752%" height="15" fill="rgb(227,224,15)" fg:x="549" fg:w="3"/><text x="50.6170%" y="639.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="50.3670%" y="613" width="0.2752%" height="15" fill="rgb(233,175,4)" fg:x="549" fg:w="3"/><text x="50.6170%" y="623.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="50.3670%" y="597" width="0.2752%" height="15" fill="rgb(221,66,45)" fg:x="549" fg:w="3"/><text x="50.6170%" y="607.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="50.3670%" y="581" width="0.2752%" height="15" fill="rgb(221,178,18)" fg:x="549" fg:w="3"/><text x="50.6170%" y="591.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="50.3670%" y="565" width="0.2752%" height="15" fill="rgb(213,81,29)" fg:x="549" fg:w="3"/><text x="50.6170%" y="575.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (3 samples, 0.28%)</title><rect x="50.3670%" y="549" width="0.2752%" height="15" fill="rgb(220,89,49)" fg:x="549" fg:w="3"/><text x="50.6170%" y="559.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="50.3670%" y="533" width="0.2752%" height="15" fill="rgb(227,60,33)" fg:x="549" fg:w="3"/><text x="50.6170%" y="543.50"></text></g><g><title>&lt;hyper::client::conn::ProtoClient&lt;T,B&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="50.3670%" y="517" width="0.2752%" height="15" fill="rgb(205,113,12)" fg:x="549" fg:w="3"/><text x="50.6170%" y="527.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="50.3670%" y="501" width="0.2752%" height="15" fill="rgb(211,32,1)" fg:x="549" fg:w="3"/><text x="50.6170%" y="511.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (3 samples, 0.28%)</title><rect x="50.3670%" y="485" width="0.2752%" height="15" fill="rgb(246,2,12)" fg:x="549" fg:w="3"/><text x="50.6170%" y="495.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (3 samples, 0.28%)</title><rect x="50.3670%" y="469" width="0.2752%" height="15" fill="rgb(243,37,27)" fg:x="549" fg:w="3"/><text x="50.6170%" y="479.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (3 samples, 0.28%)</title><rect x="50.3670%" y="453" width="0.2752%" height="15" fill="rgb(248,211,31)" fg:x="549" fg:w="3"/><text x="50.6170%" y="463.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (3 samples, 0.28%)</title><rect x="50.3670%" y="437" width="0.2752%" height="15" fill="rgb(242,146,47)" fg:x="549" fg:w="3"/><text x="50.6170%" y="447.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (1 samples, 0.09%)</title><rect x="50.5505%" y="421" width="0.0917%" height="15" fill="rgb(206,70,20)" fg:x="551" fg:w="1"/><text x="50.8005%" y="431.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (1 samples, 0.09%)</title><rect x="50.5505%" y="405" width="0.0917%" height="15" fill="rgb(215,10,51)" fg:x="551" fg:w="1"/><text x="50.8005%" y="415.50"></text></g><g><title>hyper::proto::h1::decode::Decoder::new (1 samples, 0.09%)</title><rect x="50.5505%" y="389" width="0.0917%" height="15" fill="rgb(243,178,53)" fg:x="551" fg:w="1"/><text x="50.8005%" y="399.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.09%)</title><rect x="50.6422%" y="1509" width="0.0917%" height="15" fill="rgb(233,221,20)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1519.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.09%)</title><rect x="50.6422%" y="1493" width="0.0917%" height="15" fill="rgb(218,95,35)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1503.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.09%)</title><rect x="50.6422%" y="1477" width="0.0917%" height="15" fill="rgb(229,13,5)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1487.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.09%)</title><rect x="50.6422%" y="1461" width="0.0917%" height="15" fill="rgb(252,164,30)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1471.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (1 samples, 0.09%)</title><rect x="50.6422%" y="1445" width="0.0917%" height="15" fill="rgb(232,68,36)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1455.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.09%)</title><rect x="50.6422%" y="1429" width="0.0917%" height="15" fill="rgb(219,59,54)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1439.50"></text></g><g><title>std::panicking::try (1 samples, 0.09%)</title><rect x="50.6422%" y="1413" width="0.0917%" height="15" fill="rgb(250,92,33)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1423.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.09%)</title><rect x="50.6422%" y="1397" width="0.0917%" height="15" fill="rgb(229,162,54)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1407.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.09%)</title><rect x="50.6422%" y="1381" width="0.0917%" height="15" fill="rgb(244,114,52)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1391.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (1 samples, 0.09%)</title><rect x="50.6422%" y="1365" width="0.0917%" height="15" fill="rgb(212,211,43)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1375.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.09%)</title><rect x="50.6422%" y="1349" width="0.0917%" height="15" fill="rgb(226,147,8)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1359.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (1 samples, 0.09%)</title><rect x="50.6422%" y="1333" width="0.0917%" height="15" fill="rgb(226,23,13)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1343.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1 samples, 0.09%)</title><rect x="50.6422%" y="1317" width="0.0917%" height="15" fill="rgb(240,63,4)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1327.50"></text></g><g><title>tokio::runtime::blocking::pool::Task::run (1 samples, 0.09%)</title><rect x="50.6422%" y="1301" width="0.0917%" height="15" fill="rgb(221,1,32)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1311.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (1 samples, 0.09%)</title><rect x="50.6422%" y="1285" width="0.0917%" height="15" fill="rgb(242,117,10)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1295.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1 samples, 0.09%)</title><rect x="50.6422%" y="1269" width="0.0917%" height="15" fill="rgb(249,172,44)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.09%)</title><rect x="50.6422%" y="1253" width="0.0917%" height="15" fill="rgb(244,46,45)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1263.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.09%)</title><rect x="50.6422%" y="1237" width="0.0917%" height="15" fill="rgb(206,43,17)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1247.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (1 samples, 0.09%)</title><rect x="50.6422%" y="1221" width="0.0917%" height="15" fill="rgb(239,218,39)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1231.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.09%)</title><rect x="50.6422%" y="1205" width="0.0917%" height="15" fill="rgb(208,169,54)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1215.50"></text></g><g><title>std::panicking::try (1 samples, 0.09%)</title><rect x="50.6422%" y="1189" width="0.0917%" height="15" fill="rgb(247,25,42)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1199.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.09%)</title><rect x="50.6422%" y="1173" width="0.0917%" height="15" fill="rgb(226,23,31)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1183.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.09%)</title><rect x="50.6422%" y="1157" width="0.0917%" height="15" fill="rgb(247,16,28)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (1 samples, 0.09%)</title><rect x="50.6422%" y="1141" width="0.0917%" height="15" fill="rgb(231,147,38)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1151.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1 samples, 0.09%)</title><rect x="50.6422%" y="1125" width="0.0917%" height="15" fill="rgb(253,81,48)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1135.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.09%)</title><rect x="50.6422%" y="1109" width="0.0917%" height="15" fill="rgb(249,222,43)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1119.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (1 samples, 0.09%)</title><rect x="50.6422%" y="1093" width="0.0917%" height="15" fill="rgb(221,3,27)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1103.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="50.6422%" y="1077" width="0.0917%" height="15" fill="rgb(228,180,5)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1087.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (1 samples, 0.09%)</title><rect x="50.6422%" y="1061" width="0.0917%" height="15" fill="rgb(227,131,42)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1071.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (1 samples, 0.09%)</title><rect x="50.6422%" y="1045" width="0.0917%" height="15" fill="rgb(212,3,39)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1055.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1 samples, 0.09%)</title><rect x="50.6422%" y="1029" width="0.0917%" height="15" fill="rgb(226,45,5)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1039.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (1 samples, 0.09%)</title><rect x="50.6422%" y="1013" width="0.0917%" height="15" fill="rgb(215,167,45)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1023.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (1 samples, 0.09%)</title><rect x="50.6422%" y="997" width="0.0917%" height="15" fill="rgb(250,218,53)" fg:x="552" fg:w="1"/><text x="50.8922%" y="1007.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (1 samples, 0.09%)</title><rect x="50.6422%" y="981" width="0.0917%" height="15" fill="rgb(207,140,0)" fg:x="552" fg:w="1"/><text x="50.8922%" y="991.50"></text></g><g><title>tokio::coop::budget (1 samples, 0.09%)</title><rect x="50.6422%" y="965" width="0.0917%" height="15" fill="rgb(238,133,51)" fg:x="552" fg:w="1"/><text x="50.8922%" y="975.50"></text></g><g><title>tokio::coop::with_budget (1 samples, 0.09%)</title><rect x="50.6422%" y="949" width="0.0917%" height="15" fill="rgb(218,203,53)" fg:x="552" fg:w="1"/><text x="50.8922%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.09%)</title><rect x="50.6422%" y="933" width="0.0917%" height="15" fill="rgb(226,184,25)" fg:x="552" fg:w="1"/><text x="50.8922%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.09%)</title><rect x="50.6422%" y="917" width="0.0917%" height="15" fill="rgb(231,121,21)" fg:x="552" fg:w="1"/><text x="50.8922%" y="927.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (1 samples, 0.09%)</title><rect x="50.6422%" y="901" width="0.0917%" height="15" fill="rgb(251,14,34)" fg:x="552" fg:w="1"/><text x="50.8922%" y="911.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (1 samples, 0.09%)</title><rect x="50.6422%" y="885" width="0.0917%" height="15" fill="rgb(249,193,11)" fg:x="552" fg:w="1"/><text x="50.8922%" y="895.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (1 samples, 0.09%)</title><rect x="50.6422%" y="869" width="0.0917%" height="15" fill="rgb(220,172,37)" fg:x="552" fg:w="1"/><text x="50.8922%" y="879.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1 samples, 0.09%)</title><rect x="50.6422%" y="853" width="0.0917%" height="15" fill="rgb(231,229,43)" fg:x="552" fg:w="1"/><text x="50.8922%" y="863.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.09%)</title><rect x="50.6422%" y="837" width="0.0917%" height="15" fill="rgb(250,161,5)" fg:x="552" fg:w="1"/><text x="50.8922%" y="847.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.09%)</title><rect x="50.6422%" y="821" width="0.0917%" height="15" fill="rgb(218,225,18)" fg:x="552" fg:w="1"/><text x="50.8922%" y="831.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (1 samples, 0.09%)</title><rect x="50.6422%" y="805" width="0.0917%" height="15" fill="rgb(245,45,42)" fg:x="552" fg:w="1"/><text x="50.8922%" y="815.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.09%)</title><rect x="50.6422%" y="789" width="0.0917%" height="15" fill="rgb(211,115,1)" fg:x="552" fg:w="1"/><text x="50.8922%" y="799.50"></text></g><g><title>std::panicking::try (1 samples, 0.09%)</title><rect x="50.6422%" y="773" width="0.0917%" height="15" fill="rgb(248,133,52)" fg:x="552" fg:w="1"/><text x="50.8922%" y="783.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.09%)</title><rect x="50.6422%" y="757" width="0.0917%" height="15" fill="rgb(238,100,21)" fg:x="552" fg:w="1"/><text x="50.8922%" y="767.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.09%)</title><rect x="50.6422%" y="741" width="0.0917%" height="15" fill="rgb(247,144,11)" fg:x="552" fg:w="1"/><text x="50.8922%" y="751.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (1 samples, 0.09%)</title><rect x="50.6422%" y="725" width="0.0917%" height="15" fill="rgb(206,164,16)" fg:x="552" fg:w="1"/><text x="50.8922%" y="735.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1 samples, 0.09%)</title><rect x="50.6422%" y="709" width="0.0917%" height="15" fill="rgb(222,34,3)" fg:x="552" fg:w="1"/><text x="50.8922%" y="719.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.09%)</title><rect x="50.6422%" y="693" width="0.0917%" height="15" fill="rgb(248,82,4)" fg:x="552" fg:w="1"/><text x="50.8922%" y="703.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (1 samples, 0.09%)</title><rect x="50.6422%" y="677" width="0.0917%" height="15" fill="rgb(228,81,46)" fg:x="552" fg:w="1"/><text x="50.8922%" y="687.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="50.6422%" y="661" width="0.0917%" height="15" fill="rgb(227,67,47)" fg:x="552" fg:w="1"/><text x="50.8922%" y="671.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="50.6422%" y="645" width="0.0917%" height="15" fill="rgb(215,93,53)" fg:x="552" fg:w="1"/><text x="50.8922%" y="655.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="50.6422%" y="629" width="0.0917%" height="15" fill="rgb(248,194,39)" fg:x="552" fg:w="1"/><text x="50.8922%" y="639.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="50.6422%" y="613" width="0.0917%" height="15" fill="rgb(215,5,19)" fg:x="552" fg:w="1"/><text x="50.8922%" y="623.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="50.6422%" y="597" width="0.0917%" height="15" fill="rgb(226,215,51)" fg:x="552" fg:w="1"/><text x="50.8922%" y="607.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="50.6422%" y="581" width="0.0917%" height="15" fill="rgb(225,56,26)" fg:x="552" fg:w="1"/><text x="50.8922%" y="591.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.09%)</title><rect x="50.6422%" y="565" width="0.0917%" height="15" fill="rgb(222,75,29)" fg:x="552" fg:w="1"/><text x="50.8922%" y="575.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="50.6422%" y="549" width="0.0917%" height="15" fill="rgb(236,139,6)" fg:x="552" fg:w="1"/><text x="50.8922%" y="559.50"></text></g><g><title>&lt;hyper::client::conn::ProtoClient&lt;T,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="50.6422%" y="533" width="0.0917%" height="15" fill="rgb(223,137,36)" fg:x="552" fg:w="1"/><text x="50.8922%" y="543.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="50.6422%" y="517" width="0.0917%" height="15" fill="rgb(226,99,2)" fg:x="552" fg:w="1"/><text x="50.8922%" y="527.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (1 samples, 0.09%)</title><rect x="50.6422%" y="501" width="0.0917%" height="15" fill="rgb(206,133,23)" fg:x="552" fg:w="1"/><text x="50.8922%" y="511.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (1 samples, 0.09%)</title><rect x="50.6422%" y="485" width="0.0917%" height="15" fill="rgb(243,173,15)" fg:x="552" fg:w="1"/><text x="50.8922%" y="495.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (1 samples, 0.09%)</title><rect x="50.6422%" y="469" width="0.0917%" height="15" fill="rgb(228,69,28)" fg:x="552" fg:w="1"/><text x="50.8922%" y="479.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (1 samples, 0.09%)</title><rect x="50.6422%" y="453" width="0.0917%" height="15" fill="rgb(212,51,22)" fg:x="552" fg:w="1"/><text x="50.8922%" y="463.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (1 samples, 0.09%)</title><rect x="50.6422%" y="437" width="0.0917%" height="15" fill="rgb(227,113,0)" fg:x="552" fg:w="1"/><text x="50.8922%" y="447.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::require_empty_read (1 samples, 0.09%)</title><rect x="50.6422%" y="421" width="0.0917%" height="15" fill="rgb(252,84,27)" fg:x="552" fg:w="1"/><text x="50.8922%" y="431.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (1 samples, 0.09%)</title><rect x="50.6422%" y="405" width="0.0917%" height="15" fill="rgb(223,145,39)" fg:x="552" fg:w="1"/><text x="50.8922%" y="415.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1 samples, 0.09%)</title><rect x="50.6422%" y="389" width="0.0917%" height="15" fill="rgb(239,219,30)" fg:x="552" fg:w="1"/><text x="50.8922%" y="399.50"></text></g><g><title>&lt;reqwest::connect::Conn as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="50.6422%" y="373" width="0.0917%" height="15" fill="rgb(224,196,39)" fg:x="552" fg:w="1"/><text x="50.8922%" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="50.6422%" y="357" width="0.0917%" height="15" fill="rgb(205,35,43)" fg:x="552" fg:w="1"/><text x="50.8922%" y="367.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="50.6422%" y="341" width="0.0917%" height="15" fill="rgb(228,201,21)" fg:x="552" fg:w="1"/><text x="50.8922%" y="351.50"></text></g><g><title>tokio_native_tls::TlsStream&lt;S&gt;::with_context (1 samples, 0.09%)</title><rect x="50.6422%" y="325" width="0.0917%" height="15" fill="rgb(237,118,16)" fg:x="552" fg:w="1"/><text x="50.8922%" y="335.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::{{closure}} (1 samples, 0.09%)</title><rect x="50.6422%" y="309" width="0.0917%" height="15" fill="rgb(241,17,19)" fg:x="552" fg:w="1"/><text x="50.8922%" y="319.50"></text></g><g><title>&lt;native_tls::TlsStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.09%)</title><rect x="50.6422%" y="293" width="0.0917%" height="15" fill="rgb(214,10,25)" fg:x="552" fg:w="1"/><text x="50.8922%" y="303.50"></text></g><g><title>&lt;native_tls::imp::TlsStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.09%)</title><rect x="50.6422%" y="277" width="0.0917%" height="15" fill="rgb(238,37,29)" fg:x="552" fg:w="1"/><text x="50.8922%" y="287.50"></text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.09%)</title><rect x="50.6422%" y="261" width="0.0917%" height="15" fill="rgb(253,83,25)" fg:x="552" fg:w="1"/><text x="50.8922%" y="271.50"></text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::ssl_read (1 samples, 0.09%)</title><rect x="50.6422%" y="245" width="0.0917%" height="15" fill="rgb(234,192,12)" fg:x="552" fg:w="1"/><text x="50.8922%" y="255.50"></text></g><g><title>SSL_read (1 samples, 0.09%)</title><rect x="50.6422%" y="229" width="0.0917%" height="15" fill="rgb(241,216,45)" fg:x="552" fg:w="1"/><text x="50.8922%" y="239.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.09%)</title><rect x="50.6422%" y="213" width="0.0917%" height="15" fill="rgb(242,22,33)" fg:x="552" fg:w="1"/><text x="50.8922%" y="223.50"></text></g><g><title>__GI___errno_location (1 samples, 0.09%)</title><rect x="50.6422%" y="197" width="0.0917%" height="15" fill="rgb(231,105,49)" fg:x="552" fg:w="1"/><text x="50.8922%" y="207.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_flush (1 samples, 0.09%)</title><rect x="50.7339%" y="613" width="0.0917%" height="15" fill="rgb(218,204,15)" fg:x="553" fg:w="1"/><text x="50.9839%" y="623.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (1 samples, 0.09%)</title><rect x="50.7339%" y="597" width="0.0917%" height="15" fill="rgb(235,138,41)" fg:x="553" fg:w="1"/><text x="50.9839%" y="607.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (1 samples, 0.09%)</title><rect x="50.7339%" y="581" width="0.0917%" height="15" fill="rgb(246,0,9)" fg:x="553" fg:w="1"/><text x="50.9839%" y="591.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush_flattened (1 samples, 0.09%)</title><rect x="50.7339%" y="565" width="0.0917%" height="15" fill="rgb(210,74,4)" fg:x="553" fg:w="1"/><text x="50.9839%" y="575.50"></text></g><g><title>SSL_read (1 samples, 0.09%)</title><rect x="50.8257%" y="389" width="0.0917%" height="15" fill="rgb(250,60,41)" fg:x="554" fg:w="1"/><text x="51.0757%" y="399.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.09%)</title><rect x="50.8257%" y="373" width="0.0917%" height="15" fill="rgb(220,115,12)" fg:x="554" fg:w="1"/><text x="51.0757%" y="383.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.09%)</title><rect x="50.8257%" y="357" width="0.0917%" height="15" fill="rgb(237,100,13)" fg:x="554" fg:w="1"/><text x="51.0757%" y="367.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.09%)</title><rect x="50.8257%" y="341" width="0.0917%" height="15" fill="rgb(213,55,26)" fg:x="554" fg:w="1"/><text x="51.0757%" y="351.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.37%)</title><rect x="50.7339%" y="1509" width="0.3670%" height="15" fill="rgb(216,17,4)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1519.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (4 samples, 0.37%)</title><rect x="50.7339%" y="1493" width="0.3670%" height="15" fill="rgb(220,153,47)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1503.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (4 samples, 0.37%)</title><rect x="50.7339%" y="1477" width="0.3670%" height="15" fill="rgb(215,131,9)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1487.50"></text></g><g><title>tokio::runtime::blocking::pool::Task::run (4 samples, 0.37%)</title><rect x="50.7339%" y="1461" width="0.3670%" height="15" fill="rgb(233,46,42)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1471.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (4 samples, 0.37%)</title><rect x="50.7339%" y="1445" width="0.3670%" height="15" fill="rgb(226,86,7)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1455.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (4 samples, 0.37%)</title><rect x="50.7339%" y="1429" width="0.3670%" height="15" fill="rgb(239,226,21)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1439.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (4 samples, 0.37%)</title><rect x="50.7339%" y="1413" width="0.3670%" height="15" fill="rgb(244,137,22)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1423.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (4 samples, 0.37%)</title><rect x="50.7339%" y="1397" width="0.3670%" height="15" fill="rgb(211,139,35)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1407.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (4 samples, 0.37%)</title><rect x="50.7339%" y="1381" width="0.3670%" height="15" fill="rgb(214,62,50)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1391.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.37%)</title><rect x="50.7339%" y="1365" width="0.3670%" height="15" fill="rgb(212,113,44)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1375.50"></text></g><g><title>std::panicking::try (4 samples, 0.37%)</title><rect x="50.7339%" y="1349" width="0.3670%" height="15" fill="rgb(226,150,43)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1359.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.37%)</title><rect x="50.7339%" y="1333" width="0.3670%" height="15" fill="rgb(250,71,37)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1343.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.37%)</title><rect x="50.7339%" y="1317" width="0.3670%" height="15" fill="rgb(219,76,19)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1327.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (4 samples, 0.37%)</title><rect x="50.7339%" y="1301" width="0.3670%" height="15" fill="rgb(250,39,11)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1311.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (4 samples, 0.37%)</title><rect x="50.7339%" y="1285" width="0.3670%" height="15" fill="rgb(230,64,31)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1295.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4 samples, 0.37%)</title><rect x="50.7339%" y="1269" width="0.3670%" height="15" fill="rgb(208,222,23)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1279.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (4 samples, 0.37%)</title><rect x="50.7339%" y="1253" width="0.3670%" height="15" fill="rgb(227,125,18)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1263.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="50.7339%" y="1237" width="0.3670%" height="15" fill="rgb(234,210,9)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1247.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (4 samples, 0.37%)</title><rect x="50.7339%" y="1221" width="0.3670%" height="15" fill="rgb(217,127,24)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1231.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (4 samples, 0.37%)</title><rect x="50.7339%" y="1205" width="0.3670%" height="15" fill="rgb(239,141,48)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1215.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (4 samples, 0.37%)</title><rect x="50.7339%" y="1189" width="0.3670%" height="15" fill="rgb(227,109,8)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1199.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (4 samples, 0.37%)</title><rect x="50.7339%" y="1173" width="0.3670%" height="15" fill="rgb(235,184,23)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1183.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (4 samples, 0.37%)</title><rect x="50.7339%" y="1157" width="0.3670%" height="15" fill="rgb(227,226,48)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1167.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (4 samples, 0.37%)</title><rect x="50.7339%" y="1141" width="0.3670%" height="15" fill="rgb(206,150,11)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1151.50"></text></g><g><title>tokio::coop::budget (4 samples, 0.37%)</title><rect x="50.7339%" y="1125" width="0.3670%" height="15" fill="rgb(254,2,33)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1135.50"></text></g><g><title>tokio::coop::with_budget (4 samples, 0.37%)</title><rect x="50.7339%" y="1109" width="0.3670%" height="15" fill="rgb(243,160,20)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.37%)</title><rect x="50.7339%" y="1093" width="0.3670%" height="15" fill="rgb(218,208,30)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.37%)</title><rect x="50.7339%" y="1077" width="0.3670%" height="15" fill="rgb(224,120,49)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1087.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (4 samples, 0.37%)</title><rect x="50.7339%" y="1061" width="0.3670%" height="15" fill="rgb(246,12,2)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1071.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (4 samples, 0.37%)</title><rect x="50.7339%" y="1045" width="0.3670%" height="15" fill="rgb(236,117,3)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1055.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (4 samples, 0.37%)</title><rect x="50.7339%" y="1029" width="0.3670%" height="15" fill="rgb(216,128,52)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1039.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (4 samples, 0.37%)</title><rect x="50.7339%" y="1013" width="0.3670%" height="15" fill="rgb(246,145,19)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (4 samples, 0.37%)</title><rect x="50.7339%" y="997" width="0.3670%" height="15" fill="rgb(222,11,46)" fg:x="553" fg:w="4"/><text x="50.9839%" y="1007.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (4 samples, 0.37%)</title><rect x="50.7339%" y="981" width="0.3670%" height="15" fill="rgb(245,82,36)" fg:x="553" fg:w="4"/><text x="50.9839%" y="991.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (4 samples, 0.37%)</title><rect x="50.7339%" y="965" width="0.3670%" height="15" fill="rgb(250,73,51)" fg:x="553" fg:w="4"/><text x="50.9839%" y="975.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.37%)</title><rect x="50.7339%" y="949" width="0.3670%" height="15" fill="rgb(221,189,23)" fg:x="553" fg:w="4"/><text x="50.9839%" y="959.50"></text></g><g><title>std::panicking::try (4 samples, 0.37%)</title><rect x="50.7339%" y="933" width="0.3670%" height="15" fill="rgb(210,33,7)" fg:x="553" fg:w="4"/><text x="50.9839%" y="943.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.37%)</title><rect x="50.7339%" y="917" width="0.3670%" height="15" fill="rgb(210,107,22)" fg:x="553" fg:w="4"/><text x="50.9839%" y="927.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.37%)</title><rect x="50.7339%" y="901" width="0.3670%" height="15" fill="rgb(222,116,37)" fg:x="553" fg:w="4"/><text x="50.9839%" y="911.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (4 samples, 0.37%)</title><rect x="50.7339%" y="885" width="0.3670%" height="15" fill="rgb(254,17,48)" fg:x="553" fg:w="4"/><text x="50.9839%" y="895.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (4 samples, 0.37%)</title><rect x="50.7339%" y="869" width="0.3670%" height="15" fill="rgb(224,36,32)" fg:x="553" fg:w="4"/><text x="50.9839%" y="879.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4 samples, 0.37%)</title><rect x="50.7339%" y="853" width="0.3670%" height="15" fill="rgb(232,90,46)" fg:x="553" fg:w="4"/><text x="50.9839%" y="863.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (4 samples, 0.37%)</title><rect x="50.7339%" y="837" width="0.3670%" height="15" fill="rgb(241,66,40)" fg:x="553" fg:w="4"/><text x="50.9839%" y="847.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="50.7339%" y="821" width="0.3670%" height="15" fill="rgb(249,184,29)" fg:x="553" fg:w="4"/><text x="50.9839%" y="831.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="50.7339%" y="805" width="0.3670%" height="15" fill="rgb(231,181,1)" fg:x="553" fg:w="4"/><text x="50.9839%" y="815.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="50.7339%" y="789" width="0.3670%" height="15" fill="rgb(224,94,2)" fg:x="553" fg:w="4"/><text x="50.9839%" y="799.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="50.7339%" y="773" width="0.3670%" height="15" fill="rgb(229,170,15)" fg:x="553" fg:w="4"/><text x="50.9839%" y="783.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="50.7339%" y="757" width="0.3670%" height="15" fill="rgb(240,127,35)" fg:x="553" fg:w="4"/><text x="50.9839%" y="767.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="50.7339%" y="741" width="0.3670%" height="15" fill="rgb(248,196,34)" fg:x="553" fg:w="4"/><text x="50.9839%" y="751.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (4 samples, 0.37%)</title><rect x="50.7339%" y="725" width="0.3670%" height="15" fill="rgb(236,137,7)" fg:x="553" fg:w="4"/><text x="50.9839%" y="735.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="50.7339%" y="709" width="0.3670%" height="15" fill="rgb(235,127,16)" fg:x="553" fg:w="4"/><text x="50.9839%" y="719.50"></text></g><g><title>&lt;hyper::client::conn::ProtoClient&lt;T,B&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="50.7339%" y="693" width="0.3670%" height="15" fill="rgb(250,192,54)" fg:x="553" fg:w="4"/><text x="50.9839%" y="703.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.37%)</title><rect x="50.7339%" y="677" width="0.3670%" height="15" fill="rgb(218,98,20)" fg:x="553" fg:w="4"/><text x="50.9839%" y="687.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (4 samples, 0.37%)</title><rect x="50.7339%" y="661" width="0.3670%" height="15" fill="rgb(230,176,47)" fg:x="553" fg:w="4"/><text x="50.9839%" y="671.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (4 samples, 0.37%)</title><rect x="50.7339%" y="645" width="0.3670%" height="15" fill="rgb(244,2,33)" fg:x="553" fg:w="4"/><text x="50.9839%" y="655.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (4 samples, 0.37%)</title><rect x="50.7339%" y="629" width="0.3670%" height="15" fill="rgb(231,100,17)" fg:x="553" fg:w="4"/><text x="50.9839%" y="639.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (3 samples, 0.28%)</title><rect x="50.8257%" y="613" width="0.2752%" height="15" fill="rgb(245,23,12)" fg:x="554" fg:w="3"/><text x="51.0757%" y="623.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (3 samples, 0.28%)</title><rect x="50.8257%" y="597" width="0.2752%" height="15" fill="rgb(249,55,22)" fg:x="554" fg:w="3"/><text x="51.0757%" y="607.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::require_empty_read (3 samples, 0.28%)</title><rect x="50.8257%" y="581" width="0.2752%" height="15" fill="rgb(207,134,9)" fg:x="554" fg:w="3"/><text x="51.0757%" y="591.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (3 samples, 0.28%)</title><rect x="50.8257%" y="565" width="0.2752%" height="15" fill="rgb(218,134,0)" fg:x="554" fg:w="3"/><text x="51.0757%" y="575.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (3 samples, 0.28%)</title><rect x="50.8257%" y="549" width="0.2752%" height="15" fill="rgb(213,212,33)" fg:x="554" fg:w="3"/><text x="51.0757%" y="559.50"></text></g><g><title>&lt;reqwest::connect::Conn as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.28%)</title><rect x="50.8257%" y="533" width="0.2752%" height="15" fill="rgb(252,106,18)" fg:x="554" fg:w="3"/><text x="51.0757%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.28%)</title><rect x="50.8257%" y="517" width="0.2752%" height="15" fill="rgb(208,126,42)" fg:x="554" fg:w="3"/><text x="51.0757%" y="527.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.28%)</title><rect x="50.8257%" y="501" width="0.2752%" height="15" fill="rgb(246,175,29)" fg:x="554" fg:w="3"/><text x="51.0757%" y="511.50"></text></g><g><title>tokio_native_tls::TlsStream&lt;S&gt;::with_context (3 samples, 0.28%)</title><rect x="50.8257%" y="485" width="0.2752%" height="15" fill="rgb(215,13,50)" fg:x="554" fg:w="3"/><text x="51.0757%" y="495.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::{{closure}} (3 samples, 0.28%)</title><rect x="50.8257%" y="469" width="0.2752%" height="15" fill="rgb(216,172,15)" fg:x="554" fg:w="3"/><text x="51.0757%" y="479.50"></text></g><g><title>&lt;native_tls::TlsStream&lt;S&gt; as std::io::Read&gt;::read (3 samples, 0.28%)</title><rect x="50.8257%" y="453" width="0.2752%" height="15" fill="rgb(212,103,13)" fg:x="554" fg:w="3"/><text x="51.0757%" y="463.50"></text></g><g><title>&lt;native_tls::imp::TlsStream&lt;S&gt; as std::io::Read&gt;::read (3 samples, 0.28%)</title><rect x="50.8257%" y="437" width="0.2752%" height="15" fill="rgb(231,171,36)" fg:x="554" fg:w="3"/><text x="51.0757%" y="447.50"></text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Read&gt;::read (3 samples, 0.28%)</title><rect x="50.8257%" y="421" width="0.2752%" height="15" fill="rgb(250,123,20)" fg:x="554" fg:w="3"/><text x="51.0757%" y="431.50"></text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::ssl_read (3 samples, 0.28%)</title><rect x="50.8257%" y="405" width="0.2752%" height="15" fill="rgb(212,53,50)" fg:x="554" fg:w="3"/><text x="51.0757%" y="415.50"></text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::make_error (2 samples, 0.18%)</title><rect x="50.9174%" y="389" width="0.1835%" height="15" fill="rgb(243,54,12)" fg:x="555" fg:w="2"/><text x="51.1674%" y="399.50"></text></g><g><title>SSL_get_error (2 samples, 0.18%)</title><rect x="50.9174%" y="373" width="0.1835%" height="15" fill="rgb(234,101,34)" fg:x="555" fg:w="2"/><text x="51.1674%" y="383.50"></text></g><g><title>[libcrypto.so.1.1] (2 samples, 0.18%)</title><rect x="50.9174%" y="357" width="0.1835%" height="15" fill="rgb(254,67,22)" fg:x="555" fg:w="2"/><text x="51.1674%" y="367.50"></text></g><g><title>ERR_get_state (2 samples, 0.18%)</title><rect x="50.9174%" y="341" width="0.1835%" height="15" fill="rgb(250,35,47)" fg:x="555" fg:w="2"/><text x="51.1674%" y="351.50"></text></g><g><title>OPENSSL_init_crypto (2 samples, 0.18%)</title><rect x="50.9174%" y="325" width="0.1835%" height="15" fill="rgb(226,126,38)" fg:x="555" fg:w="2"/><text x="51.1674%" y="335.50"></text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 0.09%)</title><rect x="51.0092%" y="309" width="0.0917%" height="15" fill="rgb(216,138,53)" fg:x="556" fg:w="1"/><text x="51.2592%" y="319.50"></text></g><g><title>__GI___pthread_once (1 samples, 0.09%)</title><rect x="51.0092%" y="293" width="0.0917%" height="15" fill="rgb(246,199,43)" fg:x="556" fg:w="1"/><text x="51.2592%" y="303.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::{{closure}} (1 samples, 0.09%)</title><rect x="51.1009%" y="789" width="0.0917%" height="15" fill="rgb(232,125,11)" fg:x="557" fg:w="1"/><text x="51.3509%" y="799.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::initialize_unfilled (1 samples, 0.09%)</title><rect x="51.1009%" y="773" width="0.0917%" height="15" fill="rgb(218,219,45)" fg:x="557" fg:w="1"/><text x="51.3509%" y="783.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::initialize_unfilled_to (1 samples, 0.09%)</title><rect x="51.1009%" y="757" width="0.0917%" height="15" fill="rgb(216,102,54)" fg:x="557" fg:w="1"/><text x="51.3509%" y="767.50"></text></g><g><title>tokio::io::read_buf::slice_to_uninit_mut (1 samples, 0.09%)</title><rect x="51.1009%" y="741" width="0.0917%" height="15" fill="rgb(250,228,7)" fg:x="557" fg:w="1"/><text x="51.3509%" y="751.50"></text></g><g><title>SSL_get_rbio (1 samples, 0.09%)</title><rect x="51.1927%" y="741" width="0.0917%" height="15" fill="rgb(226,125,25)" fg:x="558" fg:w="1"/><text x="51.4427%" y="751.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (3 samples, 0.28%)</title><rect x="51.1009%" y="1509" width="0.2752%" height="15" fill="rgb(224,165,27)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1519.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (3 samples, 0.28%)</title><rect x="51.1009%" y="1493" width="0.2752%" height="15" fill="rgb(233,86,3)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1503.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (3 samples, 0.28%)</title><rect x="51.1009%" y="1477" width="0.2752%" height="15" fill="rgb(228,116,20)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1487.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (3 samples, 0.28%)</title><rect x="51.1009%" y="1461" width="0.2752%" height="15" fill="rgb(209,192,17)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1471.50"></text></g><g><title>tokio::coop::budget (3 samples, 0.28%)</title><rect x="51.1009%" y="1445" width="0.2752%" height="15" fill="rgb(224,88,34)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1455.50"></text></g><g><title>tokio::coop::with_budget (3 samples, 0.28%)</title><rect x="51.1009%" y="1429" width="0.2752%" height="15" fill="rgb(233,38,6)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1439.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.28%)</title><rect x="51.1009%" y="1413" width="0.2752%" height="15" fill="rgb(212,59,30)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1423.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.28%)</title><rect x="51.1009%" y="1397" width="0.2752%" height="15" fill="rgb(213,80,3)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1407.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (3 samples, 0.28%)</title><rect x="51.1009%" y="1381" width="0.2752%" height="15" fill="rgb(251,178,7)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1391.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (3 samples, 0.28%)</title><rect x="51.1009%" y="1365" width="0.2752%" height="15" fill="rgb(213,154,26)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1375.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (3 samples, 0.28%)</title><rect x="51.1009%" y="1349" width="0.2752%" height="15" fill="rgb(238,165,49)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1359.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (3 samples, 0.28%)</title><rect x="51.1009%" y="1333" width="0.2752%" height="15" fill="rgb(248,91,46)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1343.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3 samples, 0.28%)</title><rect x="51.1009%" y="1317" width="0.2752%" height="15" fill="rgb(244,21,52)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1327.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (3 samples, 0.28%)</title><rect x="51.1009%" y="1301" width="0.2752%" height="15" fill="rgb(247,122,20)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1311.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (3 samples, 0.28%)</title><rect x="51.1009%" y="1285" width="0.2752%" height="15" fill="rgb(218,27,9)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1295.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.28%)</title><rect x="51.1009%" y="1269" width="0.2752%" height="15" fill="rgb(246,7,6)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1279.50"></text></g><g><title>std::panicking::try (3 samples, 0.28%)</title><rect x="51.1009%" y="1253" width="0.2752%" height="15" fill="rgb(227,135,54)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1263.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.28%)</title><rect x="51.1009%" y="1237" width="0.2752%" height="15" fill="rgb(247,14,11)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1247.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.28%)</title><rect x="51.1009%" y="1221" width="0.2752%" height="15" fill="rgb(206,149,34)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1231.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (3 samples, 0.28%)</title><rect x="51.1009%" y="1205" width="0.2752%" height="15" fill="rgb(227,228,4)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1215.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (3 samples, 0.28%)</title><rect x="51.1009%" y="1189" width="0.2752%" height="15" fill="rgb(238,218,28)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1199.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.28%)</title><rect x="51.1009%" y="1173" width="0.2752%" height="15" fill="rgb(252,86,40)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1183.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (3 samples, 0.28%)</title><rect x="51.1009%" y="1157" width="0.2752%" height="15" fill="rgb(251,225,11)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1167.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="51.1009%" y="1141" width="0.2752%" height="15" fill="rgb(206,46,49)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1151.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="51.1009%" y="1125" width="0.2752%" height="15" fill="rgb(245,128,24)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1135.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="51.1009%" y="1109" width="0.2752%" height="15" fill="rgb(219,177,34)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1119.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="51.1009%" y="1093" width="0.2752%" height="15" fill="rgb(218,60,48)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1103.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="51.1009%" y="1077" width="0.2752%" height="15" fill="rgb(221,11,5)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1087.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="51.1009%" y="1061" width="0.2752%" height="15" fill="rgb(220,148,13)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1071.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (3 samples, 0.28%)</title><rect x="51.1009%" y="1045" width="0.2752%" height="15" fill="rgb(210,16,3)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1055.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="51.1009%" y="1029" width="0.2752%" height="15" fill="rgb(236,80,2)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1039.50"></text></g><g><title>&lt;hyper::client::conn::ProtoClient&lt;T,B&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="51.1009%" y="1013" width="0.2752%" height="15" fill="rgb(239,129,19)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1023.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="51.1009%" y="997" width="0.2752%" height="15" fill="rgb(220,106,35)" fg:x="557" fg:w="3"/><text x="51.3509%" y="1007.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (3 samples, 0.28%)</title><rect x="51.1009%" y="981" width="0.2752%" height="15" fill="rgb(252,139,45)" fg:x="557" fg:w="3"/><text x="51.3509%" y="991.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (3 samples, 0.28%)</title><rect x="51.1009%" y="965" width="0.2752%" height="15" fill="rgb(229,8,36)" fg:x="557" fg:w="3"/><text x="51.3509%" y="975.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (3 samples, 0.28%)</title><rect x="51.1009%" y="949" width="0.2752%" height="15" fill="rgb(230,126,33)" fg:x="557" fg:w="3"/><text x="51.3509%" y="959.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (3 samples, 0.28%)</title><rect x="51.1009%" y="933" width="0.2752%" height="15" fill="rgb(239,140,21)" fg:x="557" fg:w="3"/><text x="51.3509%" y="943.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (3 samples, 0.28%)</title><rect x="51.1009%" y="917" width="0.2752%" height="15" fill="rgb(254,104,9)" fg:x="557" fg:w="3"/><text x="51.3509%" y="927.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (3 samples, 0.28%)</title><rect x="51.1009%" y="901" width="0.2752%" height="15" fill="rgb(239,52,14)" fg:x="557" fg:w="3"/><text x="51.3509%" y="911.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (3 samples, 0.28%)</title><rect x="51.1009%" y="885" width="0.2752%" height="15" fill="rgb(208,227,44)" fg:x="557" fg:w="3"/><text x="51.3509%" y="895.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (3 samples, 0.28%)</title><rect x="51.1009%" y="869" width="0.2752%" height="15" fill="rgb(246,18,19)" fg:x="557" fg:w="3"/><text x="51.3509%" y="879.50"></text></g><g><title>&lt;reqwest::connect::Conn as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.28%)</title><rect x="51.1009%" y="853" width="0.2752%" height="15" fill="rgb(235,228,25)" fg:x="557" fg:w="3"/><text x="51.3509%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.28%)</title><rect x="51.1009%" y="837" width="0.2752%" height="15" fill="rgb(240,156,20)" fg:x="557" fg:w="3"/><text x="51.3509%" y="847.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.28%)</title><rect x="51.1009%" y="821" width="0.2752%" height="15" fill="rgb(224,8,20)" fg:x="557" fg:w="3"/><text x="51.3509%" y="831.50"></text></g><g><title>tokio_native_tls::TlsStream&lt;S&gt;::with_context (3 samples, 0.28%)</title><rect x="51.1009%" y="805" width="0.2752%" height="15" fill="rgb(214,12,52)" fg:x="557" fg:w="3"/><text x="51.3509%" y="815.50"></text></g><g><title>native_tls::TlsStream&lt;S&gt;::get_mut (2 samples, 0.18%)</title><rect x="51.1927%" y="789" width="0.1835%" height="15" fill="rgb(211,220,47)" fg:x="558" fg:w="2"/><text x="51.4427%" y="799.50"></text></g><g><title>native_tls::imp::TlsStream&lt;S&gt;::get_mut (2 samples, 0.18%)</title><rect x="51.1927%" y="773" width="0.1835%" height="15" fill="rgb(250,173,5)" fg:x="558" fg:w="2"/><text x="51.4427%" y="783.50"></text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::get_mut (2 samples, 0.18%)</title><rect x="51.1927%" y="757" width="0.1835%" height="15" fill="rgb(250,125,52)" fg:x="558" fg:w="2"/><text x="51.4427%" y="767.50"></text></g><g><title>openssl::ssl::bio::get_mut (1 samples, 0.09%)</title><rect x="51.2844%" y="741" width="0.0917%" height="15" fill="rgb(209,133,18)" fg:x="559" fg:w="1"/><text x="51.5344%" y="751.50"></text></g><g><title>openssl::ssl::bio::state (1 samples, 0.09%)</title><rect x="51.2844%" y="725" width="0.0917%" height="15" fill="rgb(216,173,22)" fg:x="559" fg:w="1"/><text x="51.5344%" y="735.50"></text></g><g><title>BIO_get_data (1 samples, 0.09%)</title><rect x="51.2844%" y="709" width="0.0917%" height="15" fill="rgb(205,3,22)" fg:x="559" fg:w="1"/><text x="51.5344%" y="719.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_flush (1 samples, 0.09%)</title><rect x="51.3761%" y="645" width="0.0917%" height="15" fill="rgb(248,22,20)" fg:x="560" fg:w="1"/><text x="51.6261%" y="655.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (1 samples, 0.09%)</title><rect x="51.3761%" y="629" width="0.0917%" height="15" fill="rgb(233,6,29)" fg:x="560" fg:w="1"/><text x="51.6261%" y="639.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (1 samples, 0.09%)</title><rect x="51.3761%" y="613" width="0.0917%" height="15" fill="rgb(240,22,54)" fg:x="560" fg:w="1"/><text x="51.6261%" y="623.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush_flattened (1 samples, 0.09%)</title><rect x="51.3761%" y="597" width="0.0917%" height="15" fill="rgb(231,133,32)" fg:x="560" fg:w="1"/><text x="51.6261%" y="607.50"></text></g><g><title>&lt;reqwest::connect::Conn as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.09%)</title><rect x="51.3761%" y="581" width="0.0917%" height="15" fill="rgb(248,193,4)" fg:x="560" fg:w="1"/><text x="51.6261%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.09%)</title><rect x="51.3761%" y="565" width="0.0917%" height="15" fill="rgb(211,178,46)" fg:x="560" fg:w="1"/><text x="51.6261%" y="575.50"></text></g><g><title>&lt;reqwest::connect::native_tls_conn::NativeTlsConn&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.09%)</title><rect x="51.3761%" y="549" width="0.0917%" height="15" fill="rgb(224,5,42)" fg:x="560" fg:w="1"/><text x="51.6261%" y="559.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.09%)</title><rect x="51.3761%" y="533" width="0.0917%" height="15" fill="rgb(239,176,25)" fg:x="560" fg:w="1"/><text x="51.6261%" y="543.50"></text></g><g><title>tokio_native_tls::TlsStream&lt;S&gt;::with_context (1 samples, 0.09%)</title><rect x="51.3761%" y="517" width="0.0917%" height="15" fill="rgb(245,187,50)" fg:x="560" fg:w="1"/><text x="51.6261%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio_native_tls::Guard&lt;tokio::net::tcp::stream::TcpStream&gt;&gt; (1 samples, 0.09%)</title><rect x="51.3761%" y="501" width="0.0917%" height="15" fill="rgb(248,24,15)" fg:x="560" fg:w="1"/><text x="51.6261%" y="511.50"></text></g><g><title>&lt;tokio_native_tls::Guard&lt;S&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="51.3761%" y="485" width="0.0917%" height="15" fill="rgb(205,166,13)" fg:x="560" fg:w="1"/><text x="51.6261%" y="495.50"></text></g><g><title>native_tls::TlsStream&lt;S&gt;::get_mut (1 samples, 0.09%)</title><rect x="51.3761%" y="469" width="0.0917%" height="15" fill="rgb(208,114,23)" fg:x="560" fg:w="1"/><text x="51.6261%" y="479.50"></text></g><g><title>native_tls::imp::TlsStream&lt;S&gt;::get_mut (1 samples, 0.09%)</title><rect x="51.3761%" y="453" width="0.0917%" height="15" fill="rgb(239,127,18)" fg:x="560" fg:w="1"/><text x="51.6261%" y="463.50"></text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::get_mut (1 samples, 0.09%)</title><rect x="51.3761%" y="437" width="0.0917%" height="15" fill="rgb(219,154,28)" fg:x="560" fg:w="1"/><text x="51.6261%" y="447.50"></text></g><g><title>SSL_get_rbio (1 samples, 0.09%)</title><rect x="51.3761%" y="421" width="0.0917%" height="15" fill="rgb(225,157,23)" fg:x="560" fg:w="1"/><text x="51.6261%" y="431.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (2 samples, 0.18%)</title><rect x="51.3761%" y="1509" width="0.1835%" height="15" fill="rgb(219,8,6)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1519.50"></text></g><g><title>tokio::runtime::blocking::pool::Task::run (2 samples, 0.18%)</title><rect x="51.3761%" y="1493" width="0.1835%" height="15" fill="rgb(212,47,6)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1503.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (2 samples, 0.18%)</title><rect x="51.3761%" y="1477" width="0.1835%" height="15" fill="rgb(224,190,4)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1487.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (2 samples, 0.18%)</title><rect x="51.3761%" y="1461" width="0.1835%" height="15" fill="rgb(239,183,29)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1471.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.18%)</title><rect x="51.3761%" y="1445" width="0.1835%" height="15" fill="rgb(213,57,7)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1455.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2 samples, 0.18%)</title><rect x="51.3761%" y="1429" width="0.1835%" height="15" fill="rgb(216,148,1)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1439.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2 samples, 0.18%)</title><rect x="51.3761%" y="1413" width="0.1835%" height="15" fill="rgb(236,182,29)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.18%)</title><rect x="51.3761%" y="1397" width="0.1835%" height="15" fill="rgb(244,120,48)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1407.50"></text></g><g><title>std::panicking::try (2 samples, 0.18%)</title><rect x="51.3761%" y="1381" width="0.1835%" height="15" fill="rgb(206,71,34)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.18%)</title><rect x="51.3761%" y="1365" width="0.1835%" height="15" fill="rgb(242,32,6)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1375.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.18%)</title><rect x="51.3761%" y="1349" width="0.1835%" height="15" fill="rgb(241,35,3)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1359.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2 samples, 0.18%)</title><rect x="51.3761%" y="1333" width="0.1835%" height="15" fill="rgb(222,62,19)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1343.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (2 samples, 0.18%)</title><rect x="51.3761%" y="1317" width="0.1835%" height="15" fill="rgb(223,110,41)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1327.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.18%)</title><rect x="51.3761%" y="1301" width="0.1835%" height="15" fill="rgb(208,224,4)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1311.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (2 samples, 0.18%)</title><rect x="51.3761%" y="1285" width="0.1835%" height="15" fill="rgb(241,137,19)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1295.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="51.3761%" y="1269" width="0.1835%" height="15" fill="rgb(244,24,17)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (2 samples, 0.18%)</title><rect x="51.3761%" y="1253" width="0.1835%" height="15" fill="rgb(245,178,49)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1263.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (2 samples, 0.18%)</title><rect x="51.3761%" y="1237" width="0.1835%" height="15" fill="rgb(219,160,38)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1247.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (2 samples, 0.18%)</title><rect x="51.3761%" y="1221" width="0.1835%" height="15" fill="rgb(228,137,14)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1231.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (2 samples, 0.18%)</title><rect x="51.3761%" y="1205" width="0.1835%" height="15" fill="rgb(237,134,11)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1215.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (2 samples, 0.18%)</title><rect x="51.3761%" y="1189" width="0.1835%" height="15" fill="rgb(211,126,44)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1199.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (2 samples, 0.18%)</title><rect x="51.3761%" y="1173" width="0.1835%" height="15" fill="rgb(226,171,33)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1183.50"></text></g><g><title>tokio::coop::budget (2 samples, 0.18%)</title><rect x="51.3761%" y="1157" width="0.1835%" height="15" fill="rgb(253,99,13)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1167.50"></text></g><g><title>tokio::coop::with_budget (2 samples, 0.18%)</title><rect x="51.3761%" y="1141" width="0.1835%" height="15" fill="rgb(244,48,7)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.18%)</title><rect x="51.3761%" y="1125" width="0.1835%" height="15" fill="rgb(244,217,54)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.18%)</title><rect x="51.3761%" y="1109" width="0.1835%" height="15" fill="rgb(224,15,18)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1119.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (2 samples, 0.18%)</title><rect x="51.3761%" y="1093" width="0.1835%" height="15" fill="rgb(244,99,12)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1103.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (2 samples, 0.18%)</title><rect x="51.3761%" y="1077" width="0.1835%" height="15" fill="rgb(233,226,8)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1087.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (2 samples, 0.18%)</title><rect x="51.3761%" y="1061" width="0.1835%" height="15" fill="rgb(229,211,3)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1071.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (2 samples, 0.18%)</title><rect x="51.3761%" y="1045" width="0.1835%" height="15" fill="rgb(216,140,21)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1055.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.18%)</title><rect x="51.3761%" y="1029" width="0.1835%" height="15" fill="rgb(234,122,30)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1039.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2 samples, 0.18%)</title><rect x="51.3761%" y="1013" width="0.1835%" height="15" fill="rgb(236,25,46)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2 samples, 0.18%)</title><rect x="51.3761%" y="997" width="0.1835%" height="15" fill="rgb(217,52,54)" fg:x="560" fg:w="2"/><text x="51.6261%" y="1007.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.18%)</title><rect x="51.3761%" y="981" width="0.1835%" height="15" fill="rgb(222,29,26)" fg:x="560" fg:w="2"/><text x="51.6261%" y="991.50"></text></g><g><title>std::panicking::try (2 samples, 0.18%)</title><rect x="51.3761%" y="965" width="0.1835%" height="15" fill="rgb(216,177,29)" fg:x="560" fg:w="2"/><text x="51.6261%" y="975.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.18%)</title><rect x="51.3761%" y="949" width="0.1835%" height="15" fill="rgb(247,136,51)" fg:x="560" fg:w="2"/><text x="51.6261%" y="959.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.18%)</title><rect x="51.3761%" y="933" width="0.1835%" height="15" fill="rgb(231,47,47)" fg:x="560" fg:w="2"/><text x="51.6261%" y="943.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2 samples, 0.18%)</title><rect x="51.3761%" y="917" width="0.1835%" height="15" fill="rgb(211,192,36)" fg:x="560" fg:w="2"/><text x="51.6261%" y="927.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (2 samples, 0.18%)</title><rect x="51.3761%" y="901" width="0.1835%" height="15" fill="rgb(229,156,32)" fg:x="560" fg:w="2"/><text x="51.6261%" y="911.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.18%)</title><rect x="51.3761%" y="885" width="0.1835%" height="15" fill="rgb(248,213,20)" fg:x="560" fg:w="2"/><text x="51.6261%" y="895.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (2 samples, 0.18%)</title><rect x="51.3761%" y="869" width="0.1835%" height="15" fill="rgb(217,64,7)" fg:x="560" fg:w="2"/><text x="51.6261%" y="879.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="51.3761%" y="853" width="0.1835%" height="15" fill="rgb(232,142,8)" fg:x="560" fg:w="2"/><text x="51.6261%" y="863.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="51.3761%" y="837" width="0.1835%" height="15" fill="rgb(224,92,44)" fg:x="560" fg:w="2"/><text x="51.6261%" y="847.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="51.3761%" y="821" width="0.1835%" height="15" fill="rgb(214,169,17)" fg:x="560" fg:w="2"/><text x="51.6261%" y="831.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="51.3761%" y="805" width="0.1835%" height="15" fill="rgb(210,59,37)" fg:x="560" fg:w="2"/><text x="51.6261%" y="815.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="51.3761%" y="789" width="0.1835%" height="15" fill="rgb(214,116,48)" fg:x="560" fg:w="2"/><text x="51.6261%" y="799.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="51.3761%" y="773" width="0.1835%" height="15" fill="rgb(244,191,6)" fg:x="560" fg:w="2"/><text x="51.6261%" y="783.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (2 samples, 0.18%)</title><rect x="51.3761%" y="757" width="0.1835%" height="15" fill="rgb(241,50,52)" fg:x="560" fg:w="2"/><text x="51.6261%" y="767.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="51.3761%" y="741" width="0.1835%" height="15" fill="rgb(236,75,39)" fg:x="560" fg:w="2"/><text x="51.6261%" y="751.50"></text></g><g><title>&lt;hyper::client::conn::ProtoClient&lt;T,B&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="51.3761%" y="725" width="0.1835%" height="15" fill="rgb(236,99,0)" fg:x="560" fg:w="2"/><text x="51.6261%" y="735.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="51.3761%" y="709" width="0.1835%" height="15" fill="rgb(207,202,15)" fg:x="560" fg:w="2"/><text x="51.6261%" y="719.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (2 samples, 0.18%)</title><rect x="51.3761%" y="693" width="0.1835%" height="15" fill="rgb(233,207,14)" fg:x="560" fg:w="2"/><text x="51.6261%" y="703.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (2 samples, 0.18%)</title><rect x="51.3761%" y="677" width="0.1835%" height="15" fill="rgb(226,27,51)" fg:x="560" fg:w="2"/><text x="51.6261%" y="687.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (2 samples, 0.18%)</title><rect x="51.3761%" y="661" width="0.1835%" height="15" fill="rgb(206,104,42)" fg:x="560" fg:w="2"/><text x="51.6261%" y="671.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (1 samples, 0.09%)</title><rect x="51.4679%" y="645" width="0.0917%" height="15" fill="rgb(212,225,4)" fg:x="561" fg:w="1"/><text x="51.7179%" y="655.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (1 samples, 0.09%)</title><rect x="51.4679%" y="629" width="0.0917%" height="15" fill="rgb(233,96,42)" fg:x="561" fg:w="1"/><text x="51.7179%" y="639.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::require_empty_read (1 samples, 0.09%)</title><rect x="51.4679%" y="613" width="0.0917%" height="15" fill="rgb(229,21,32)" fg:x="561" fg:w="1"/><text x="51.7179%" y="623.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (1 samples, 0.09%)</title><rect x="51.4679%" y="597" width="0.0917%" height="15" fill="rgb(226,216,24)" fg:x="561" fg:w="1"/><text x="51.7179%" y="607.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1 samples, 0.09%)</title><rect x="51.4679%" y="581" width="0.0917%" height="15" fill="rgb(221,163,17)" fg:x="561" fg:w="1"/><text x="51.7179%" y="591.50"></text></g><g><title>&lt;reqwest::connect::Conn as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="51.4679%" y="565" width="0.0917%" height="15" fill="rgb(216,216,42)" fg:x="561" fg:w="1"/><text x="51.7179%" y="575.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="51.4679%" y="549" width="0.0917%" height="15" fill="rgb(240,118,7)" fg:x="561" fg:w="1"/><text x="51.7179%" y="559.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="51.4679%" y="533" width="0.0917%" height="15" fill="rgb(221,67,37)" fg:x="561" fg:w="1"/><text x="51.7179%" y="543.50"></text></g><g><title>tokio_native_tls::TlsStream&lt;S&gt;::with_context (1 samples, 0.09%)</title><rect x="51.4679%" y="517" width="0.0917%" height="15" fill="rgb(241,32,44)" fg:x="561" fg:w="1"/><text x="51.7179%" y="527.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::{{closure}} (1 samples, 0.09%)</title><rect x="51.4679%" y="501" width="0.0917%" height="15" fill="rgb(235,204,43)" fg:x="561" fg:w="1"/><text x="51.7179%" y="511.50"></text></g><g><title>&lt;native_tls::TlsStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.09%)</title><rect x="51.4679%" y="485" width="0.0917%" height="15" fill="rgb(213,116,10)" fg:x="561" fg:w="1"/><text x="51.7179%" y="495.50"></text></g><g><title>&lt;native_tls::imp::TlsStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.09%)</title><rect x="51.4679%" y="469" width="0.0917%" height="15" fill="rgb(239,15,48)" fg:x="561" fg:w="1"/><text x="51.7179%" y="479.50"></text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.09%)</title><rect x="51.4679%" y="453" width="0.0917%" height="15" fill="rgb(207,123,36)" fg:x="561" fg:w="1"/><text x="51.7179%" y="463.50"></text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::ssl_read (1 samples, 0.09%)</title><rect x="51.4679%" y="437" width="0.0917%" height="15" fill="rgb(209,103,30)" fg:x="561" fg:w="1"/><text x="51.7179%" y="447.50"></text></g><g><title>SSL_read (1 samples, 0.09%)</title><rect x="51.4679%" y="421" width="0.0917%" height="15" fill="rgb(238,100,19)" fg:x="561" fg:w="1"/><text x="51.7179%" y="431.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.09%)</title><rect x="51.4679%" y="405" width="0.0917%" height="15" fill="rgb(244,30,14)" fg:x="561" fg:w="1"/><text x="51.7179%" y="415.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.09%)</title><rect x="51.4679%" y="389" width="0.0917%" height="15" fill="rgb(249,174,6)" fg:x="561" fg:w="1"/><text x="51.7179%" y="399.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.09%)</title><rect x="51.4679%" y="373" width="0.0917%" height="15" fill="rgb(235,213,41)" fg:x="561" fg:w="1"/><text x="51.7179%" y="383.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.09%)</title><rect x="51.4679%" y="357" width="0.0917%" height="15" fill="rgb(213,118,6)" fg:x="561" fg:w="1"/><text x="51.7179%" y="367.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.09%)</title><rect x="51.4679%" y="341" width="0.0917%" height="15" fill="rgb(235,44,51)" fg:x="561" fg:w="1"/><text x="51.7179%" y="351.50"></text></g><g><title>CRYPTO_free (1 samples, 0.09%)</title><rect x="51.4679%" y="325" width="0.0917%" height="15" fill="rgb(217,9,53)" fg:x="561" fg:w="1"/><text x="51.7179%" y="335.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="52.7523%" y="853" width="0.0917%" height="15" fill="rgb(237,172,34)" fg:x="575" fg:w="1"/><text x="53.0023%" y="863.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="52.7523%" y="885" width="0.1835%" height="15" fill="rgb(206,206,11)" fg:x="575" fg:w="2"/><text x="53.0023%" y="895.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="52.7523%" y="869" width="0.1835%" height="15" fill="rgb(214,149,29)" fg:x="575" fg:w="2"/><text x="53.0023%" y="879.50"></text></g><g><title>core::pin::Pin&lt;&amp;mut core::pin::Pin&lt;P&gt;&gt;::as_deref_mut (1 samples, 0.09%)</title><rect x="52.8440%" y="853" width="0.0917%" height="15" fill="rgb(208,123,3)" fg:x="576" fg:w="1"/><text x="53.0940%" y="863.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (1 samples, 0.09%)</title><rect x="52.8440%" y="837" width="0.0917%" height="15" fill="rgb(229,126,4)" fg:x="576" fg:w="1"/><text x="53.0940%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.09%)</title><rect x="52.8440%" y="821" width="0.0917%" height="15" fill="rgb(222,92,36)" fg:x="576" fg:w="1"/><text x="53.0940%" y="831.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="52.7523%" y="965" width="0.2752%" height="15" fill="rgb(216,39,41)" fg:x="575" fg:w="3"/><text x="53.0023%" y="975.50"></text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (3 samples, 0.28%)</title><rect x="52.7523%" y="949" width="0.2752%" height="15" fill="rgb(253,127,28)" fg:x="575" fg:w="3"/><text x="53.0023%" y="959.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (3 samples, 0.28%)</title><rect x="52.7523%" y="933" width="0.2752%" height="15" fill="rgb(249,152,51)" fg:x="575" fg:w="3"/><text x="53.0023%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.28%)</title><rect x="52.7523%" y="917" width="0.2752%" height="15" fill="rgb(209,123,42)" fg:x="575" fg:w="3"/><text x="53.0023%" y="927.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.28%)</title><rect x="52.7523%" y="901" width="0.2752%" height="15" fill="rgb(241,118,22)" fg:x="575" fg:w="3"/><text x="53.0023%" y="911.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="52.9358%" y="885" width="0.0917%" height="15" fill="rgb(208,25,7)" fg:x="577" fg:w="1"/><text x="53.1858%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.09%)</title><rect x="53.0275%" y="965" width="0.0917%" height="15" fill="rgb(243,144,39)" fg:x="578" fg:w="1"/><text x="53.2775%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;futures_channel::mpsc::SenderTask&gt;&gt; (1 samples, 0.09%)</title><rect x="53.0275%" y="949" width="0.0917%" height="15" fill="rgb(250,50,5)" fg:x="578" fg:w="1"/><text x="53.2775%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::mutex::MovableMutex&gt; (1 samples, 0.09%)</title><rect x="53.0275%" y="933" width="0.0917%" height="15" fill="rgb(207,67,11)" fg:x="578" fg:w="1"/><text x="53.2775%" y="943.50"></text></g><g><title>___pthread_mutex_destroy (1 samples, 0.09%)</title><rect x="53.0275%" y="917" width="0.0917%" height="15" fill="rgb(245,204,40)" fg:x="578" fg:w="1"/><text x="53.2775%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::Sender&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="53.1193%" y="965" width="0.0917%" height="15" fill="rgb(238,228,24)" fg:x="579" fg:w="1"/><text x="53.3693%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;futures_channel::mpsc::BoundedSenderInner&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="53.1193%" y="949" width="0.0917%" height="15" fill="rgb(217,116,22)" fg:x="579" fg:w="1"/><text x="53.3693%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::BoundedSenderInner&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="53.1193%" y="933" width="0.0917%" height="15" fill="rgb(234,98,12)" fg:x="579" fg:w="1"/><text x="53.3693%" y="943.50"></text></g><g><title>&lt;futures_channel::mpsc::BoundedSenderInner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="53.1193%" y="917" width="0.0917%" height="15" fill="rgb(242,170,50)" fg:x="579" fg:w="1"/><text x="53.3693%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.64%)</title><rect x="52.6606%" y="997" width="0.6422%" height="15" fill="rgb(235,7,5)" fg:x="574" fg:w="7"/><text x="52.9106%" y="1007.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_core::postgres::connection::PgConnection&gt;::fetch_many::{{closure}}::{{closure}} (7 samples, 0.64%)</title><rect x="52.6606%" y="981" width="0.6422%" height="15" fill="rgb(241,114,28)" fg:x="574" fg:w="7"/><text x="52.9106%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="53.2110%" y="965" width="0.0917%" height="15" fill="rgb(246,112,42)" fg:x="580" fg:w="1"/><text x="53.4610%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::Receiver&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="53.2110%" y="949" width="0.0917%" height="15" fill="rgb(248,228,14)" fg:x="580" fg:w="1"/><text x="53.4610%" y="959.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="53.2110%" y="933" width="0.0917%" height="15" fill="rgb(208,133,18)" fg:x="580" fg:w="1"/><text x="53.4610%" y="943.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::close (1 samples, 0.09%)</title><rect x="53.2110%" y="917" width="0.0917%" height="15" fill="rgb(207,35,49)" fg:x="580" fg:w="1"/><text x="53.4610%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.09%)</title><rect x="53.3028%" y="997" width="0.0917%" height="15" fill="rgb(205,68,36)" fg:x="581" fg:w="1"/><text x="53.5528%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;futures_channel::mpsc::SenderTask&gt;&gt; (1 samples, 0.09%)</title><rect x="53.3028%" y="981" width="0.0917%" height="15" fill="rgb(245,62,40)" fg:x="581" fg:w="1"/><text x="53.5528%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::mutex::MovableMutex&gt; (1 samples, 0.09%)</title><rect x="53.3028%" y="965" width="0.0917%" height="15" fill="rgb(228,27,24)" fg:x="581" fg:w="1"/><text x="53.5528%" y="975.50"></text></g><g><title>___pthread_mutex_destroy (1 samples, 0.09%)</title><rect x="53.3028%" y="949" width="0.0917%" height="15" fill="rgb(253,19,12)" fg:x="581" fg:w="1"/><text x="53.5528%" y="959.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (12 samples, 1.10%)</title><rect x="52.3853%" y="1077" width="1.1009%" height="15" fill="rgb(232,28,20)" fg:x="571" fg:w="12"/><text x="52.6353%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (12 samples, 1.10%)</title><rect x="52.3853%" y="1061" width="1.1009%" height="15" fill="rgb(218,35,51)" fg:x="571" fg:w="12"/><text x="52.6353%" y="1071.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (12 samples, 1.10%)</title><rect x="52.3853%" y="1045" width="1.1009%" height="15" fill="rgb(212,90,40)" fg:x="571" fg:w="12"/><text x="52.6353%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.92%)</title><rect x="52.5688%" y="1029" width="0.9174%" height="15" fill="rgb(220,172,12)" fg:x="573" fg:w="10"/><text x="52.8188%" y="1039.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (10 samples, 0.92%)</title><rect x="52.5688%" y="1013" width="0.9174%" height="15" fill="rgb(226,159,20)" fg:x="573" fg:w="10"/><text x="52.8188%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_core::postgres::connection::PgConnection&gt;::fetch_many&lt;&amp;str&gt;::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.09%)</title><rect x="53.3945%" y="997" width="0.0917%" height="15" fill="rgb(234,205,16)" fg:x="582" fg:w="1"/><text x="53.6445%" y="1007.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (15 samples, 1.38%)</title><rect x="52.2936%" y="1125" width="1.3761%" height="15" fill="rgb(207,9,39)" fg:x="570" fg:w="15"/><text x="52.5436%" y="1135.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (15 samples, 1.38%)</title><rect x="52.2936%" y="1109" width="1.3761%" height="15" fill="rgb(249,143,15)" fg:x="570" fg:w="15"/><text x="52.5436%" y="1119.50"></text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (15 samples, 1.38%)</title><rect x="52.2936%" y="1093" width="1.3761%" height="15" fill="rgb(253,133,29)" fg:x="570" fg:w="15"/><text x="52.5436%" y="1103.50"></text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.18%)</title><rect x="53.4862%" y="1077" width="0.1835%" height="15" fill="rgb(221,187,0)" fg:x="583" fg:w="2"/><text x="53.7362%" y="1087.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.09%)</title><rect x="53.5780%" y="1061" width="0.0917%" height="15" fill="rgb(205,204,26)" fg:x="584" fg:w="1"/><text x="53.8280%" y="1071.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (1 samples, 0.09%)</title><rect x="53.5780%" y="1045" width="0.0917%" height="15" fill="rgb(224,68,54)" fg:x="584" fg:w="1"/><text x="53.8280%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.09%)</title><rect x="53.5780%" y="1029" width="0.0917%" height="15" fill="rgb(209,67,4)" fg:x="584" fg:w="1"/><text x="53.8280%" y="1039.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.18%)</title><rect x="53.6697%" y="1125" width="0.1835%" height="15" fill="rgb(228,229,18)" fg:x="585" fg:w="2"/><text x="53.9197%" y="1135.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (24 samples, 2.20%)</title><rect x="51.9266%" y="1237" width="2.2018%" height="15" fill="rgb(231,89,13)" fg:x="566" fg:w="24"/><text x="52.1766%" y="1247.50">&lt;..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (24 samples, 2.20%)</title><rect x="51.9266%" y="1221" width="2.2018%" height="15" fill="rgb(210,182,18)" fg:x="566" fg:w="24"/><text x="52.1766%" y="1231.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (24 samples, 2.20%)</title><rect x="51.9266%" y="1205" width="2.2018%" height="15" fill="rgb(240,105,2)" fg:x="566" fg:w="24"/><text x="52.1766%" y="1215.50">&lt;..</text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (24 samples, 2.20%)</title><rect x="51.9266%" y="1189" width="2.2018%" height="15" fill="rgb(207,170,50)" fg:x="566" fg:w="24"/><text x="52.1766%" y="1199.50">&lt;..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (21 samples, 1.93%)</title><rect x="52.2018%" y="1173" width="1.9266%" height="15" fill="rgb(232,133,24)" fg:x="569" fg:w="21"/><text x="52.4518%" y="1183.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (21 samples, 1.93%)</title><rect x="52.2018%" y="1157" width="1.9266%" height="15" fill="rgb(235,166,27)" fg:x="569" fg:w="21"/><text x="52.4518%" y="1167.50">&lt;..</text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (21 samples, 1.93%)</title><rect x="52.2018%" y="1141" width="1.9266%" height="15" fill="rgb(209,19,13)" fg:x="569" fg:w="21"/><text x="52.4518%" y="1151.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::as_pin_mut (3 samples, 0.28%)</title><rect x="53.8532%" y="1125" width="0.2752%" height="15" fill="rgb(226,79,39)" fg:x="587" fg:w="3"/><text x="54.1032%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (3 samples, 0.28%)</title><rect x="53.8532%" y="1109" width="0.2752%" height="15" fill="rgb(222,163,10)" fg:x="587" fg:w="3"/><text x="54.1032%" y="1119.50"></text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project (7 samples, 0.64%)</title><rect x="54.1284%" y="1237" width="0.6422%" height="15" fill="rgb(214,44,19)" fg:x="590" fg:w="7"/><text x="54.3784%" y="1247.50"></text></g><g><title>__free (1 samples, 0.09%)</title><rect x="54.7706%" y="1125" width="0.0917%" height="15" fill="rgb(210,217,13)" fg:x="597" fg:w="1"/><text x="55.0206%" y="1135.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (37 samples, 3.39%)</title><rect x="51.5596%" y="1301" width="3.3945%" height="15" fill="rgb(237,61,54)" fg:x="562" fg:w="37"/><text x="51.8096%" y="1311.50">&lt;co..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (37 samples, 3.39%)</title><rect x="51.5596%" y="1285" width="3.3945%" height="15" fill="rgb(226,184,24)" fg:x="562" fg:w="37"/><text x="51.8096%" y="1295.50">&lt;fu..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (34 samples, 3.12%)</title><rect x="51.8349%" y="1269" width="3.1193%" height="15" fill="rgb(223,226,4)" fg:x="565" fg:w="34"/><text x="52.0849%" y="1279.50">&lt;fu..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (34 samples, 3.12%)</title><rect x="51.8349%" y="1253" width="3.1193%" height="15" fill="rgb(210,26,41)" fg:x="565" fg:w="34"/><text x="52.0849%" y="1263.50">&lt;fu..</text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project_replace (2 samples, 0.18%)</title><rect x="54.7706%" y="1237" width="0.1835%" height="15" fill="rgb(220,221,6)" fg:x="597" fg:w="2"/><text x="55.0206%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;(pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;futures_util::future::try_future::into_future::IntoFuture&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt;&gt;,())&gt; (2 samples, 0.18%)</title><rect x="54.7706%" y="1221" width="0.1835%" height="15" fill="rgb(225,89,49)" fg:x="597" fg:w="2"/><text x="55.0206%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;futures_util::future::try_future::into_future::IntoFuture&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt;&gt;&gt; (2 samples, 0.18%)</title><rect x="54.7706%" y="1205" width="0.1835%" height="15" fill="rgb(218,70,45)" fg:x="597" fg:w="2"/><text x="55.0206%" y="1215.50"></text></g><g><title>&lt;pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.18%)</title><rect x="54.7706%" y="1189" width="0.1835%" height="15" fill="rgb(238,166,21)" fg:x="597" fg:w="2"/><text x="55.0206%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::try_future::into_future::IntoFuture&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt;&gt; (2 samples, 0.18%)</title><rect x="54.7706%" y="1173" width="0.1835%" height="15" fill="rgb(224,141,44)" fg:x="597" fg:w="2"/><text x="55.0206%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (2 samples, 0.18%)</title><rect x="54.7706%" y="1157" width="0.1835%" height="15" fill="rgb(230,12,49)" fg:x="597" fg:w="2"/><text x="55.0206%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (2 samples, 0.18%)</title><rect x="54.7706%" y="1141" width="0.1835%" height="15" fill="rgb(212,174,12)" fg:x="597" fg:w="2"/><text x="55.0206%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;,sqlx_core::postgres::query_result::PgQueryResult&gt;&gt; (1 samples, 0.09%)</title><rect x="54.8624%" y="1125" width="0.0917%" height="15" fill="rgb(246,67,9)" fg:x="598" fg:w="1"/><text x="55.1124%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="54.8624%" y="1109" width="0.0917%" height="15" fill="rgb(239,35,23)" fg:x="598" fg:w="1"/><text x="55.1124%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (1 samples, 0.09%)</title><rect x="54.8624%" y="1093" width="0.0917%" height="15" fill="rgb(211,167,0)" fg:x="598" fg:w="1"/><text x="55.1124%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;,core::future::from_generator::GenFuture&lt;&lt;&amp;mut sqlx_core::postgres::connection::PgConnection as sqlx_core::executor::Executor&gt;::execute_many&lt;sqlx_core::query::Query&lt;sqlx_core::postgres::database::Postgres,sqlx_core::postgres::arguments::PgArguments&gt;&gt;::{{closure}}::{{closure}}&gt;,&lt;&amp;mut sqlx_core::postgres::connection::PgConnection as sqlx_core::executor::Executor&gt;::execute_many&lt;sqlx_core::query::Query&lt;sqlx_core::postgres::database::Postgres,sqlx_core::postgres::arguments::PgArguments&gt;&gt;::{{closure}}&gt;&gt; (1 samples, 0.09%)</title><rect x="54.8624%" y="1077" width="0.0917%" height="15" fill="rgb(225,119,45)" fg:x="598" fg:w="1"/><text x="55.1124%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="54.8624%" y="1061" width="0.0917%" height="15" fill="rgb(210,162,6)" fg:x="598" fg:w="1"/><text x="55.1124%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;+core::marker::Send&gt;&gt; (1 samples, 0.09%)</title><rect x="54.8624%" y="1045" width="0.0917%" height="15" fill="rgb(208,118,35)" fg:x="598" fg:w="1"/><text x="55.1124%" y="1055.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.09%)</title><rect x="54.8624%" y="1029" width="0.0917%" height="15" fill="rgb(239,4,53)" fg:x="598" fg:w="1"/><text x="55.1124%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="54.8624%" y="1013" width="0.0917%" height="15" fill="rgb(213,130,21)" fg:x="598" fg:w="1"/><text x="55.1124%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="54.8624%" y="997" width="0.0917%" height="15" fill="rgb(235,148,0)" fg:x="598" fg:w="1"/><text x="55.1124%" y="1007.50"></text></g><g><title>__rust_dealloc (1 samples, 0.09%)</title><rect x="54.8624%" y="981" width="0.0917%" height="15" fill="rgb(244,224,18)" fg:x="598" fg:w="1"/><text x="55.1124%" y="991.50"></text></g><g><title>&lt;sqlx_core::postgres::connection::PgConnection as sqlx_core::connection::Connection&gt;::ping (2 samples, 0.18%)</title><rect x="54.9541%" y="1301" width="0.1835%" height="15" fill="rgb(211,214,4)" fg:x="599" fg:w="2"/><text x="55.2041%" y="1311.50"></text></g><g><title>sqlx_core::executor::Executor::execute (2 samples, 0.18%)</title><rect x="54.9541%" y="1285" width="0.1835%" height="15" fill="rgb(206,119,25)" fg:x="599" fg:w="2"/><text x="55.2041%" y="1295.50"></text></g><g><title>sqlx_core::executor::Executor::execute_many (2 samples, 0.18%)</title><rect x="54.9541%" y="1269" width="0.1835%" height="15" fill="rgb(243,93,47)" fg:x="599" fg:w="2"/><text x="55.2041%" y="1279.50"></text></g><g><title>futures_util::stream::stream::StreamExt::boxed (1 samples, 0.09%)</title><rect x="55.0459%" y="1253" width="0.0917%" height="15" fill="rgb(224,194,6)" fg:x="600" fg:w="1"/><text x="55.2959%" y="1263.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.09%)</title><rect x="55.0459%" y="1237" width="0.0917%" height="15" fill="rgb(243,229,6)" fg:x="600" fg:w="1"/><text x="55.2959%" y="1247.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.09%)</title><rect x="55.0459%" y="1221" width="0.0917%" height="15" fill="rgb(207,23,50)" fg:x="600" fg:w="1"/><text x="55.2959%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="55.0459%" y="1205" width="0.0917%" height="15" fill="rgb(253,192,32)" fg:x="600" fg:w="1"/><text x="55.2959%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="55.0459%" y="1189" width="0.0917%" height="15" fill="rgb(213,21,6)" fg:x="600" fg:w="1"/><text x="55.2959%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="55.0459%" y="1173" width="0.0917%" height="15" fill="rgb(243,151,13)" fg:x="600" fg:w="1"/><text x="55.2959%" y="1183.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="55.0459%" y="1157" width="0.0917%" height="15" fill="rgb(233,165,41)" fg:x="600" fg:w="1"/><text x="55.2959%" y="1167.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="55.0459%" y="1141" width="0.0917%" height="15" fill="rgb(246,176,45)" fg:x="600" fg:w="1"/><text x="55.2959%" y="1151.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.18%)</title><rect x="55.1376%" y="1301" width="0.1835%" height="15" fill="rgb(217,170,52)" fg:x="601" fg:w="2"/><text x="55.3876%" y="1311.50"></text></g><g><title>__memmove_avx_unaligned (3 samples, 0.28%)</title><rect x="55.3211%" y="1301" width="0.2752%" height="15" fill="rgb(214,203,54)" fg:x="603" fg:w="3"/><text x="55.5711%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;sqlx_core::pool::inner::SharedPool&lt;sqlx_core::postgres::database::Postgres&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="55.5963%" y="1301" width="0.0917%" height="15" fill="rgb(248,215,49)" fg:x="606" fg:w="1"/><text x="55.8463%" y="1311.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="55.5963%" y="1285" width="0.0917%" height="15" fill="rgb(208,46,10)" fg:x="606" fg:w="1"/><text x="55.8463%" y="1295.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (46 samples, 4.22%)</title><rect x="51.5596%" y="1333" width="4.2202%" height="15" fill="rgb(254,5,31)" fg:x="562" fg:w="46"/><text x="51.8096%" y="1343.50">&lt;core..</text></g><g><title>sqlx_core::pool::connection::PoolConnection&lt;DB&gt;::return_to_pool::{{closure}} (46 samples, 4.22%)</title><rect x="51.5596%" y="1317" width="4.2202%" height="15" fill="rgb(222,104,33)" fg:x="562" fg:w="46"/><text x="51.8096%" y="1327.50">sqlx_..</text></g><g><title>sqlx_core::pool::inner::SharedPool&lt;DB&gt;::release (1 samples, 0.09%)</title><rect x="55.6881%" y="1301" width="0.0917%" height="15" fill="rgb(248,49,16)" fg:x="607" fg:w="1"/><text x="55.9381%" y="1311.50"></text></g><g><title>CRYPTO_malloc (1 samples, 0.09%)</title><rect x="55.7798%" y="837" width="0.0917%" height="15" fill="rgb(232,198,41)" fg:x="608" fg:w="1"/><text x="56.0298%" y="847.50"></text></g><g><title>BIO_read (2 samples, 0.18%)</title><rect x="55.8716%" y="821" width="0.1835%" height="15" fill="rgb(214,125,3)" fg:x="609" fg:w="2"/><text x="56.1216%" y="831.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="55.9633%" y="805" width="0.0917%" height="15" fill="rgb(229,220,28)" fg:x="610" fg:w="1"/><text x="56.2133%" y="815.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="55.9633%" y="789" width="0.0917%" height="15" fill="rgb(222,64,37)" fg:x="610" fg:w="1"/><text x="56.2133%" y="799.50"></text></g><g><title>openssl::ssl::bio::bread (1 samples, 0.09%)</title><rect x="55.9633%" y="773" width="0.0917%" height="15" fill="rgb(249,184,13)" fg:x="610" fg:w="1"/><text x="56.2133%" y="783.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.09%)</title><rect x="55.9633%" y="757" width="0.0917%" height="15" fill="rgb(252,176,6)" fg:x="610" fg:w="1"/><text x="56.2133%" y="767.50"></text></g><g><title>std::panicking::try (1 samples, 0.09%)</title><rect x="55.9633%" y="741" width="0.0917%" height="15" fill="rgb(228,153,7)" fg:x="610" fg:w="1"/><text x="56.2133%" y="751.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.09%)</title><rect x="55.9633%" y="725" width="0.0917%" height="15" fill="rgb(242,193,5)" fg:x="610" fg:w="1"/><text x="56.2133%" y="735.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.09%)</title><rect x="55.9633%" y="709" width="0.0917%" height="15" fill="rgb(232,140,9)" fg:x="610" fg:w="1"/><text x="56.2133%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.09%)</title><rect x="55.9633%" y="693" width="0.0917%" height="15" fill="rgb(213,222,16)" fg:x="610" fg:w="1"/><text x="56.2133%" y="703.50"></text></g><g><title>openssl::ssl::bio::bread::{{closure}} (1 samples, 0.09%)</title><rect x="55.9633%" y="677" width="0.0917%" height="15" fill="rgb(222,75,50)" fg:x="610" fg:w="1"/><text x="56.2133%" y="687.50"></text></g><g><title>&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.09%)</title><rect x="55.9633%" y="661" width="0.0917%" height="15" fill="rgb(205,180,2)" fg:x="610" fg:w="1"/><text x="56.2133%" y="671.50"></text></g><g><title>tokio_native_tls::AllowStd&lt;S&gt;::with_context (1 samples, 0.09%)</title><rect x="55.9633%" y="645" width="0.0917%" height="15" fill="rgb(216,34,7)" fg:x="610" fg:w="1"/><text x="56.2133%" y="655.50"></text></g><g><title>&lt;tokio_native_tls::AllowStd&lt;S&gt; as std::io::Read&gt;::read::{{closure}} (1 samples, 0.09%)</title><rect x="55.9633%" y="629" width="0.0917%" height="15" fill="rgb(253,16,32)" fg:x="610" fg:w="1"/><text x="56.2133%" y="639.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="55.9633%" y="613" width="0.0917%" height="15" fill="rgb(208,97,28)" fg:x="610" fg:w="1"/><text x="56.2133%" y="623.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (1 samples, 0.09%)</title><rect x="55.9633%" y="597" width="0.0917%" height="15" fill="rgb(225,92,11)" fg:x="610" fg:w="1"/><text x="56.2133%" y="607.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 0.09%)</title><rect x="55.9633%" y="581" width="0.0917%" height="15" fill="rgb(243,38,12)" fg:x="610" fg:w="1"/><text x="56.2133%" y="591.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_read_io (1 samples, 0.09%)</title><rect x="55.9633%" y="565" width="0.0917%" height="15" fill="rgb(208,139,16)" fg:x="610" fg:w="1"/><text x="56.2133%" y="575.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (1 samples, 0.09%)</title><rect x="55.9633%" y="549" width="0.0917%" height="15" fill="rgb(227,24,9)" fg:x="610" fg:w="1"/><text x="56.2133%" y="559.50"></text></g><g><title>EVP_CIPHER_CTX_iv_length (3 samples, 0.28%)</title><rect x="56.0550%" y="821" width="0.2752%" height="15" fill="rgb(206,62,11)" fg:x="611" fg:w="3"/><text x="56.3050%" y="831.50"></text></g><g><title>EVP_CIPHER_flags (1 samples, 0.09%)</title><rect x="56.2385%" y="805" width="0.0917%" height="15" fill="rgb(228,134,27)" fg:x="613" fg:w="1"/><text x="56.4885%" y="815.50"></text></g><g><title>EVP_CipherInit_ex (1 samples, 0.09%)</title><rect x="56.3303%" y="821" width="0.0917%" height="15" fill="rgb(205,55,33)" fg:x="614" fg:w="1"/><text x="56.5803%" y="831.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="56.3303%" y="805" width="0.0917%" height="15" fill="rgb(243,75,43)" fg:x="614" fg:w="1"/><text x="56.5803%" y="815.50"></text></g><g><title>CRYPTO_gcm128_setiv (1 samples, 0.09%)</title><rect x="56.3303%" y="789" width="0.0917%" height="15" fill="rgb(223,27,42)" fg:x="614" fg:w="1"/><text x="56.5803%" y="799.50"></text></g><g><title>CRYPTO_gcm128_decrypt (1 samples, 0.09%)</title><rect x="56.4220%" y="789" width="0.0917%" height="15" fill="rgb(232,189,33)" fg:x="615" fg:w="1"/><text x="56.6720%" y="799.50"></text></g><g><title>CRYPTO_gcm128_decrypt_ctr32 (2 samples, 0.18%)</title><rect x="56.5138%" y="789" width="0.1835%" height="15" fill="rgb(210,9,39)" fg:x="616" fg:w="2"/><text x="56.7638%" y="799.50"></text></g><g><title>[libcrypto.so.1.1] (1 samples, 0.09%)</title><rect x="56.6055%" y="773" width="0.0917%" height="15" fill="rgb(242,85,26)" fg:x="617" fg:w="1"/><text x="56.8555%" y="783.50"></text></g><g><title>EVP_DecryptUpdate (7 samples, 0.64%)</title><rect x="56.4220%" y="821" width="0.6422%" height="15" fill="rgb(248,44,4)" fg:x="615" fg:w="7"/><text x="56.6720%" y="831.50"></text></g><g><title>[libcrypto.so.1.1] (7 samples, 0.64%)</title><rect x="56.4220%" y="805" width="0.6422%" height="15" fill="rgb(250,96,46)" fg:x="615" fg:w="7"/><text x="56.6720%" y="815.50"></text></g><g><title>[libcrypto.so.1.1] (4 samples, 0.37%)</title><rect x="56.6972%" y="789" width="0.3670%" height="15" fill="rgb(229,116,26)" fg:x="618" fg:w="4"/><text x="56.9472%" y="799.50"></text></g><g><title>[libcrypto.so.1.1] (3 samples, 0.28%)</title><rect x="56.7890%" y="773" width="0.2752%" height="15" fill="rgb(246,94,34)" fg:x="619" fg:w="3"/><text x="57.0390%" y="783.50"></text></g><g><title>[libssl.so.1.1] (14 samples, 1.28%)</title><rect x="55.8716%" y="837" width="1.2844%" height="15" fill="rgb(251,73,21)" fg:x="609" fg:w="14"/><text x="56.1216%" y="847.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.09%)</title><rect x="57.0642%" y="821" width="0.0917%" height="15" fill="rgb(254,121,25)" fg:x="622" fg:w="1"/><text x="57.3142%" y="831.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.09%)</title><rect x="57.0642%" y="805" width="0.0917%" height="15" fill="rgb(215,161,49)" fg:x="622" fg:w="1"/><text x="57.3142%" y="815.50"></text></g><g><title>__free (1 samples, 0.09%)</title><rect x="57.0642%" y="789" width="0.0917%" height="15" fill="rgb(221,43,13)" fg:x="622" fg:w="1"/><text x="57.3142%" y="799.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (17 samples, 1.56%)</title><rect x="55.7798%" y="1061" width="1.5596%" height="15" fill="rgb(249,5,37)" fg:x="608" fg:w="17"/><text x="56.0298%" y="1071.50"></text></g><g><title>&lt;reqwest::connect::Conn as tokio::io::async_read::AsyncRead&gt;::poll_read (17 samples, 1.56%)</title><rect x="55.7798%" y="1045" width="1.5596%" height="15" fill="rgb(226,25,44)" fg:x="608" fg:w="17"/><text x="56.0298%" y="1055.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (17 samples, 1.56%)</title><rect x="55.7798%" y="1029" width="1.5596%" height="15" fill="rgb(238,189,16)" fg:x="608" fg:w="17"/><text x="56.0298%" y="1039.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (17 samples, 1.56%)</title><rect x="55.7798%" y="1013" width="1.5596%" height="15" fill="rgb(251,186,8)" fg:x="608" fg:w="17"/><text x="56.0298%" y="1023.50"></text></g><g><title>tokio_native_tls::TlsStream&lt;S&gt;::with_context (17 samples, 1.56%)</title><rect x="55.7798%" y="997" width="1.5596%" height="15" fill="rgb(254,34,31)" fg:x="608" fg:w="17"/><text x="56.0298%" y="1007.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::{{closure}} (17 samples, 1.56%)</title><rect x="55.7798%" y="981" width="1.5596%" height="15" fill="rgb(225,215,27)" fg:x="608" fg:w="17"/><text x="56.0298%" y="991.50"></text></g><g><title>&lt;native_tls::TlsStream&lt;S&gt; as std::io::Read&gt;::read (17 samples, 1.56%)</title><rect x="55.7798%" y="965" width="1.5596%" height="15" fill="rgb(221,192,48)" fg:x="608" fg:w="17"/><text x="56.0298%" y="975.50"></text></g><g><title>&lt;native_tls::imp::TlsStream&lt;S&gt; as std::io::Read&gt;::read (17 samples, 1.56%)</title><rect x="55.7798%" y="949" width="1.5596%" height="15" fill="rgb(219,137,20)" fg:x="608" fg:w="17"/><text x="56.0298%" y="959.50"></text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Read&gt;::read (17 samples, 1.56%)</title><rect x="55.7798%" y="933" width="1.5596%" height="15" fill="rgb(219,84,11)" fg:x="608" fg:w="17"/><text x="56.0298%" y="943.50"></text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::ssl_read (17 samples, 1.56%)</title><rect x="55.7798%" y="917" width="1.5596%" height="15" fill="rgb(224,10,23)" fg:x="608" fg:w="17"/><text x="56.0298%" y="927.50"></text></g><g><title>SSL_read (17 samples, 1.56%)</title><rect x="55.7798%" y="901" width="1.5596%" height="15" fill="rgb(248,22,39)" fg:x="608" fg:w="17"/><text x="56.0298%" y="911.50"></text></g><g><title>[libssl.so.1.1] (17 samples, 1.56%)</title><rect x="55.7798%" y="885" width="1.5596%" height="15" fill="rgb(212,154,20)" fg:x="608" fg:w="17"/><text x="56.0298%" y="895.50"></text></g><g><title>[libssl.so.1.1] (17 samples, 1.56%)</title><rect x="55.7798%" y="869" width="1.5596%" height="15" fill="rgb(236,199,50)" fg:x="608" fg:w="17"/><text x="56.0298%" y="879.50"></text></g><g><title>[libssl.so.1.1] (17 samples, 1.56%)</title><rect x="55.7798%" y="853" width="1.5596%" height="15" fill="rgb(211,9,17)" fg:x="608" fg:w="17"/><text x="56.0298%" y="863.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.18%)</title><rect x="57.1560%" y="837" width="0.1835%" height="15" fill="rgb(243,216,36)" fg:x="623" fg:w="2"/><text x="57.4060%" y="847.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (19 samples, 1.74%)</title><rect x="55.7798%" y="1333" width="1.7431%" height="15" fill="rgb(250,2,10)" fg:x="608" fg:w="19"/><text x="56.0298%" y="1343.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (19 samples, 1.74%)</title><rect x="55.7798%" y="1317" width="1.7431%" height="15" fill="rgb(226,50,48)" fg:x="608" fg:w="19"/><text x="56.0298%" y="1327.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (19 samples, 1.74%)</title><rect x="55.7798%" y="1301" width="1.7431%" height="15" fill="rgb(243,81,16)" fg:x="608" fg:w="19"/><text x="56.0298%" y="1311.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (19 samples, 1.74%)</title><rect x="55.7798%" y="1285" width="1.7431%" height="15" fill="rgb(250,14,2)" fg:x="608" fg:w="19"/><text x="56.0298%" y="1295.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (19 samples, 1.74%)</title><rect x="55.7798%" y="1269" width="1.7431%" height="15" fill="rgb(233,135,29)" fg:x="608" fg:w="19"/><text x="56.0298%" y="1279.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (19 samples, 1.74%)</title><rect x="55.7798%" y="1253" width="1.7431%" height="15" fill="rgb(224,64,43)" fg:x="608" fg:w="19"/><text x="56.0298%" y="1263.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (19 samples, 1.74%)</title><rect x="55.7798%" y="1237" width="1.7431%" height="15" fill="rgb(238,84,13)" fg:x="608" fg:w="19"/><text x="56.0298%" y="1247.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (19 samples, 1.74%)</title><rect x="55.7798%" y="1221" width="1.7431%" height="15" fill="rgb(253,48,26)" fg:x="608" fg:w="19"/><text x="56.0298%" y="1231.50"></text></g><g><title>&lt;hyper::client::conn::ProtoClient&lt;T,B&gt; as core::future::future::Future&gt;::poll (19 samples, 1.74%)</title><rect x="55.7798%" y="1205" width="1.7431%" height="15" fill="rgb(205,223,31)" fg:x="608" fg:w="19"/><text x="56.0298%" y="1215.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (19 samples, 1.74%)</title><rect x="55.7798%" y="1189" width="1.7431%" height="15" fill="rgb(221,41,32)" fg:x="608" fg:w="19"/><text x="56.0298%" y="1199.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (19 samples, 1.74%)</title><rect x="55.7798%" y="1173" width="1.7431%" height="15" fill="rgb(213,158,31)" fg:x="608" fg:w="19"/><text x="56.0298%" y="1183.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (19 samples, 1.74%)</title><rect x="55.7798%" y="1157" width="1.7431%" height="15" fill="rgb(245,126,43)" fg:x="608" fg:w="19"/><text x="56.0298%" y="1167.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (19 samples, 1.74%)</title><rect x="55.7798%" y="1141" width="1.7431%" height="15" fill="rgb(227,7,22)" fg:x="608" fg:w="19"/><text x="56.0298%" y="1151.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (19 samples, 1.74%)</title><rect x="55.7798%" y="1125" width="1.7431%" height="15" fill="rgb(252,90,44)" fg:x="608" fg:w="19"/><text x="56.0298%" y="1135.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (19 samples, 1.74%)</title><rect x="55.7798%" y="1109" width="1.7431%" height="15" fill="rgb(253,91,0)" fg:x="608" fg:w="19"/><text x="56.0298%" y="1119.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (19 samples, 1.74%)</title><rect x="55.7798%" y="1093" width="1.7431%" height="15" fill="rgb(252,175,49)" fg:x="608" fg:w="19"/><text x="56.0298%" y="1103.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (19 samples, 1.74%)</title><rect x="55.7798%" y="1077" width="1.7431%" height="15" fill="rgb(246,150,1)" fg:x="608" fg:w="19"/><text x="56.0298%" y="1087.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (2 samples, 0.18%)</title><rect x="57.3394%" y="1061" width="0.1835%" height="15" fill="rgb(241,192,25)" fg:x="625" fg:w="2"/><text x="57.5894%" y="1071.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::parse (1 samples, 0.09%)</title><rect x="57.4312%" y="1045" width="0.0917%" height="15" fill="rgb(239,187,11)" fg:x="626" fg:w="1"/><text x="57.6812%" y="1055.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body (1 samples, 0.09%)</title><rect x="57.5229%" y="693" width="0.0917%" height="15" fill="rgb(218,202,51)" fg:x="627" fg:w="1"/><text x="57.7729%" y="703.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (1 samples, 0.09%)</title><rect x="57.5229%" y="677" width="0.0917%" height="15" fill="rgb(225,176,8)" fg:x="627" fg:w="1"/><text x="57.7729%" y="687.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::maybe_notify (1 samples, 0.09%)</title><rect x="57.5229%" y="661" width="0.0917%" height="15" fill="rgb(219,122,41)" fg:x="627" fg:w="1"/><text x="57.7729%" y="671.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1 samples, 0.09%)</title><rect x="57.5229%" y="645" width="0.0917%" height="15" fill="rgb(248,140,20)" fg:x="627" fg:w="1"/><text x="57.7729%" y="655.50"></text></g><g><title>&lt;reqwest::connect::Conn as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="57.5229%" y="629" width="0.0917%" height="15" fill="rgb(245,41,37)" fg:x="627" fg:w="1"/><text x="57.7729%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="57.5229%" y="613" width="0.0917%" height="15" fill="rgb(235,82,39)" fg:x="627" fg:w="1"/><text x="57.7729%" y="623.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="57.5229%" y="597" width="0.0917%" height="15" fill="rgb(230,108,42)" fg:x="627" fg:w="1"/><text x="57.7729%" y="607.50"></text></g><g><title>tokio_native_tls::TlsStream&lt;S&gt;::with_context (1 samples, 0.09%)</title><rect x="57.5229%" y="581" width="0.0917%" height="15" fill="rgb(215,150,50)" fg:x="627" fg:w="1"/><text x="57.7729%" y="591.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::{{closure}} (1 samples, 0.09%)</title><rect x="57.5229%" y="565" width="0.0917%" height="15" fill="rgb(233,212,5)" fg:x="627" fg:w="1"/><text x="57.7729%" y="575.50"></text></g><g><title>&lt;native_tls::TlsStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.09%)</title><rect x="57.5229%" y="549" width="0.0917%" height="15" fill="rgb(245,80,22)" fg:x="627" fg:w="1"/><text x="57.7729%" y="559.50"></text></g><g><title>&lt;native_tls::imp::TlsStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.09%)</title><rect x="57.5229%" y="533" width="0.0917%" height="15" fill="rgb(238,129,16)" fg:x="627" fg:w="1"/><text x="57.7729%" y="543.50"></text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.09%)</title><rect x="57.5229%" y="517" width="0.0917%" height="15" fill="rgb(240,19,0)" fg:x="627" fg:w="1"/><text x="57.7729%" y="527.50"></text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::ssl_read (1 samples, 0.09%)</title><rect x="57.5229%" y="501" width="0.0917%" height="15" fill="rgb(232,42,35)" fg:x="627" fg:w="1"/><text x="57.7729%" y="511.50"></text></g><g><title>SSL_read (1 samples, 0.09%)</title><rect x="57.5229%" y="485" width="0.0917%" height="15" fill="rgb(223,130,24)" fg:x="627" fg:w="1"/><text x="57.7729%" y="495.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.09%)</title><rect x="57.5229%" y="469" width="0.0917%" height="15" fill="rgb(237,16,22)" fg:x="627" fg:w="1"/><text x="57.7729%" y="479.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.09%)</title><rect x="57.5229%" y="453" width="0.0917%" height="15" fill="rgb(248,192,20)" fg:x="627" fg:w="1"/><text x="57.7729%" y="463.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.09%)</title><rect x="57.5229%" y="437" width="0.0917%" height="15" fill="rgb(233,167,2)" fg:x="627" fg:w="1"/><text x="57.7729%" y="447.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (68 samples, 6.24%)</title><rect x="51.5596%" y="1365" width="6.2385%" height="15" fill="rgb(252,71,44)" fg:x="562" fg:w="68"/><text x="51.8096%" y="1375.50">tokio::l..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (68 samples, 6.24%)</title><rect x="51.5596%" y="1349" width="6.2385%" height="15" fill="rgb(238,37,47)" fg:x="562" fg:w="68"/><text x="51.8096%" y="1359.50">tokio::r..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="57.5229%" y="1333" width="0.2752%" height="15" fill="rgb(214,202,54)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1343.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (3 samples, 0.28%)</title><rect x="57.5229%" y="1317" width="0.2752%" height="15" fill="rgb(254,165,40)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1327.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (3 samples, 0.28%)</title><rect x="57.5229%" y="1301" width="0.2752%" height="15" fill="rgb(246,173,38)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1311.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (3 samples, 0.28%)</title><rect x="57.5229%" y="1285" width="0.2752%" height="15" fill="rgb(215,3,27)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1295.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (3 samples, 0.28%)</title><rect x="57.5229%" y="1269" width="0.2752%" height="15" fill="rgb(239,169,51)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (3 samples, 0.28%)</title><rect x="57.5229%" y="1253" width="0.2752%" height="15" fill="rgb(212,5,25)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1263.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (3 samples, 0.28%)</title><rect x="57.5229%" y="1237" width="0.2752%" height="15" fill="rgb(243,45,17)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1247.50"></text></g><g><title>tokio::coop::budget (3 samples, 0.28%)</title><rect x="57.5229%" y="1221" width="0.2752%" height="15" fill="rgb(242,97,9)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1231.50"></text></g><g><title>tokio::coop::with_budget (3 samples, 0.28%)</title><rect x="57.5229%" y="1205" width="0.2752%" height="15" fill="rgb(228,71,31)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.28%)</title><rect x="57.5229%" y="1189" width="0.2752%" height="15" fill="rgb(252,184,16)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.28%)</title><rect x="57.5229%" y="1173" width="0.2752%" height="15" fill="rgb(236,169,46)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1183.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (3 samples, 0.28%)</title><rect x="57.5229%" y="1157" width="0.2752%" height="15" fill="rgb(207,17,47)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1167.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (3 samples, 0.28%)</title><rect x="57.5229%" y="1141" width="0.2752%" height="15" fill="rgb(206,201,28)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1151.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (3 samples, 0.28%)</title><rect x="57.5229%" y="1125" width="0.2752%" height="15" fill="rgb(224,184,23)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1135.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (3 samples, 0.28%)</title><rect x="57.5229%" y="1109" width="0.2752%" height="15" fill="rgb(208,139,48)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1119.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3 samples, 0.28%)</title><rect x="57.5229%" y="1093" width="0.2752%" height="15" fill="rgb(208,130,10)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1103.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (3 samples, 0.28%)</title><rect x="57.5229%" y="1077" width="0.2752%" height="15" fill="rgb(211,213,45)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1087.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (3 samples, 0.28%)</title><rect x="57.5229%" y="1061" width="0.2752%" height="15" fill="rgb(235,100,30)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.28%)</title><rect x="57.5229%" y="1045" width="0.2752%" height="15" fill="rgb(206,144,31)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1055.50"></text></g><g><title>std::panicking::try (3 samples, 0.28%)</title><rect x="57.5229%" y="1029" width="0.2752%" height="15" fill="rgb(224,200,26)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.28%)</title><rect x="57.5229%" y="1013" width="0.2752%" height="15" fill="rgb(247,104,53)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.28%)</title><rect x="57.5229%" y="997" width="0.2752%" height="15" fill="rgb(220,14,17)" fg:x="627" fg:w="3"/><text x="57.7729%" y="1007.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (3 samples, 0.28%)</title><rect x="57.5229%" y="981" width="0.2752%" height="15" fill="rgb(230,140,40)" fg:x="627" fg:w="3"/><text x="57.7729%" y="991.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (3 samples, 0.28%)</title><rect x="57.5229%" y="965" width="0.2752%" height="15" fill="rgb(229,2,41)" fg:x="627" fg:w="3"/><text x="57.7729%" y="975.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.28%)</title><rect x="57.5229%" y="949" width="0.2752%" height="15" fill="rgb(232,89,16)" fg:x="627" fg:w="3"/><text x="57.7729%" y="959.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (3 samples, 0.28%)</title><rect x="57.5229%" y="933" width="0.2752%" height="15" fill="rgb(247,59,52)" fg:x="627" fg:w="3"/><text x="57.7729%" y="943.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="57.5229%" y="917" width="0.2752%" height="15" fill="rgb(226,110,21)" fg:x="627" fg:w="3"/><text x="57.7729%" y="927.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="57.5229%" y="901" width="0.2752%" height="15" fill="rgb(224,176,43)" fg:x="627" fg:w="3"/><text x="57.7729%" y="911.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="57.5229%" y="885" width="0.2752%" height="15" fill="rgb(221,73,6)" fg:x="627" fg:w="3"/><text x="57.7729%" y="895.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="57.5229%" y="869" width="0.2752%" height="15" fill="rgb(232,78,19)" fg:x="627" fg:w="3"/><text x="57.7729%" y="879.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="57.5229%" y="853" width="0.2752%" height="15" fill="rgb(233,112,48)" fg:x="627" fg:w="3"/><text x="57.7729%" y="863.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="57.5229%" y="837" width="0.2752%" height="15" fill="rgb(243,131,47)" fg:x="627" fg:w="3"/><text x="57.7729%" y="847.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (3 samples, 0.28%)</title><rect x="57.5229%" y="821" width="0.2752%" height="15" fill="rgb(226,51,1)" fg:x="627" fg:w="3"/><text x="57.7729%" y="831.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="57.5229%" y="805" width="0.2752%" height="15" fill="rgb(247,58,7)" fg:x="627" fg:w="3"/><text x="57.7729%" y="815.50"></text></g><g><title>&lt;hyper::client::conn::ProtoClient&lt;T,B&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="57.5229%" y="789" width="0.2752%" height="15" fill="rgb(209,7,32)" fg:x="627" fg:w="3"/><text x="57.7729%" y="799.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.28%)</title><rect x="57.5229%" y="773" width="0.2752%" height="15" fill="rgb(209,39,41)" fg:x="627" fg:w="3"/><text x="57.7729%" y="783.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (3 samples, 0.28%)</title><rect x="57.5229%" y="757" width="0.2752%" height="15" fill="rgb(226,182,46)" fg:x="627" fg:w="3"/><text x="57.7729%" y="767.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (3 samples, 0.28%)</title><rect x="57.5229%" y="741" width="0.2752%" height="15" fill="rgb(230,219,10)" fg:x="627" fg:w="3"/><text x="57.7729%" y="751.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (3 samples, 0.28%)</title><rect x="57.5229%" y="725" width="0.2752%" height="15" fill="rgb(227,175,30)" fg:x="627" fg:w="3"/><text x="57.7729%" y="735.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (3 samples, 0.28%)</title><rect x="57.5229%" y="709" width="0.2752%" height="15" fill="rgb(217,2,50)" fg:x="627" fg:w="3"/><text x="57.7729%" y="719.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (2 samples, 0.18%)</title><rect x="57.6147%" y="693" width="0.1835%" height="15" fill="rgb(229,160,0)" fg:x="628" fg:w="2"/><text x="57.8647%" y="703.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::require_empty_read (2 samples, 0.18%)</title><rect x="57.6147%" y="677" width="0.1835%" height="15" fill="rgb(207,78,37)" fg:x="628" fg:w="2"/><text x="57.8647%" y="687.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (2 samples, 0.18%)</title><rect x="57.6147%" y="661" width="0.1835%" height="15" fill="rgb(225,57,0)" fg:x="628" fg:w="2"/><text x="57.8647%" y="671.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (2 samples, 0.18%)</title><rect x="57.6147%" y="645" width="0.1835%" height="15" fill="rgb(232,154,2)" fg:x="628" fg:w="2"/><text x="57.8647%" y="655.50"></text></g><g><title>&lt;reqwest::connect::Conn as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 0.18%)</title><rect x="57.6147%" y="629" width="0.1835%" height="15" fill="rgb(241,212,25)" fg:x="628" fg:w="2"/><text x="57.8647%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 0.18%)</title><rect x="57.6147%" y="613" width="0.1835%" height="15" fill="rgb(226,69,20)" fg:x="628" fg:w="2"/><text x="57.8647%" y="623.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 0.18%)</title><rect x="57.6147%" y="597" width="0.1835%" height="15" fill="rgb(247,184,54)" fg:x="628" fg:w="2"/><text x="57.8647%" y="607.50"></text></g><g><title>tokio_native_tls::TlsStream&lt;S&gt;::with_context (2 samples, 0.18%)</title><rect x="57.6147%" y="581" width="0.1835%" height="15" fill="rgb(210,145,0)" fg:x="628" fg:w="2"/><text x="57.8647%" y="591.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::{{closure}} (2 samples, 0.18%)</title><rect x="57.6147%" y="565" width="0.1835%" height="15" fill="rgb(253,82,12)" fg:x="628" fg:w="2"/><text x="57.8647%" y="575.50"></text></g><g><title>&lt;native_tls::TlsStream&lt;S&gt; as std::io::Read&gt;::read (2 samples, 0.18%)</title><rect x="57.6147%" y="549" width="0.1835%" height="15" fill="rgb(245,42,11)" fg:x="628" fg:w="2"/><text x="57.8647%" y="559.50"></text></g><g><title>&lt;native_tls::imp::TlsStream&lt;S&gt; as std::io::Read&gt;::read (2 samples, 0.18%)</title><rect x="57.6147%" y="533" width="0.1835%" height="15" fill="rgb(219,147,32)" fg:x="628" fg:w="2"/><text x="57.8647%" y="543.50"></text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Read&gt;::read (2 samples, 0.18%)</title><rect x="57.6147%" y="517" width="0.1835%" height="15" fill="rgb(246,12,7)" fg:x="628" fg:w="2"/><text x="57.8647%" y="527.50"></text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::ssl_read (2 samples, 0.18%)</title><rect x="57.6147%" y="501" width="0.1835%" height="15" fill="rgb(243,50,9)" fg:x="628" fg:w="2"/><text x="57.8647%" y="511.50"></text></g><g><title>SSL_read (2 samples, 0.18%)</title><rect x="57.6147%" y="485" width="0.1835%" height="15" fill="rgb(219,149,6)" fg:x="628" fg:w="2"/><text x="57.8647%" y="495.50"></text></g><g><title>[libssl.so.1.1] (2 samples, 0.18%)</title><rect x="57.6147%" y="469" width="0.1835%" height="15" fill="rgb(241,51,42)" fg:x="628" fg:w="2"/><text x="57.8647%" y="479.50"></text></g><g><title>[libssl.so.1.1] (2 samples, 0.18%)</title><rect x="57.6147%" y="453" width="0.1835%" height="15" fill="rgb(226,128,27)" fg:x="628" fg:w="2"/><text x="57.8647%" y="463.50"></text></g><g><title>[libssl.so.1.1] (2 samples, 0.18%)</title><rect x="57.6147%" y="437" width="0.1835%" height="15" fill="rgb(244,144,4)" fg:x="628" fg:w="2"/><text x="57.8647%" y="447.50"></text></g><g><title>[libssl.so.1.1] (2 samples, 0.18%)</title><rect x="57.6147%" y="421" width="0.1835%" height="15" fill="rgb(221,4,13)" fg:x="628" fg:w="2"/><text x="57.8647%" y="431.50"></text></g><g><title>[libssl.so.1.1] (2 samples, 0.18%)</title><rect x="57.6147%" y="405" width="0.1835%" height="15" fill="rgb(208,170,28)" fg:x="628" fg:w="2"/><text x="57.8647%" y="415.50"></text></g><g><title>__free (2 samples, 0.18%)</title><rect x="57.6147%" y="389" width="0.1835%" height="15" fill="rgb(226,131,13)" fg:x="628" fg:w="2"/><text x="57.8647%" y="399.50"></text></g><g><title>_int_free (2 samples, 0.18%)</title><rect x="57.6147%" y="373" width="0.1835%" height="15" fill="rgb(215,72,41)" fg:x="628" fg:w="2"/><text x="57.8647%" y="383.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="57.7982%" y="1333" width="0.0917%" height="15" fill="rgb(243,108,20)" fg:x="630" fg:w="1"/><text x="58.0482%" y="1343.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (70 samples, 6.42%)</title><rect x="51.5596%" y="1509" width="6.4220%" height="15" fill="rgb(230,189,17)" fg:x="562" fg:w="70"/><text x="51.8096%" y="1519.50">tokio::r..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (70 samples, 6.42%)</title><rect x="51.5596%" y="1493" width="6.4220%" height="15" fill="rgb(220,50,17)" fg:x="562" fg:w="70"/><text x="51.8096%" y="1503.50">tokio::r..</text></g><g><title>tokio::runtime::task::harness::poll_future (70 samples, 6.42%)</title><rect x="51.5596%" y="1477" width="6.4220%" height="15" fill="rgb(248,152,48)" fg:x="562" fg:w="70"/><text x="51.8096%" y="1487.50">tokio::r..</text></g><g><title>std::panic::catch_unwind (70 samples, 6.42%)</title><rect x="51.5596%" y="1461" width="6.4220%" height="15" fill="rgb(244,91,11)" fg:x="562" fg:w="70"/><text x="51.8096%" y="1471.50">std::pan..</text></g><g><title>std::panicking::try (70 samples, 6.42%)</title><rect x="51.5596%" y="1445" width="6.4220%" height="15" fill="rgb(220,157,5)" fg:x="562" fg:w="70"/><text x="51.8096%" y="1455.50">std::pan..</text></g><g><title>std::panicking::try::do_call (70 samples, 6.42%)</title><rect x="51.5596%" y="1429" width="6.4220%" height="15" fill="rgb(253,137,8)" fg:x="562" fg:w="70"/><text x="51.8096%" y="1439.50">std::pan..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (70 samples, 6.42%)</title><rect x="51.5596%" y="1413" width="6.4220%" height="15" fill="rgb(217,137,51)" fg:x="562" fg:w="70"/><text x="51.8096%" y="1423.50">&lt;core::p..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (70 samples, 6.42%)</title><rect x="51.5596%" y="1397" width="6.4220%" height="15" fill="rgb(218,209,53)" fg:x="562" fg:w="70"/><text x="51.8096%" y="1407.50">tokio::r..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (70 samples, 6.42%)</title><rect x="51.5596%" y="1381" width="6.4220%" height="15" fill="rgb(249,137,25)" fg:x="562" fg:w="70"/><text x="51.8096%" y="1391.50">tokio::r..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::drop_future_or_output (2 samples, 0.18%)</title><rect x="57.7982%" y="1365" width="0.1835%" height="15" fill="rgb(239,155,26)" fg:x="630" fg:w="2"/><text x="58.0482%" y="1375.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage (2 samples, 0.18%)</title><rect x="57.7982%" y="1349" width="0.1835%" height="15" fill="rgb(227,85,46)" fg:x="630" fg:w="2"/><text x="58.0482%" y="1359.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.09%)</title><rect x="57.8899%" y="1333" width="0.0917%" height="15" fill="rgb(251,107,43)" fg:x="631" fg:w="1"/><text x="58.1399%" y="1343.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (9 samples, 0.83%)</title><rect x="58.1651%" y="693" width="0.8257%" height="15" fill="rgb(234,170,33)" fg:x="634" fg:w="9"/><text x="58.4151%" y="703.50"></text></g><g><title>&lt;sqlx_core::net::tls::MaybeTlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (9 samples, 0.83%)</title><rect x="58.1651%" y="677" width="0.8257%" height="15" fill="rgb(206,29,35)" fg:x="634" fg:w="9"/><text x="58.4151%" y="687.50"></text></g><g><title>&lt;sqlx_core::net::socket::Socket as tokio::io::async_read::AsyncRead&gt;::poll_read (9 samples, 0.83%)</title><rect x="58.1651%" y="661" width="0.8257%" height="15" fill="rgb(227,138,25)" fg:x="634" fg:w="9"/><text x="58.4151%" y="671.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (9 samples, 0.83%)</title><rect x="58.1651%" y="645" width="0.8257%" height="15" fill="rgb(249,131,35)" fg:x="634" fg:w="9"/><text x="58.4151%" y="655.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (6 samples, 0.55%)</title><rect x="58.4404%" y="629" width="0.5505%" height="15" fill="rgb(239,6,40)" fg:x="637" fg:w="6"/><text x="58.6904%" y="639.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (6 samples, 0.55%)</title><rect x="58.4404%" y="613" width="0.5505%" height="15" fill="rgb(246,136,47)" fg:x="637" fg:w="6"/><text x="58.6904%" y="623.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_read_io (6 samples, 0.55%)</title><rect x="58.4404%" y="597" width="0.5505%" height="15" fill="rgb(253,58,26)" fg:x="637" fg:w="6"/><text x="58.6904%" y="607.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (4 samples, 0.37%)</title><rect x="58.6239%" y="581" width="0.3670%" height="15" fill="rgb(237,141,10)" fg:x="639" fg:w="4"/><text x="58.8739%" y="591.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read::{{closure}} (4 samples, 0.37%)</title><rect x="58.6239%" y="565" width="0.3670%" height="15" fill="rgb(234,156,12)" fg:x="639" fg:w="4"/><text x="58.8739%" y="575.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (4 samples, 0.37%)</title><rect x="58.6239%" y="549" width="0.3670%" height="15" fill="rgb(243,224,36)" fg:x="639" fg:w="4"/><text x="58.8739%" y="559.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (4 samples, 0.37%)</title><rect x="58.6239%" y="533" width="0.3670%" height="15" fill="rgb(205,229,51)" fg:x="639" fg:w="4"/><text x="58.8739%" y="543.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (4 samples, 0.37%)</title><rect x="58.6239%" y="517" width="0.3670%" height="15" fill="rgb(223,189,4)" fg:x="639" fg:w="4"/><text x="58.8739%" y="527.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (4 samples, 0.37%)</title><rect x="58.6239%" y="501" width="0.3670%" height="15" fill="rgb(249,167,54)" fg:x="639" fg:w="4"/><text x="58.8739%" y="511.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (4 samples, 0.37%)</title><rect x="58.6239%" y="485" width="0.3670%" height="15" fill="rgb(218,34,28)" fg:x="639" fg:w="4"/><text x="58.8739%" y="495.50"></text></g><g><title>std::sys_common::net::TcpStream::read (4 samples, 0.37%)</title><rect x="58.6239%" y="469" width="0.3670%" height="15" fill="rgb(232,109,42)" fg:x="639" fg:w="4"/><text x="58.8739%" y="479.50"></text></g><g><title>std::sys::unix::net::Socket::read (4 samples, 0.37%)</title><rect x="58.6239%" y="453" width="0.3670%" height="15" fill="rgb(248,214,46)" fg:x="639" fg:w="4"/><text x="58.8739%" y="463.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (4 samples, 0.37%)</title><rect x="58.6239%" y="437" width="0.3670%" height="15" fill="rgb(244,216,40)" fg:x="639" fg:w="4"/><text x="58.8739%" y="447.50"></text></g><g><title>__libc_recv (4 samples, 0.37%)</title><rect x="58.6239%" y="421" width="0.3670%" height="15" fill="rgb(231,226,31)" fg:x="639" fg:w="4"/><text x="58.8739%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="58.8991%" y="405" width="0.0917%" height="15" fill="rgb(238,38,43)" fg:x="642" fg:w="1"/><text x="59.1491%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="58.8991%" y="389" width="0.0917%" height="15" fill="rgb(208,88,43)" fg:x="642" fg:w="1"/><text x="59.1491%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="58.8991%" y="373" width="0.0917%" height="15" fill="rgb(205,136,37)" fg:x="642" fg:w="1"/><text x="59.1491%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="58.8991%" y="357" width="0.0917%" height="15" fill="rgb(237,34,14)" fg:x="642" fg:w="1"/><text x="59.1491%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="58.8991%" y="341" width="0.0917%" height="15" fill="rgb(236,193,44)" fg:x="642" fg:w="1"/><text x="59.1491%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="58.8991%" y="325" width="0.0917%" height="15" fill="rgb(231,48,10)" fg:x="642" fg:w="1"/><text x="59.1491%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="58.8991%" y="309" width="0.0917%" height="15" fill="rgb(213,141,34)" fg:x="642" fg:w="1"/><text x="59.1491%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="58.8991%" y="293" width="0.0917%" height="15" fill="rgb(249,130,34)" fg:x="642" fg:w="1"/><text x="59.1491%" y="303.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="58.1651%" y="741" width="1.0092%" height="15" fill="rgb(219,42,41)" fg:x="634" fg:w="11"/><text x="58.4151%" y="751.50"></text></g><g><title>sqlx_core::io::buf_stream::BufTruncator::read::{{closure}} (11 samples, 1.01%)</title><rect x="58.1651%" y="725" width="1.0092%" height="15" fill="rgb(224,100,54)" fg:x="634" fg:w="11"/><text x="58.4151%" y="735.50"></text></g><g><title>&lt;tokio::io::util::read::Read&lt;R&gt; as core::future::future::Future&gt;::poll (11 samples, 1.01%)</title><rect x="58.1651%" y="709" width="1.0092%" height="15" fill="rgb(229,200,27)" fg:x="634" fg:w="11"/><text x="58.4151%" y="719.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::new (2 samples, 0.18%)</title><rect x="58.9908%" y="693" width="0.1835%" height="15" fill="rgb(217,118,10)" fg:x="643" fg:w="2"/><text x="59.2408%" y="703.50"></text></g><g><title>tokio::io::read_buf::slice_to_uninit_mut (2 samples, 0.18%)</title><rect x="58.9908%" y="677" width="0.1835%" height="15" fill="rgb(206,22,3)" fg:x="643" fg:w="2"/><text x="59.2408%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 1.19%)</title><rect x="58.0734%" y="965" width="1.1927%" height="15" fill="rgb(232,163,46)" fg:x="633" fg:w="13"/><text x="58.3234%" y="975.50"></text></g><g><title>sqlx_core::postgres::connection::PgConnection::wait_until_ready::{{closure}} (13 samples, 1.19%)</title><rect x="58.0734%" y="949" width="1.1927%" height="15" fill="rgb(206,95,13)" fg:x="633" fg:w="13"/><text x="58.3234%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 1.19%)</title><rect x="58.0734%" y="933" width="1.1927%" height="15" fill="rgb(253,154,18)" fg:x="633" fg:w="13"/><text x="58.3234%" y="943.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv::{{closure}} (13 samples, 1.19%)</title><rect x="58.0734%" y="917" width="1.1927%" height="15" fill="rgb(219,32,23)" fg:x="633" fg:w="13"/><text x="58.3234%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 1.19%)</title><rect x="58.0734%" y="901" width="1.1927%" height="15" fill="rgb(230,191,45)" fg:x="633" fg:w="13"/><text x="58.3234%" y="911.50"></text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv_unchecked::{{closure}} (12 samples, 1.10%)</title><rect x="58.1651%" y="885" width="1.1009%" height="15" fill="rgb(229,64,36)" fg:x="634" fg:w="12"/><text x="58.4151%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 1.10%)</title><rect x="58.1651%" y="869" width="1.1009%" height="15" fill="rgb(205,129,25)" fg:x="634" fg:w="12"/><text x="58.4151%" y="879.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read::{{closure}} (12 samples, 1.10%)</title><rect x="58.1651%" y="853" width="1.1009%" height="15" fill="rgb(254,112,7)" fg:x="634" fg:w="12"/><text x="58.4151%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 1.10%)</title><rect x="58.1651%" y="837" width="1.1009%" height="15" fill="rgb(226,53,48)" fg:x="634" fg:w="12"/><text x="58.4151%" y="847.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_with::{{closure}} (12 samples, 1.10%)</title><rect x="58.1651%" y="821" width="1.1009%" height="15" fill="rgb(214,153,38)" fg:x="634" fg:w="12"/><text x="58.4151%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 1.10%)</title><rect x="58.1651%" y="805" width="1.1009%" height="15" fill="rgb(243,101,7)" fg:x="634" fg:w="12"/><text x="58.4151%" y="815.50"></text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_raw::{{closure}} (12 samples, 1.10%)</title><rect x="58.1651%" y="789" width="1.1009%" height="15" fill="rgb(240,140,22)" fg:x="634" fg:w="12"/><text x="58.4151%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 1.10%)</title><rect x="58.1651%" y="773" width="1.1009%" height="15" fill="rgb(235,114,2)" fg:x="634" fg:w="12"/><text x="58.4151%" y="783.50"></text></g><g><title>sqlx_core::io::buf_stream::read_raw_into::{{closure}} (12 samples, 1.10%)</title><rect x="58.1651%" y="757" width="1.1009%" height="15" fill="rgb(242,59,12)" fg:x="634" fg:w="12"/><text x="58.4151%" y="767.50"></text></g><g><title>sqlx_core::io::buf_stream::BufTruncator::reserve (1 samples, 0.09%)</title><rect x="59.1743%" y="741" width="0.0917%" height="15" fill="rgb(252,134,9)" fg:x="645" fg:w="1"/><text x="59.4243%" y="751.50"></text></g><g><title>bytes::bytes_mut::BytesMut::resize (1 samples, 0.09%)</title><rect x="59.1743%" y="725" width="0.0917%" height="15" fill="rgb(236,4,44)" fg:x="645" fg:w="1"/><text x="59.4243%" y="735.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.09%)</title><rect x="59.1743%" y="709" width="0.0917%" height="15" fill="rgb(254,172,41)" fg:x="645" fg:w="1"/><text x="59.4243%" y="719.50"></text></g><g><title>__memset_avx2_unaligned (1 samples, 0.09%)</title><rect x="59.1743%" y="693" width="0.0917%" height="15" fill="rgb(244,63,20)" fg:x="645" fg:w="1"/><text x="59.4243%" y="703.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (1 samples, 0.09%)</title><rect x="59.3578%" y="821" width="0.0917%" height="15" fill="rgb(250,73,31)" fg:x="647" fg:w="1"/><text x="59.6078%" y="831.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.09%)</title><rect x="59.3578%" y="805" width="0.0917%" height="15" fill="rgb(241,38,36)" fg:x="647" fg:w="1"/><text x="59.6078%" y="815.50"></text></g><g><title>&lt;sqlx_core::io::write_and_flush::WriteAndFlush&lt;S&gt; as core::future::future::Future&gt;::poll (7 samples, 0.64%)</title><rect x="59.2661%" y="965" width="0.6422%" height="15" fill="rgb(245,211,2)" fg:x="646" fg:w="7"/><text x="59.5161%" y="975.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (7 samples, 0.64%)</title><rect x="59.2661%" y="949" width="0.6422%" height="15" fill="rgb(206,120,28)" fg:x="646" fg:w="7"/><text x="59.5161%" y="959.50"></text></g><g><title>&lt;sqlx_core::net::tls::MaybeTlsStream&lt;S&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (7 samples, 0.64%)</title><rect x="59.2661%" y="933" width="0.6422%" height="15" fill="rgb(211,59,34)" fg:x="646" fg:w="7"/><text x="59.5161%" y="943.50"></text></g><g><title>&lt;sqlx_core::net::socket::Socket as tokio::io::async_write::AsyncWrite&gt;::poll_write (7 samples, 0.64%)</title><rect x="59.2661%" y="917" width="0.6422%" height="15" fill="rgb(233,168,5)" fg:x="646" fg:w="7"/><text x="59.5161%" y="927.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (6 samples, 0.55%)</title><rect x="59.3578%" y="901" width="0.5505%" height="15" fill="rgb(234,33,13)" fg:x="647" fg:w="6"/><text x="59.6078%" y="911.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (6 samples, 0.55%)</title><rect x="59.3578%" y="885" width="0.5505%" height="15" fill="rgb(231,150,26)" fg:x="647" fg:w="6"/><text x="59.6078%" y="895.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (6 samples, 0.55%)</title><rect x="59.3578%" y="869" width="0.5505%" height="15" fill="rgb(217,191,4)" fg:x="647" fg:w="6"/><text x="59.6078%" y="879.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_write_io (6 samples, 0.55%)</title><rect x="59.3578%" y="853" width="0.5505%" height="15" fill="rgb(246,198,38)" fg:x="647" fg:w="6"/><text x="59.6078%" y="863.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (6 samples, 0.55%)</title><rect x="59.3578%" y="837" width="0.5505%" height="15" fill="rgb(245,64,37)" fg:x="647" fg:w="6"/><text x="59.6078%" y="847.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write::{{closure}} (5 samples, 0.46%)</title><rect x="59.4495%" y="821" width="0.4587%" height="15" fill="rgb(250,30,36)" fg:x="648" fg:w="5"/><text x="59.6995%" y="831.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (5 samples, 0.46%)</title><rect x="59.4495%" y="805" width="0.4587%" height="15" fill="rgb(217,86,53)" fg:x="648" fg:w="5"/><text x="59.6995%" y="815.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (4 samples, 0.37%)</title><rect x="59.5413%" y="789" width="0.3670%" height="15" fill="rgb(228,157,16)" fg:x="649" fg:w="4"/><text x="59.7913%" y="799.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (4 samples, 0.37%)</title><rect x="59.5413%" y="773" width="0.3670%" height="15" fill="rgb(217,59,31)" fg:x="649" fg:w="4"/><text x="59.7913%" y="783.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::{{closure}} (4 samples, 0.37%)</title><rect x="59.5413%" y="757" width="0.3670%" height="15" fill="rgb(237,138,41)" fg:x="649" fg:w="4"/><text x="59.7913%" y="767.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (4 samples, 0.37%)</title><rect x="59.5413%" y="741" width="0.3670%" height="15" fill="rgb(227,91,49)" fg:x="649" fg:w="4"/><text x="59.7913%" y="751.50"></text></g><g><title>std::sys_common::net::TcpStream::write (4 samples, 0.37%)</title><rect x="59.5413%" y="725" width="0.3670%" height="15" fill="rgb(247,21,44)" fg:x="649" fg:w="4"/><text x="59.7913%" y="735.50"></text></g><g><title>__libc_send (4 samples, 0.37%)</title><rect x="59.5413%" y="709" width="0.3670%" height="15" fill="rgb(219,210,51)" fg:x="649" fg:w="4"/><text x="59.7913%" y="719.50"></text></g><g><title>[unknown] (3 samples, 0.28%)</title><rect x="59.6330%" y="693" width="0.2752%" height="15" fill="rgb(209,140,6)" fg:x="650" fg:w="3"/><text x="59.8830%" y="703.50"></text></g><g><title>[unknown] (3 samples, 0.28%)</title><rect x="59.6330%" y="677" width="0.2752%" height="15" fill="rgb(221,188,24)" fg:x="650" fg:w="3"/><text x="59.8830%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="59.7248%" y="661" width="0.1835%" height="15" fill="rgb(232,154,20)" fg:x="651" fg:w="2"/><text x="59.9748%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="59.8165%" y="645" width="0.0917%" height="15" fill="rgb(244,137,50)" fg:x="652" fg:w="1"/><text x="60.0665%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (3 samples, 0.28%)</title><rect x="59.9083%" y="869" width="0.2752%" height="15" fill="rgb(225,185,43)" fg:x="653" fg:w="3"/><text x="60.1583%" y="879.50"></text></g><g><title>&lt;sqlx_core::postgres::statement::PgStatementMetadata as core::default::Default&gt;::default (4 samples, 0.37%)</title><rect x="59.9083%" y="965" width="0.3670%" height="15" fill="rgb(213,205,38)" fg:x="653" fg:w="4"/><text x="60.1583%" y="975.50"></text></g><g><title>&lt;ahash::hash_map::AHashMap&lt;K,V&gt; as core::default::Default&gt;::default (4 samples, 0.37%)</title><rect x="59.9083%" y="949" width="0.3670%" height="15" fill="rgb(236,73,12)" fg:x="653" fg:w="4"/><text x="60.1583%" y="959.50"></text></g><g><title>ahash::hash_map::AHashMap&lt;K,V&gt;::new (4 samples, 0.37%)</title><rect x="59.9083%" y="933" width="0.3670%" height="15" fill="rgb(235,219,13)" fg:x="653" fg:w="4"/><text x="60.1583%" y="943.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (4 samples, 0.37%)</title><rect x="59.9083%" y="917" width="0.3670%" height="15" fill="rgb(218,59,36)" fg:x="653" fg:w="4"/><text x="60.1583%" y="927.50"></text></g><g><title>ahash::random_state::RandomState::new (4 samples, 0.37%)</title><rect x="59.9083%" y="901" width="0.3670%" height="15" fill="rgb(205,110,39)" fg:x="653" fg:w="4"/><text x="60.1583%" y="911.50"></text></g><g><title>ahash::random_state::RandomState::get_src (4 samples, 0.37%)</title><rect x="59.9083%" y="885" width="0.3670%" height="15" fill="rgb(218,206,42)" fg:x="653" fg:w="4"/><text x="60.1583%" y="895.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_init (1 samples, 0.09%)</title><rect x="60.1835%" y="869" width="0.0917%" height="15" fill="rgb(248,125,24)" fg:x="656" fg:w="1"/><text x="60.4335%" y="879.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (1 samples, 0.09%)</title><rect x="60.1835%" y="853" width="0.0917%" height="15" fill="rgb(242,28,27)" fg:x="656" fg:w="1"/><text x="60.4335%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.09%)</title><rect x="60.1835%" y="837" width="0.0917%" height="15" fill="rgb(216,228,15)" fg:x="656" fg:w="1"/><text x="60.4335%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="60.1835%" y="821" width="0.0917%" height="15" fill="rgb(235,116,46)" fg:x="656" fg:w="1"/><text x="60.4335%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="60.3670%" y="901" width="0.0917%" height="15" fill="rgb(224,18,32)" fg:x="658" fg:w="1"/><text x="60.6170%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.09%)</title><rect x="60.3670%" y="885" width="0.0917%" height="15" fill="rgb(252,5,12)" fg:x="658" fg:w="1"/><text x="60.6170%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="60.3670%" y="869" width="0.0917%" height="15" fill="rgb(251,36,5)" fg:x="658" fg:w="1"/><text x="60.6170%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="60.3670%" y="853" width="0.0917%" height="15" fill="rgb(217,53,14)" fg:x="658" fg:w="1"/><text x="60.6170%" y="863.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="60.3670%" y="837" width="0.0917%" height="15" fill="rgb(215,86,45)" fg:x="658" fg:w="1"/><text x="60.6170%" y="847.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="60.3670%" y="821" width="0.0917%" height="15" fill="rgb(242,169,11)" fg:x="658" fg:w="1"/><text x="60.6170%" y="831.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="60.3670%" y="805" width="0.0917%" height="15" fill="rgb(211,213,45)" fg:x="658" fg:w="1"/><text x="60.6170%" y="815.50"></text></g><g><title>&lt;futures_channel::mpsc::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.18%)</title><rect x="60.3670%" y="949" width="0.1835%" height="15" fill="rgb(205,88,11)" fg:x="658" fg:w="2"/><text x="60.6170%" y="959.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.18%)</title><rect x="60.3670%" y="933" width="0.1835%" height="15" fill="rgb(252,69,26)" fg:x="658" fg:w="2"/><text x="60.6170%" y="943.50"></text></g><g><title>&lt;futures_channel::mpsc::BoundedSenderInner&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.18%)</title><rect x="60.3670%" y="917" width="0.1835%" height="15" fill="rgb(246,123,37)" fg:x="658" fg:w="2"/><text x="60.6170%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="60.4587%" y="901" width="0.0917%" height="15" fill="rgb(212,205,5)" fg:x="659" fg:w="1"/><text x="60.7087%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::new (1 samples, 0.09%)</title><rect x="60.4587%" y="885" width="0.0917%" height="15" fill="rgb(253,148,0)" fg:x="659" fg:w="1"/><text x="60.7087%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.09%)</title><rect x="60.4587%" y="869" width="0.0917%" height="15" fill="rgb(239,22,4)" fg:x="659" fg:w="1"/><text x="60.7087%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="60.4587%" y="853" width="0.0917%" height="15" fill="rgb(226,26,53)" fg:x="659" fg:w="1"/><text x="60.7087%" y="863.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.09%)</title><rect x="60.4587%" y="837" width="0.0917%" height="15" fill="rgb(225,229,45)" fg:x="659" fg:w="1"/><text x="60.7087%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="60.4587%" y="821" width="0.0917%" height="15" fill="rgb(220,60,37)" fg:x="659" fg:w="1"/><text x="60.7087%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="60.4587%" y="805" width="0.0917%" height="15" fill="rgb(217,180,35)" fg:x="659" fg:w="1"/><text x="60.7087%" y="815.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="60.4587%" y="789" width="0.0917%" height="15" fill="rgb(229,7,53)" fg:x="659" fg:w="1"/><text x="60.7087%" y="799.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="60.4587%" y="773" width="0.0917%" height="15" fill="rgb(254,137,3)" fg:x="659" fg:w="1"/><text x="60.7087%" y="783.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="60.5505%" y="933" width="0.0917%" height="15" fill="rgb(215,140,41)" fg:x="660" fg:w="1"/><text x="60.8005%" y="943.50"></text></g><g><title>futures_channel::mpsc::queue::Node&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="60.5505%" y="917" width="0.0917%" height="15" fill="rgb(250,80,15)" fg:x="660" fg:w="1"/><text x="60.8005%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="60.5505%" y="901" width="0.0917%" height="15" fill="rgb(252,191,6)" fg:x="660" fg:w="1"/><text x="60.8005%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.09%)</title><rect x="60.5505%" y="885" width="0.0917%" height="15" fill="rgb(246,217,18)" fg:x="660" fg:w="1"/><text x="60.8005%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="60.5505%" y="869" width="0.0917%" height="15" fill="rgb(223,93,7)" fg:x="660" fg:w="1"/><text x="60.8005%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="60.5505%" y="853" width="0.0917%" height="15" fill="rgb(225,55,52)" fg:x="660" fg:w="1"/><text x="60.8005%" y="863.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="60.5505%" y="837" width="0.0917%" height="15" fill="rgb(240,31,24)" fg:x="660" fg:w="1"/><text x="60.8005%" y="847.50"></text></g><g><title>__rdl_alloc (1 samples, 0.09%)</title><rect x="60.5505%" y="821" width="0.0917%" height="15" fill="rgb(205,56,52)" fg:x="660" fg:w="1"/><text x="60.8005%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.09%)</title><rect x="60.5505%" y="805" width="0.0917%" height="15" fill="rgb(246,146,12)" fg:x="660" fg:w="1"/><text x="60.8005%" y="815.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new (6 samples, 0.55%)</title><rect x="60.2752%" y="965" width="0.5505%" height="15" fill="rgb(239,84,36)" fg:x="657" fg:w="6"/><text x="60.5252%" y="975.50"></text></g><g><title>futures_channel::mpsc::channel (3 samples, 0.28%)</title><rect x="60.5505%" y="949" width="0.2752%" height="15" fill="rgb(207,41,40)" fg:x="660" fg:w="3"/><text x="60.8005%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::new (2 samples, 0.18%)</title><rect x="60.6422%" y="933" width="0.1835%" height="15" fill="rgb(241,179,25)" fg:x="661" fg:w="2"/><text x="60.8922%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::new (2 samples, 0.18%)</title><rect x="60.6422%" y="917" width="0.1835%" height="15" fill="rgb(210,0,34)" fg:x="661" fg:w="2"/><text x="60.8922%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (2 samples, 0.18%)</title><rect x="60.6422%" y="901" width="0.1835%" height="15" fill="rgb(225,217,29)" fg:x="661" fg:w="2"/><text x="60.8922%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.18%)</title><rect x="60.6422%" y="885" width="0.1835%" height="15" fill="rgb(216,191,38)" fg:x="661" fg:w="2"/><text x="60.8922%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.18%)</title><rect x="60.6422%" y="869" width="0.1835%" height="15" fill="rgb(232,140,52)" fg:x="661" fg:w="2"/><text x="60.8922%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.18%)</title><rect x="60.6422%" y="853" width="0.1835%" height="15" fill="rgb(223,158,51)" fg:x="661" fg:w="2"/><text x="60.8922%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.18%)</title><rect x="60.6422%" y="837" width="0.1835%" height="15" fill="rgb(235,29,51)" fg:x="661" fg:w="2"/><text x="60.8922%" y="847.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.18%)</title><rect x="60.6422%" y="821" width="0.1835%" height="15" fill="rgb(215,181,18)" fg:x="661" fg:w="2"/><text x="60.8922%" y="831.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.18%)</title><rect x="60.6422%" y="805" width="0.1835%" height="15" fill="rgb(227,125,34)" fg:x="661" fg:w="2"/><text x="60.8922%" y="815.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="60.7339%" y="789" width="0.0917%" height="15" fill="rgb(230,197,49)" fg:x="662" fg:w="1"/><text x="60.9839%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 3.21%)</title><rect x="57.9817%" y="997" width="3.2110%" height="15" fill="rgb(239,141,16)" fg:x="632" fg:w="35"/><text x="58.2317%" y="1007.50">&lt;co..</text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}} (35 samples, 3.21%)</title><rect x="57.9817%" y="981" width="3.2110%" height="15" fill="rgb(225,105,43)" fg:x="632" fg:w="35"/><text x="58.2317%" y="991.50">sql..</text></g><g><title>sqlx_core::logger::QueryLogger::new (4 samples, 0.37%)</title><rect x="60.8257%" y="965" width="0.3670%" height="15" fill="rgb(214,131,14)" fg:x="663" fg:w="4"/><text x="61.0757%" y="975.50"></text></g><g><title>std::time::Instant::now (4 samples, 0.37%)</title><rect x="60.8257%" y="949" width="0.3670%" height="15" fill="rgb(229,177,11)" fg:x="663" fg:w="4"/><text x="61.0757%" y="959.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (4 samples, 0.37%)</title><rect x="60.8257%" y="933" width="0.3670%" height="15" fill="rgb(231,180,14)" fg:x="663" fg:w="4"/><text x="61.0757%" y="943.50"></text></g><g><title>std::sys::unix::time::inner::now (4 samples, 0.37%)</title><rect x="60.8257%" y="917" width="0.3670%" height="15" fill="rgb(232,88,2)" fg:x="663" fg:w="4"/><text x="61.0757%" y="927.50"></text></g><g><title>__clock_gettime_2 (4 samples, 0.37%)</title><rect x="60.8257%" y="901" width="0.3670%" height="15" fill="rgb(205,220,8)" fg:x="663" fg:w="4"/><text x="61.0757%" y="911.50"></text></g><g><title>__vdso_clock_gettime (4 samples, 0.37%)</title><rect x="60.8257%" y="885" width="0.3670%" height="15" fill="rgb(225,23,53)" fg:x="663" fg:w="4"/><text x="61.0757%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.28%)</title><rect x="60.9174%" y="869" width="0.2752%" height="15" fill="rgb(213,62,29)" fg:x="664" fg:w="3"/><text x="61.1674%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.28%)</title><rect x="60.9174%" y="853" width="0.2752%" height="15" fill="rgb(227,75,7)" fg:x="664" fg:w="3"/><text x="61.1674%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.28%)</title><rect x="60.9174%" y="837" width="0.2752%" height="15" fill="rgb(207,105,14)" fg:x="664" fg:w="3"/><text x="61.1674%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="61.1009%" y="821" width="0.0917%" height="15" fill="rgb(245,62,29)" fg:x="666" fg:w="1"/><text x="61.3509%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="61.1009%" y="805" width="0.0917%" height="15" fill="rgb(236,202,4)" fg:x="666" fg:w="1"/><text x="61.3509%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="61.1009%" y="789" width="0.0917%" height="15" fill="rgb(250,67,1)" fg:x="666" fg:w="1"/><text x="61.3509%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="61.3761%" y="821" width="0.0917%" height="15" fill="rgb(253,115,44)" fg:x="669" fg:w="1"/><text x="61.6261%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="61.5596%" y="629" width="0.0917%" height="15" fill="rgb(251,139,18)" fg:x="671" fg:w="1"/><text x="61.8096%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::Error&gt; (1 samples, 0.09%)</title><rect x="62.2018%" y="437" width="0.0917%" height="15" fill="rgb(218,22,32)" fg:x="678" fg:w="1"/><text x="62.4518%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::Repr&gt; (1 samples, 0.09%)</title><rect x="62.2018%" y="421" width="0.0917%" height="15" fill="rgb(243,53,5)" fg:x="678" fg:w="1"/><text x="62.4518%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.46%)</title><rect x="62.3853%" y="277" width="0.4587%" height="15" fill="rgb(227,56,16)" fg:x="680" fg:w="5"/><text x="62.6353%" y="287.50"></text></g><g><title>[unknown] (4 samples, 0.37%)</title><rect x="62.4771%" y="261" width="0.3670%" height="15" fill="rgb(245,53,0)" fg:x="681" fg:w="4"/><text x="62.7271%" y="271.50"></text></g><g><title>[unknown] (4 samples, 0.37%)</title><rect x="62.4771%" y="245" width="0.3670%" height="15" fill="rgb(216,170,35)" fg:x="681" fg:w="4"/><text x="62.7271%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.28%)</title><rect x="62.5688%" y="229" width="0.2752%" height="15" fill="rgb(211,200,8)" fg:x="682" fg:w="3"/><text x="62.8188%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="62.7523%" y="213" width="0.0917%" height="15" fill="rgb(228,204,44)" fg:x="684" fg:w="1"/><text x="63.0023%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="62.7523%" y="197" width="0.0917%" height="15" fill="rgb(214,121,17)" fg:x="684" fg:w="1"/><text x="63.0023%" y="207.50"></text></g><g><title>__libc_recv (6 samples, 0.55%)</title><rect x="62.3853%" y="293" width="0.5505%" height="15" fill="rgb(233,64,38)" fg:x="680" fg:w="6"/><text x="62.6353%" y="303.50"></text></g><g><title>__GI___pthread_enable_asynccancel (1 samples, 0.09%)</title><rect x="62.8440%" y="277" width="0.0917%" height="15" fill="rgb(253,54,19)" fg:x="685" fg:w="1"/><text x="63.0940%" y="287.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (10 samples, 0.92%)</title><rect x="62.1101%" y="565" width="0.9174%" height="15" fill="rgb(253,94,18)" fg:x="677" fg:w="10"/><text x="62.3601%" y="575.50"></text></g><g><title>&lt;sqlx_core::net::tls::MaybeTlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (10 samples, 0.92%)</title><rect x="62.1101%" y="549" width="0.9174%" height="15" fill="rgb(227,57,52)" fg:x="677" fg:w="10"/><text x="62.3601%" y="559.50"></text></g><g><title>&lt;sqlx_core::net::socket::Socket as tokio::io::async_read::AsyncRead&gt;::poll_read (10 samples, 0.92%)</title><rect x="62.1101%" y="533" width="0.9174%" height="15" fill="rgb(230,228,50)" fg:x="677" fg:w="10"/><text x="62.3601%" y="543.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (10 samples, 0.92%)</title><rect x="62.1101%" y="517" width="0.9174%" height="15" fill="rgb(217,205,27)" fg:x="677" fg:w="10"/><text x="62.3601%" y="527.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (10 samples, 0.92%)</title><rect x="62.1101%" y="501" width="0.9174%" height="15" fill="rgb(252,71,50)" fg:x="677" fg:w="10"/><text x="62.3601%" y="511.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (10 samples, 0.92%)</title><rect x="62.1101%" y="485" width="0.9174%" height="15" fill="rgb(209,86,4)" fg:x="677" fg:w="10"/><text x="62.3601%" y="495.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_read_io (10 samples, 0.92%)</title><rect x="62.1101%" y="469" width="0.9174%" height="15" fill="rgb(229,94,0)" fg:x="677" fg:w="10"/><text x="62.3601%" y="479.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (9 samples, 0.83%)</title><rect x="62.2018%" y="453" width="0.8257%" height="15" fill="rgb(252,223,21)" fg:x="678" fg:w="9"/><text x="62.4518%" y="463.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read::{{closure}} (8 samples, 0.73%)</title><rect x="62.2936%" y="437" width="0.7339%" height="15" fill="rgb(230,210,4)" fg:x="679" fg:w="8"/><text x="62.5436%" y="447.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (8 samples, 0.73%)</title><rect x="62.2936%" y="421" width="0.7339%" height="15" fill="rgb(240,149,38)" fg:x="679" fg:w="8"/><text x="62.5436%" y="431.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (7 samples, 0.64%)</title><rect x="62.3853%" y="405" width="0.6422%" height="15" fill="rgb(254,105,20)" fg:x="680" fg:w="7"/><text x="62.6353%" y="415.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (7 samples, 0.64%)</title><rect x="62.3853%" y="389" width="0.6422%" height="15" fill="rgb(253,87,46)" fg:x="680" fg:w="7"/><text x="62.6353%" y="399.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (7 samples, 0.64%)</title><rect x="62.3853%" y="373" width="0.6422%" height="15" fill="rgb(253,116,33)" fg:x="680" fg:w="7"/><text x="62.6353%" y="383.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (7 samples, 0.64%)</title><rect x="62.3853%" y="357" width="0.6422%" height="15" fill="rgb(229,198,5)" fg:x="680" fg:w="7"/><text x="62.6353%" y="367.50"></text></g><g><title>std::sys_common::net::TcpStream::read (7 samples, 0.64%)</title><rect x="62.3853%" y="341" width="0.6422%" height="15" fill="rgb(242,38,37)" fg:x="680" fg:w="7"/><text x="62.6353%" y="351.50"></text></g><g><title>std::sys::unix::net::Socket::read (7 samples, 0.64%)</title><rect x="62.3853%" y="325" width="0.6422%" height="15" fill="rgb(242,69,53)" fg:x="680" fg:w="7"/><text x="62.6353%" y="335.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (7 samples, 0.64%)</title><rect x="62.3853%" y="309" width="0.6422%" height="15" fill="rgb(249,80,16)" fg:x="680" fg:w="7"/><text x="62.6353%" y="319.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.09%)</title><rect x="62.9358%" y="293" width="0.0917%" height="15" fill="rgb(206,128,11)" fg:x="686" fg:w="1"/><text x="63.1858%" y="303.50"></text></g><g><title>std::io::error::Error::last_os_error (1 samples, 0.09%)</title><rect x="62.9358%" y="277" width="0.0917%" height="15" fill="rgb(212,35,20)" fg:x="686" fg:w="1"/><text x="63.1858%" y="287.50"></text></g><g><title>std::sys::unix::os::errno (1 samples, 0.09%)</title><rect x="62.9358%" y="261" width="0.0917%" height="15" fill="rgb(236,79,13)" fg:x="686" fg:w="1"/><text x="63.1858%" y="271.50"></text></g><g><title>__GI___errno_location (1 samples, 0.09%)</title><rect x="62.9358%" y="245" width="0.0917%" height="15" fill="rgb(233,123,3)" fg:x="686" fg:w="1"/><text x="63.1858%" y="255.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 1.38%)</title><rect x="61.7431%" y="613" width="1.3761%" height="15" fill="rgb(214,93,52)" fg:x="673" fg:w="15"/><text x="61.9931%" y="623.50"></text></g><g><title>sqlx_core::io::buf_stream::BufTruncator::read::{{closure}} (15 samples, 1.38%)</title><rect x="61.7431%" y="597" width="1.3761%" height="15" fill="rgb(251,37,40)" fg:x="673" fg:w="15"/><text x="61.9931%" y="607.50"></text></g><g><title>&lt;tokio::io::util::read::Read&lt;R&gt; as core::future::future::Future&gt;::poll (15 samples, 1.38%)</title><rect x="61.7431%" y="581" width="1.3761%" height="15" fill="rgb(227,80,54)" fg:x="673" fg:w="15"/><text x="61.9931%" y="591.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::new (1 samples, 0.09%)</title><rect x="63.0275%" y="565" width="0.0917%" height="15" fill="rgb(254,48,11)" fg:x="687" fg:w="1"/><text x="63.2775%" y="575.50"></text></g><g><title>tokio::io::read_buf::slice_to_uninit_mut (1 samples, 0.09%)</title><rect x="63.0275%" y="549" width="0.0917%" height="15" fill="rgb(235,193,26)" fg:x="687" fg:w="1"/><text x="63.2775%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 1.65%)</title><rect x="61.5596%" y="645" width="1.6514%" height="15" fill="rgb(229,99,21)" fg:x="671" fg:w="18"/><text x="61.8096%" y="655.50"></text></g><g><title>sqlx_core::io::buf_stream::read_raw_into::{{closure}} (17 samples, 1.56%)</title><rect x="61.6514%" y="629" width="1.5596%" height="15" fill="rgb(211,140,41)" fg:x="672" fg:w="17"/><text x="61.9014%" y="639.50"></text></g><g><title>sqlx_core::io::buf_stream::BufTruncator::reserve (1 samples, 0.09%)</title><rect x="63.1193%" y="613" width="0.0917%" height="15" fill="rgb(240,227,30)" fg:x="688" fg:w="1"/><text x="63.3693%" y="623.50"></text></g><g><title>bytes::bytes_mut::BytesMut::resize (1 samples, 0.09%)</title><rect x="63.1193%" y="597" width="0.0917%" height="15" fill="rgb(215,224,45)" fg:x="688" fg:w="1"/><text x="63.3693%" y="607.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.09%)</title><rect x="63.1193%" y="581" width="0.0917%" height="15" fill="rgb(206,123,31)" fg:x="688" fg:w="1"/><text x="63.3693%" y="591.50"></text></g><g><title>__memset_avx2_unaligned (1 samples, 0.09%)</title><rect x="63.1193%" y="565" width="0.0917%" height="15" fill="rgb(210,138,16)" fg:x="688" fg:w="1"/><text x="63.3693%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 1.93%)</title><rect x="61.5596%" y="741" width="1.9266%" height="15" fill="rgb(228,57,28)" fg:x="671" fg:w="21"/><text x="61.8096%" y="751.50">&lt;..</text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read::{{closure}} (21 samples, 1.93%)</title><rect x="61.5596%" y="725" width="1.9266%" height="15" fill="rgb(242,170,10)" fg:x="671" fg:w="21"/><text x="61.8096%" y="735.50">s..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 1.93%)</title><rect x="61.5596%" y="709" width="1.9266%" height="15" fill="rgb(228,214,39)" fg:x="671" fg:w="21"/><text x="61.8096%" y="719.50">&lt;..</text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_with::{{closure}} (21 samples, 1.93%)</title><rect x="61.5596%" y="693" width="1.9266%" height="15" fill="rgb(218,179,33)" fg:x="671" fg:w="21"/><text x="61.8096%" y="703.50">s..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 1.93%)</title><rect x="61.5596%" y="677" width="1.9266%" height="15" fill="rgb(235,193,39)" fg:x="671" fg:w="21"/><text x="61.8096%" y="687.50">&lt;..</text></g><g><title>sqlx_core::io::buf_stream::BufStream&lt;S&gt;::read_raw::{{closure}} (21 samples, 1.93%)</title><rect x="61.5596%" y="661" width="1.9266%" height="15" fill="rgb(219,221,36)" fg:x="671" fg:w="21"/><text x="61.8096%" y="671.50">s..</text></g><g><title>bytes::bytes_mut::BytesMut::split_to (3 samples, 0.28%)</title><rect x="63.2110%" y="645" width="0.2752%" height="15" fill="rgb(248,218,19)" fg:x="689" fg:w="3"/><text x="63.4610%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (2 samples, 0.18%)</title><rect x="63.4862%" y="741" width="0.1835%" height="15" fill="rgb(205,50,9)" fg:x="692" fg:w="2"/><text x="63.7362%" y="751.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (2 samples, 0.18%)</title><rect x="63.4862%" y="725" width="0.1835%" height="15" fill="rgb(238,81,28)" fg:x="692" fg:w="2"/><text x="63.7362%" y="735.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (2 samples, 0.18%)</title><rect x="63.4862%" y="709" width="0.1835%" height="15" fill="rgb(235,110,19)" fg:x="692" fg:w="2"/><text x="63.7362%" y="719.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (2 samples, 0.18%)</title><rect x="63.4862%" y="693" width="0.1835%" height="15" fill="rgb(214,7,14)" fg:x="692" fg:w="2"/><text x="63.7362%" y="703.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::{{closure}} (2 samples, 0.18%)</title><rect x="63.4862%" y="677" width="0.1835%" height="15" fill="rgb(211,77,3)" fg:x="692" fg:w="2"/><text x="63.7362%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 2.29%)</title><rect x="61.4679%" y="805" width="2.2936%" height="15" fill="rgb(229,5,9)" fg:x="670" fg:w="25"/><text x="61.7179%" y="815.50">&lt;..</text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv::{{closure}} (25 samples, 2.29%)</title><rect x="61.4679%" y="789" width="2.2936%" height="15" fill="rgb(225,90,11)" fg:x="670" fg:w="25"/><text x="61.7179%" y="799.50">s..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 2.29%)</title><rect x="61.4679%" y="773" width="2.2936%" height="15" fill="rgb(242,56,8)" fg:x="670" fg:w="25"/><text x="61.7179%" y="783.50">&lt;..</text></g><g><title>sqlx_core::postgres::connection::stream::PgStream::recv_unchecked::{{closure}} (25 samples, 2.29%)</title><rect x="61.4679%" y="757" width="2.2936%" height="15" fill="rgb(249,212,39)" fg:x="670" fg:w="25"/><text x="61.7179%" y="767.50">s..</text></g><g><title>sqlx_core::postgres::message::MessageFormat::try_from_u8 (1 samples, 0.09%)</title><rect x="63.6697%" y="741" width="0.0917%" height="15" fill="rgb(236,90,9)" fg:x="694" fg:w="1"/><text x="63.9197%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.18%)</title><rect x="63.7615%" y="805" width="0.1835%" height="15" fill="rgb(206,88,35)" fg:x="695" fg:w="2"/><text x="64.0115%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;futures_channel::mpsc::SenderTask&gt;&gt; (2 samples, 0.18%)</title><rect x="63.7615%" y="789" width="0.1835%" height="15" fill="rgb(205,126,30)" fg:x="695" fg:w="2"/><text x="64.0115%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::mutex::MovableMutex&gt; (2 samples, 0.18%)</title><rect x="63.7615%" y="773" width="0.1835%" height="15" fill="rgb(230,176,12)" fg:x="695" fg:w="2"/><text x="64.0115%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::sys::unix::mutex::Mutex&gt;&gt; (2 samples, 0.18%)</title><rect x="63.7615%" y="757" width="0.1835%" height="15" fill="rgb(243,19,9)" fg:x="695" fg:w="2"/><text x="64.0115%" y="767.50"></text></g><g><title>alloc::alloc::box_free (2 samples, 0.18%)</title><rect x="63.7615%" y="741" width="0.1835%" height="15" fill="rgb(245,171,17)" fg:x="695" fg:w="2"/><text x="64.0115%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.18%)</title><rect x="63.7615%" y="725" width="0.1835%" height="15" fill="rgb(227,52,21)" fg:x="695" fg:w="2"/><text x="64.0115%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.18%)</title><rect x="63.7615%" y="709" width="0.1835%" height="15" fill="rgb(238,69,14)" fg:x="695" fg:w="2"/><text x="64.0115%" y="719.50"></text></g><g><title>__free (2 samples, 0.18%)</title><rect x="63.7615%" y="693" width="0.1835%" height="15" fill="rgb(241,156,39)" fg:x="695" fg:w="2"/><text x="64.0115%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="63.8532%" y="677" width="0.0917%" height="15" fill="rgb(212,227,28)" fg:x="696" fg:w="1"/><text x="64.1032%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;sqlx_core::postgres::statement::PgStatementMetadata&gt;&gt; (1 samples, 0.09%)</title><rect x="63.9450%" y="805" width="0.0917%" height="15" fill="rgb(209,118,27)" fg:x="697" fg:w="1"/><text x="64.1950%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="63.9450%" y="789" width="0.0917%" height="15" fill="rgb(226,102,5)" fg:x="697" fg:w="1"/><text x="64.1950%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.09%)</title><rect x="63.9450%" y="773" width="0.0917%" height="15" fill="rgb(223,34,3)" fg:x="697" fg:w="1"/><text x="64.1950%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::postgres::statement::PgStatementMetadata&gt; (1 samples, 0.09%)</title><rect x="63.9450%" y="757" width="0.0917%" height="15" fill="rgb(221,81,38)" fg:x="697" fg:w="1"/><text x="64.1950%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;ahash::hash_map::AHashMap&lt;sqlx_core::ext::ustr::UStr,usize&gt;&gt; (1 samples, 0.09%)</title><rect x="63.9450%" y="741" width="0.0917%" height="15" fill="rgb(236,219,28)" fg:x="697" fg:w="1"/><text x="64.1950%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;sqlx_core::ext::ustr::UStr,usize,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.09%)</title><rect x="63.9450%" y="725" width="0.0917%" height="15" fill="rgb(213,200,14)" fg:x="697" fg:w="1"/><text x="64.1950%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;sqlx_core::ext::ustr::UStr,usize,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.09%)</title><rect x="63.9450%" y="709" width="0.0917%" height="15" fill="rgb(240,33,19)" fg:x="697" fg:w="1"/><text x="64.1950%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(sqlx_core::ext::ustr::UStr,usize)&gt;&gt; (1 samples, 0.09%)</title><rect x="63.9450%" y="693" width="0.0917%" height="15" fill="rgb(233,113,27)" fg:x="697" fg:w="1"/><text x="64.1950%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="63.9450%" y="677" width="0.0917%" height="15" fill="rgb(220,221,18)" fg:x="697" fg:w="1"/><text x="64.1950%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 2.75%)</title><rect x="61.3761%" y="837" width="2.7523%" height="15" fill="rgb(238,92,8)" fg:x="669" fg:w="30"/><text x="61.6261%" y="847.50">&lt;c..</text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::postgres::connection::PgConnection&gt;::run::{{closure}}::{{closure}}::{{closure}} (29 samples, 2.66%)</title><rect x="61.4679%" y="821" width="2.6606%" height="15" fill="rgb(222,164,16)" fg:x="670" fg:w="29"/><text x="61.7179%" y="831.50">sq..</text></g><g><title>core::ptr::drop_in_place&lt;sqlx_core::logger::QueryLogger&gt; (1 samples, 0.09%)</title><rect x="64.0367%" y="805" width="0.0917%" height="15" fill="rgb(241,119,3)" fg:x="698" fg:w="1"/><text x="64.2867%" y="815.50"></text></g><g><title>&lt;sqlx_core::logger::QueryLogger as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="64.0367%" y="789" width="0.0917%" height="15" fill="rgb(241,44,8)" fg:x="698" fg:w="1"/><text x="64.2867%" y="799.50"></text></g><g><title>sqlx_core::logger::QueryLogger::finish (1 samples, 0.09%)</title><rect x="64.0367%" y="773" width="0.0917%" height="15" fill="rgb(230,36,40)" fg:x="698" fg:w="1"/><text x="64.2867%" y="783.50"></text></g><g><title>std::time::Instant::elapsed (1 samples, 0.09%)</title><rect x="64.0367%" y="757" width="0.0917%" height="15" fill="rgb(243,16,36)" fg:x="698" fg:w="1"/><text x="64.2867%" y="767.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.09%)</title><rect x="64.0367%" y="741" width="0.0917%" height="15" fill="rgb(231,4,26)" fg:x="698" fg:w="1"/><text x="64.2867%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.09%)</title><rect x="64.0367%" y="725" width="0.0917%" height="15" fill="rgb(240,9,31)" fg:x="698" fg:w="1"/><text x="64.2867%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (1 samples, 0.09%)</title><rect x="64.0367%" y="709" width="0.0917%" height="15" fill="rgb(207,173,15)" fg:x="698" fg:w="1"/><text x="64.2867%" y="719.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.09%)</title><rect x="64.0367%" y="693" width="0.0917%" height="15" fill="rgb(224,192,53)" fg:x="698" fg:w="1"/><text x="64.2867%" y="703.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.09%)</title><rect x="64.0367%" y="677" width="0.0917%" height="15" fill="rgb(223,67,28)" fg:x="698" fg:w="1"/><text x="64.2867%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="64.0367%" y="661" width="0.0917%" height="15" fill="rgb(211,20,47)" fg:x="698" fg:w="1"/><text x="64.2867%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="64.0367%" y="645" width="0.0917%" height="15" fill="rgb(240,228,2)" fg:x="698" fg:w="1"/><text x="64.2867%" y="655.50"></text></g><g><title>&lt;futures_channel::mpsc::BoundedSenderInner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="64.1284%" y="789" width="0.0917%" height="15" fill="rgb(248,151,12)" fg:x="699" fg:w="1"/><text x="64.3784%" y="799.50"></text></g><g><title>futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::close_channel (1 samples, 0.09%)</title><rect x="64.1284%" y="773" width="0.0917%" height="15" fill="rgb(244,8,39)" fg:x="699" fg:w="1"/><text x="64.3784%" y="783.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (1 samples, 0.09%)</title><rect x="64.1284%" y="757" width="0.0917%" height="15" fill="rgb(222,26,8)" fg:x="699" fg:w="1"/><text x="64.3784%" y="767.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::take (1 samples, 0.09%)</title><rect x="64.1284%" y="741" width="0.0917%" height="15" fill="rgb(213,106,44)" fg:x="699" fg:w="1"/><text x="64.3784%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.09%)</title><rect x="64.1284%" y="725" width="0.0917%" height="15" fill="rgb(214,129,20)" fg:x="699" fg:w="1"/><text x="64.3784%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.09%)</title><rect x="64.1284%" y="709" width="0.0917%" height="15" fill="rgb(212,32,13)" fg:x="699" fg:w="1"/><text x="64.3784%" y="719.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (34 samples, 3.12%)</title><rect x="61.1927%" y="917" width="3.1193%" height="15" fill="rgb(208,168,33)" fg:x="667" fg:w="34"/><text x="61.4427%" y="927.50">&lt;&amp;m..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (34 samples, 3.12%)</title><rect x="61.1927%" y="901" width="3.1193%" height="15" fill="rgb(231,207,8)" fg:x="667" fg:w="34"/><text x="61.4427%" y="911.50">&lt;co..</text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (34 samples, 3.12%)</title><rect x="61.1927%" y="885" width="3.1193%" height="15" fill="rgb(235,219,23)" fg:x="667" fg:w="34"/><text x="61.4427%" y="895.50">&lt;fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 3.12%)</title><rect x="61.1927%" y="869" width="3.1193%" height="15" fill="rgb(226,216,26)" fg:x="667" fg:w="34"/><text x="61.4427%" y="879.50">&lt;co..</text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (34 samples, 3.12%)</title><rect x="61.1927%" y="853" width="3.1193%" height="15" fill="rgb(239,137,16)" fg:x="667" fg:w="34"/><text x="61.4427%" y="863.50">sql..</text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::Sender&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt; (2 samples, 0.18%)</title><rect x="64.1284%" y="837" width="0.1835%" height="15" fill="rgb(207,12,36)" fg:x="699" fg:w="2"/><text x="64.3784%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;futures_channel::mpsc::BoundedSenderInner&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt;&gt; (2 samples, 0.18%)</title><rect x="64.1284%" y="821" width="0.1835%" height="15" fill="rgb(210,214,24)" fg:x="699" fg:w="2"/><text x="64.3784%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_channel::mpsc::BoundedSenderInner&lt;core::result::Result&lt;either::Either&lt;sqlx_core::postgres::query_result::PgQueryResult,sqlx_core::postgres::row::PgRow&gt;,sqlx_core::error::Error&gt;&gt;&gt; (2 samples, 0.18%)</title><rect x="64.1284%" y="805" width="0.1835%" height="15" fill="rgb(206,56,30)" fg:x="699" fg:w="2"/><text x="64.3784%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;futures_channel::mpsc::SenderTask&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="64.2202%" y="789" width="0.0917%" height="15" fill="rgb(228,143,26)" fg:x="700" fg:w="1"/><text x="64.4702%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="64.2202%" y="773" width="0.0917%" height="15" fill="rgb(216,218,46)" fg:x="700" fg:w="1"/><text x="64.4702%" y="783.50"></text></g><g><title>futures_channel::mpsc::State::is_closed (1 samples, 0.09%)</title><rect x="64.3119%" y="869" width="0.0917%" height="15" fill="rgb(206,6,19)" fg:x="701" fg:w="1"/><text x="64.5619%" y="879.50"></text></g><g><title>futures_channel::mpsc::decode_state (2 samples, 0.18%)</title><rect x="64.4037%" y="869" width="0.1835%" height="15" fill="rgb(239,177,51)" fg:x="702" fg:w="2"/><text x="64.6537%" y="879.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (74 samples, 6.79%)</title><rect x="57.9817%" y="1333" width="6.7890%" height="15" fill="rgb(216,55,25)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1343.50">&lt;core::pi..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (74 samples, 6.79%)</title><rect x="57.9817%" y="1317" width="6.7890%" height="15" fill="rgb(231,163,29)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1327.50">&lt;futures_..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (74 samples, 6.79%)</title><rect x="57.9817%" y="1301" width="6.7890%" height="15" fill="rgb(232,149,50)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1311.50">&lt;futures_..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (74 samples, 6.79%)</title><rect x="57.9817%" y="1285" width="6.7890%" height="15" fill="rgb(223,142,48)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1295.50">&lt;futures_..</text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (74 samples, 6.79%)</title><rect x="57.9817%" y="1269" width="6.7890%" height="15" fill="rgb(245,83,23)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1279.50">&lt;futures_..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (74 samples, 6.79%)</title><rect x="57.9817%" y="1253" width="6.7890%" height="15" fill="rgb(224,63,2)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1263.50">&lt;F as fut..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (74 samples, 6.79%)</title><rect x="57.9817%" y="1237" width="6.7890%" height="15" fill="rgb(218,65,53)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1247.50">&lt;core::pi..</text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (74 samples, 6.79%)</title><rect x="57.9817%" y="1221" width="6.7890%" height="15" fill="rgb(221,84,29)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1231.50">&lt;futures_..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (74 samples, 6.79%)</title><rect x="57.9817%" y="1205" width="6.7890%" height="15" fill="rgb(234,0,32)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1215.50">&lt;S as fut..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (74 samples, 6.79%)</title><rect x="57.9817%" y="1189" width="6.7890%" height="15" fill="rgb(206,20,16)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1199.50">&lt;core::pi..</text></g><g><title>&lt;futures_util::stream::try_stream::try_filter_map::TryFilterMap&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (74 samples, 6.79%)</title><rect x="57.9817%" y="1173" width="6.7890%" height="15" fill="rgb(244,172,18)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1183.50">&lt;futures_..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (74 samples, 6.79%)</title><rect x="57.9817%" y="1157" width="6.7890%" height="15" fill="rgb(254,133,1)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1167.50">&lt;S as fut..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (74 samples, 6.79%)</title><rect x="57.9817%" y="1141" width="6.7890%" height="15" fill="rgb(222,206,41)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1151.50">&lt;core::pi..</text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (74 samples, 6.79%)</title><rect x="57.9817%" y="1125" width="6.7890%" height="15" fill="rgb(212,3,42)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1135.50">&lt;sqlx_cor..</text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (74 samples, 6.79%)</title><rect x="57.9817%" y="1109" width="6.7890%" height="15" fill="rgb(241,11,4)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1119.50">&lt;&amp;mut F a..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (74 samples, 6.79%)</title><rect x="57.9817%" y="1093" width="6.7890%" height="15" fill="rgb(205,19,26)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1103.50">&lt;core::pi..</text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (74 samples, 6.79%)</title><rect x="57.9817%" y="1077" width="6.7890%" height="15" fill="rgb(210,179,32)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1087.50">&lt;futures_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (74 samples, 6.79%)</title><rect x="57.9817%" y="1061" width="6.7890%" height="15" fill="rgb(227,116,49)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1071.50">&lt;core::fu..</text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new::{{closure}} (74 samples, 6.79%)</title><rect x="57.9817%" y="1045" width="6.7890%" height="15" fill="rgb(211,146,6)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1055.50">sqlx_core..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (74 samples, 6.79%)</title><rect x="57.9817%" y="1029" width="6.7890%" height="15" fill="rgb(219,44,39)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1039.50">&lt;core::fu..</text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_core::postgres::connection::PgConnection&gt;::fetch_many::{{closure}}::{{closure}} (74 samples, 6.79%)</title><rect x="57.9817%" y="1013" width="6.7890%" height="15" fill="rgb(234,128,11)" fg:x="632" fg:w="74"/><text x="58.2317%" y="1023.50">sqlx_core..</text></g><g><title>&lt;futures_util::stream::try_stream::try_next::TryNext&lt;St&gt; as core::future::future::Future&gt;::poll (39 samples, 3.58%)</title><rect x="61.1927%" y="997" width="3.5780%" height="15" fill="rgb(220,183,53)" fg:x="667" fg:w="39"/><text x="61.4427%" y="1007.50">&lt;fut..</text></g><g><title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (39 samples, 3.58%)</title><rect x="61.1927%" y="981" width="3.5780%" height="15" fill="rgb(213,219,32)" fg:x="667" fg:w="39"/><text x="61.4427%" y="991.50">futu..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (39 samples, 3.58%)</title><rect x="61.1927%" y="965" width="3.5780%" height="15" fill="rgb(232,156,16)" fg:x="667" fg:w="39"/><text x="61.4427%" y="975.50">&lt;S a..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (39 samples, 3.58%)</title><rect x="61.1927%" y="949" width="3.5780%" height="15" fill="rgb(246,135,34)" fg:x="667" fg:w="39"/><text x="61.4427%" y="959.50">&lt;cor..</text></g><g><title>&lt;sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (39 samples, 3.58%)</title><rect x="61.1927%" y="933" width="3.5780%" height="15" fill="rgb(241,99,0)" fg:x="667" fg:w="39"/><text x="61.4427%" y="943.50">&lt;sql..</text></g><g><title>&lt;&amp;mut S as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.46%)</title><rect x="64.3119%" y="917" width="0.4587%" height="15" fill="rgb(222,103,45)" fg:x="701" fg:w="5"/><text x="64.5619%" y="927.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.46%)</title><rect x="64.3119%" y="901" width="0.4587%" height="15" fill="rgb(212,57,4)" fg:x="701" fg:w="5"/><text x="64.5619%" y="911.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (5 samples, 0.46%)</title><rect x="64.3119%" y="885" width="0.4587%" height="15" fill="rgb(215,68,47)" fg:x="701" fg:w="5"/><text x="64.5619%" y="895.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (2 samples, 0.18%)</title><rect x="64.5872%" y="869" width="0.1835%" height="15" fill="rgb(230,84,2)" fg:x="704" fg:w="2"/><text x="64.8372%" y="879.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (2 samples, 0.18%)</title><rect x="64.5872%" y="853" width="0.1835%" height="15" fill="rgb(220,102,14)" fg:x="704" fg:w="2"/><text x="64.8372%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.09%)</title><rect x="64.6789%" y="837" width="0.0917%" height="15" fill="rgb(240,10,32)" fg:x="705" fg:w="1"/><text x="64.9289%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.09%)</title><rect x="64.6789%" y="821" width="0.0917%" height="15" fill="rgb(215,47,27)" fg:x="705" fg:w="1"/><text x="64.9289%" y="831.50"></text></g><g><title>&lt;futures_channel::mpsc::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.37%)</title><rect x="64.7706%" y="1253" width="0.3670%" height="15" fill="rgb(233,188,43)" fg:x="706" fg:w="4"/><text x="65.0206%" y="1263.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.18%)</title><rect x="64.9541%" y="1237" width="0.1835%" height="15" fill="rgb(253,190,1)" fg:x="708" fg:w="2"/><text x="65.2041%" y="1247.50"></text></g><g><title>&lt;futures_channel::mpsc::BoundedSenderInner&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.18%)</title><rect x="64.9541%" y="1221" width="0.1835%" height="15" fill="rgb(206,114,52)" fg:x="708" fg:w="2"/><text x="65.2041%" y="1231.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::new (2 samples, 0.18%)</title><rect x="64.9541%" y="1205" width="0.1835%" height="15" fill="rgb(233,120,37)" fg:x="708" fg:w="2"/><text x="65.2041%" y="1215.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::new (2 samples, 0.18%)</title><rect x="64.9541%" y="1189" width="0.1835%" height="15" fill="rgb(214,52,39)" fg:x="708" fg:w="2"/><text x="65.2041%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (2 samples, 0.18%)</title><rect x="64.9541%" y="1173" width="0.1835%" height="15" fill="rgb(223,80,29)" fg:x="708" fg:w="2"/><text x="65.2041%" y="1183.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.18%)</title><rect x="64.9541%" y="1157" width="0.1835%" height="15" fill="rgb(230,101,40)" fg:x="708" fg:w="2"/><text x="65.2041%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.18%)</title><rect x="64.9541%" y="1141" width="0.1835%" height="15" fill="rgb(219,211,8)" fg:x="708" fg:w="2"/><text x="65.2041%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.18%)</title><rect x="64.9541%" y="1125" width="0.1835%" height="15" fill="rgb(252,126,28)" fg:x="708" fg:w="2"/><text x="65.2041%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.18%)</title><rect x="64.9541%" y="1109" width="0.1835%" height="15" fill="rgb(215,56,38)" fg:x="708" fg:w="2"/><text x="65.2041%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.18%)</title><rect x="64.9541%" y="1093" width="0.1835%" height="15" fill="rgb(249,55,44)" fg:x="708" fg:w="2"/><text x="65.2041%" y="1103.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.18%)</title><rect x="64.9541%" y="1077" width="0.1835%" height="15" fill="rgb(220,221,32)" fg:x="708" fg:w="2"/><text x="65.2041%" y="1087.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.37%)</title><rect x="65.1376%" y="1125" width="0.3670%" height="15" fill="rgb(212,216,41)" fg:x="710" fg:w="4"/><text x="65.3876%" y="1135.50"></text></g><g><title>_int_malloc (3 samples, 0.28%)</title><rect x="65.2294%" y="1109" width="0.2752%" height="15" fill="rgb(228,213,43)" fg:x="711" fg:w="3"/><text x="65.4794%" y="1119.50"></text></g><g><title>__rdl_alloc (1 samples, 0.09%)</title><rect x="65.5046%" y="1125" width="0.0917%" height="15" fill="rgb(211,31,26)" fg:x="714" fg:w="1"/><text x="65.7546%" y="1135.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::new (6 samples, 0.55%)</title><rect x="65.1376%" y="1237" width="0.5505%" height="15" fill="rgb(229,202,19)" fg:x="710" fg:w="6"/><text x="65.3876%" y="1247.50"></text></g><g><title>futures_channel::mpsc::queue::Node&lt;T&gt;::new (6 samples, 0.55%)</title><rect x="65.1376%" y="1221" width="0.5505%" height="15" fill="rgb(229,105,46)" fg:x="710" fg:w="6"/><text x="65.3876%" y="1231.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.55%)</title><rect x="65.1376%" y="1205" width="0.5505%" height="15" fill="rgb(235,108,1)" fg:x="710" fg:w="6"/><text x="65.3876%" y="1215.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.55%)</title><rect x="65.1376%" y="1189" width="0.5505%" height="15" fill="rgb(245,111,35)" fg:x="710" fg:w="6"/><text x="65.3876%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.55%)</title><rect x="65.1376%" y="1173" width="0.5505%" height="15" fill="rgb(219,185,31)" fg:x="710" fg:w="6"/><text x="65.3876%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.55%)</title><rect x="65.1376%" y="1157" width="0.5505%" height="15" fill="rgb(214,4,43)" fg:x="710" fg:w="6"/><text x="65.3876%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.55%)</title><rect x="65.1376%" y="1141" width="0.5505%" height="15" fill="rgb(235,227,40)" fg:x="710" fg:w="6"/><text x="65.3876%" y="1151.50"></text></g><g><title>__rust_alloc (1 samples, 0.09%)</title><rect x="65.5963%" y="1125" width="0.0917%" height="15" fill="rgb(230,88,30)" fg:x="715" fg:w="1"/><text x="65.8463%" y="1135.50"></text></g><g><title>futures_channel::mpsc::channel (8 samples, 0.73%)</title><rect x="65.1376%" y="1253" width="0.7339%" height="15" fill="rgb(216,217,1)" fg:x="710" fg:w="8"/><text x="65.3876%" y="1263.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::new (2 samples, 0.18%)</title><rect x="65.6881%" y="1237" width="0.1835%" height="15" fill="rgb(248,139,50)" fg:x="716" fg:w="2"/><text x="65.9381%" y="1247.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::new (2 samples, 0.18%)</title><rect x="65.6881%" y="1221" width="0.1835%" height="15" fill="rgb(233,1,21)" fg:x="716" fg:w="2"/><text x="65.9381%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (2 samples, 0.18%)</title><rect x="65.6881%" y="1205" width="0.1835%" height="15" fill="rgb(215,183,12)" fg:x="716" fg:w="2"/><text x="65.9381%" y="1215.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.18%)</title><rect x="65.6881%" y="1189" width="0.1835%" height="15" fill="rgb(229,104,42)" fg:x="716" fg:w="2"/><text x="65.9381%" y="1199.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.18%)</title><rect x="65.6881%" y="1173" width="0.1835%" height="15" fill="rgb(243,34,48)" fg:x="716" fg:w="2"/><text x="65.9381%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.18%)</title><rect x="65.6881%" y="1157" width="0.1835%" height="15" fill="rgb(239,11,44)" fg:x="716" fg:w="2"/><text x="65.9381%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.18%)</title><rect x="65.6881%" y="1141" width="0.1835%" height="15" fill="rgb(231,98,35)" fg:x="716" fg:w="2"/><text x="65.9381%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.18%)</title><rect x="65.6881%" y="1125" width="0.1835%" height="15" fill="rgb(233,28,25)" fg:x="716" fg:w="2"/><text x="65.9381%" y="1135.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="65.7798%" y="1109" width="0.0917%" height="15" fill="rgb(234,123,11)" fg:x="717" fg:w="1"/><text x="66.0298%" y="1119.50"></text></g><g><title>&lt;sqlx_core::postgres::connection::PgConnection as sqlx_core::connection::Connection&gt;::ping (15 samples, 1.38%)</title><rect x="64.7706%" y="1333" width="1.3761%" height="15" fill="rgb(220,69,3)" fg:x="706" fg:w="15"/><text x="65.0206%" y="1343.50"></text></g><g><title>sqlx_core::executor::Executor::execute (15 samples, 1.38%)</title><rect x="64.7706%" y="1317" width="1.3761%" height="15" fill="rgb(214,64,36)" fg:x="706" fg:w="15"/><text x="65.0206%" y="1327.50"></text></g><g><title>sqlx_core::executor::Executor::execute_many (15 samples, 1.38%)</title><rect x="64.7706%" y="1301" width="1.3761%" height="15" fill="rgb(211,138,32)" fg:x="706" fg:w="15"/><text x="65.0206%" y="1311.50"></text></g><g><title>sqlx_core::postgres::connection::executor::&lt;impl sqlx_core::executor::Executor for &amp;mut sqlx_core::postgres::connection::PgConnection&gt;::fetch_many (15 samples, 1.38%)</title><rect x="64.7706%" y="1285" width="1.3761%" height="15" fill="rgb(213,118,47)" fg:x="706" fg:w="15"/><text x="65.0206%" y="1295.50"></text></g><g><title>sqlx_core::ext::async_stream::TryAsyncStream&lt;T&gt;::new (15 samples, 1.38%)</title><rect x="64.7706%" y="1269" width="1.3761%" height="15" fill="rgb(243,124,49)" fg:x="706" fg:w="15"/><text x="65.0206%" y="1279.50"></text></g><g><title>futures_util::future::future::FutureExt::boxed (3 samples, 0.28%)</title><rect x="65.8716%" y="1253" width="0.2752%" height="15" fill="rgb(221,30,28)" fg:x="718" fg:w="3"/><text x="66.1216%" y="1263.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (3 samples, 0.28%)</title><rect x="65.8716%" y="1237" width="0.2752%" height="15" fill="rgb(246,37,13)" fg:x="718" fg:w="3"/><text x="66.1216%" y="1247.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.28%)</title><rect x="65.8716%" y="1221" width="0.2752%" height="15" fill="rgb(249,66,14)" fg:x="718" fg:w="3"/><text x="66.1216%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.28%)</title><rect x="65.8716%" y="1205" width="0.2752%" height="15" fill="rgb(213,166,5)" fg:x="718" fg:w="3"/><text x="66.1216%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.28%)</title><rect x="65.8716%" y="1189" width="0.2752%" height="15" fill="rgb(221,66,24)" fg:x="718" fg:w="3"/><text x="66.1216%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.28%)</title><rect x="65.8716%" y="1173" width="0.2752%" height="15" fill="rgb(210,132,17)" fg:x="718" fg:w="3"/><text x="66.1216%" y="1183.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.28%)</title><rect x="65.8716%" y="1157" width="0.2752%" height="15" fill="rgb(243,202,5)" fg:x="718" fg:w="3"/><text x="66.1216%" y="1167.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="66.0550%" y="1141" width="0.0917%" height="15" fill="rgb(233,70,48)" fg:x="720" fg:w="1"/><text x="66.3050%" y="1151.50"></text></g><g><title>malloc_consolidate (1 samples, 0.09%)</title><rect x="66.0550%" y="1125" width="0.0917%" height="15" fill="rgb(238,41,26)" fg:x="720" fg:w="1"/><text x="66.3050%" y="1135.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::push (1 samples, 0.09%)</title><rect x="66.1468%" y="1317" width="0.0917%" height="15" fill="rgb(241,19,31)" fg:x="721" fg:w="1"/><text x="66.3968%" y="1327.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::push_or_else (1 samples, 0.09%)</title><rect x="66.1468%" y="1301" width="0.0917%" height="15" fill="rgb(214,76,10)" fg:x="721" fg:w="1"/><text x="66.3968%" y="1311.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="66.2385%" y="1285" width="0.0917%" height="15" fill="rgb(254,202,22)" fg:x="722" fg:w="1"/><text x="66.4885%" y="1295.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (92 samples, 8.44%)</title><rect x="57.9817%" y="1509" width="8.4404%" height="15" fill="rgb(214,72,24)" fg:x="632" fg:w="92"/><text x="58.2317%" y="1519.50">tokio::runti..</text></g><g><title>std::panic::catch_unwind (92 samples, 8.44%)</title><rect x="57.9817%" y="1493" width="8.4404%" height="15" fill="rgb(221,92,46)" fg:x="632" fg:w="92"/><text x="58.2317%" y="1503.50">std::panic::..</text></g><g><title>std::panicking::try (92 samples, 8.44%)</title><rect x="57.9817%" y="1477" width="8.4404%" height="15" fill="rgb(246,13,50)" fg:x="632" fg:w="92"/><text x="58.2317%" y="1487.50">std::panicki..</text></g><g><title>std::panicking::try::do_call (92 samples, 8.44%)</title><rect x="57.9817%" y="1461" width="8.4404%" height="15" fill="rgb(240,165,38)" fg:x="632" fg:w="92"/><text x="58.2317%" y="1471.50">std::panicki..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (92 samples, 8.44%)</title><rect x="57.9817%" y="1445" width="8.4404%" height="15" fill="rgb(241,24,51)" fg:x="632" fg:w="92"/><text x="58.2317%" y="1455.50">&lt;core::panic..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (92 samples, 8.44%)</title><rect x="57.9817%" y="1429" width="8.4404%" height="15" fill="rgb(227,51,44)" fg:x="632" fg:w="92"/><text x="58.2317%" y="1439.50">tokio::runti..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (92 samples, 8.44%)</title><rect x="57.9817%" y="1413" width="8.4404%" height="15" fill="rgb(231,121,3)" fg:x="632" fg:w="92"/><text x="58.2317%" y="1423.50">tokio::runti..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (92 samples, 8.44%)</title><rect x="57.9817%" y="1397" width="8.4404%" height="15" fill="rgb(245,3,41)" fg:x="632" fg:w="92"/><text x="58.2317%" y="1407.50">tokio::loom:..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (92 samples, 8.44%)</title><rect x="57.9817%" y="1381" width="8.4404%" height="15" fill="rgb(214,13,26)" fg:x="632" fg:w="92"/><text x="58.2317%" y="1391.50">tokio::runti..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (92 samples, 8.44%)</title><rect x="57.9817%" y="1365" width="8.4404%" height="15" fill="rgb(252,75,11)" fg:x="632" fg:w="92"/><text x="58.2317%" y="1375.50">&lt;core::futur..</text></g><g><title>sqlx_core::pool::connection::PoolConnection&lt;DB&gt;::return_to_pool::{{closure}} (92 samples, 8.44%)</title><rect x="57.9817%" y="1349" width="8.4404%" height="15" fill="rgb(218,226,17)" fg:x="632" fg:w="92"/><text x="58.2317%" y="1359.50">sqlx_core::p..</text></g><g><title>sqlx_core::pool::inner::SharedPool&lt;DB&gt;::release (3 samples, 0.28%)</title><rect x="66.1468%" y="1333" width="0.2752%" height="15" fill="rgb(248,89,38)" fg:x="721" fg:w="3"/><text x="66.3968%" y="1343.50"></text></g><g><title>sqlx_core::pool::connection::Floating&lt;sqlx_core::pool::connection::Live&lt;DB&gt;&gt;::into_idle (2 samples, 0.18%)</title><rect x="66.2385%" y="1317" width="0.1835%" height="15" fill="rgb(237,73,46)" fg:x="722" fg:w="2"/><text x="66.4885%" y="1327.50"></text></g><g><title>sqlx_core::pool::connection::Live&lt;DB&gt;::into_idle (2 samples, 0.18%)</title><rect x="66.2385%" y="1301" width="0.1835%" height="15" fill="rgb(242,78,33)" fg:x="722" fg:w="2"/><text x="66.4885%" y="1311.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.09%)</title><rect x="66.3303%" y="1285" width="0.0917%" height="15" fill="rgb(235,60,3)" fg:x="723" fg:w="1"/><text x="66.5803%" y="1295.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.09%)</title><rect x="66.3303%" y="1269" width="0.0917%" height="15" fill="rgb(216,172,19)" fg:x="723" fg:w="1"/><text x="66.5803%" y="1279.50"></text></g><g><title>std::sys::unix::time::inner::now (1 samples, 0.09%)</title><rect x="66.3303%" y="1253" width="0.0917%" height="15" fill="rgb(227,6,42)" fg:x="723" fg:w="1"/><text x="66.5803%" y="1263.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.09%)</title><rect x="66.3303%" y="1237" width="0.0917%" height="15" fill="rgb(223,207,42)" fg:x="723" fg:w="1"/><text x="66.5803%" y="1247.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.09%)</title><rect x="66.3303%" y="1221" width="0.0917%" height="15" fill="rgb(246,138,30)" fg:x="723" fg:w="1"/><text x="66.5803%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="66.3303%" y="1205" width="0.0917%" height="15" fill="rgb(251,199,47)" fg:x="723" fg:w="1"/><text x="66.5803%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="66.3303%" y="1189" width="0.0917%" height="15" fill="rgb(228,218,44)" fg:x="723" fg:w="1"/><text x="66.5803%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="66.3303%" y="1173" width="0.0917%" height="15" fill="rgb(220,68,6)" fg:x="723" fg:w="1"/><text x="66.5803%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="66.3303%" y="1157" width="0.0917%" height="15" fill="rgb(240,60,26)" fg:x="723" fg:w="1"/><text x="66.5803%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="66.3303%" y="1141" width="0.0917%" height="15" fill="rgb(211,200,19)" fg:x="723" fg:w="1"/><text x="66.5803%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="66.3303%" y="1125" width="0.0917%" height="15" fill="rgb(242,145,30)" fg:x="723" fg:w="1"/><text x="66.5803%" y="1135.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (1 samples, 0.09%)</title><rect x="66.4220%" y="1509" width="0.0917%" height="15" fill="rgb(225,64,13)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1519.50"></text></g><g><title>tokio::coop::budget (1 samples, 0.09%)</title><rect x="66.4220%" y="1493" width="0.0917%" height="15" fill="rgb(218,103,35)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1503.50"></text></g><g><title>tokio::coop::with_budget (1 samples, 0.09%)</title><rect x="66.4220%" y="1477" width="0.0917%" height="15" fill="rgb(216,93,46)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1487.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.09%)</title><rect x="66.4220%" y="1461" width="0.0917%" height="15" fill="rgb(225,159,27)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1471.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.09%)</title><rect x="66.4220%" y="1445" width="0.0917%" height="15" fill="rgb(225,204,11)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1455.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (1 samples, 0.09%)</title><rect x="66.4220%" y="1429" width="0.0917%" height="15" fill="rgb(205,56,4)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1439.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (1 samples, 0.09%)</title><rect x="66.4220%" y="1413" width="0.0917%" height="15" fill="rgb(206,6,35)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1423.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (1 samples, 0.09%)</title><rect x="66.4220%" y="1397" width="0.0917%" height="15" fill="rgb(247,73,52)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1407.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1 samples, 0.09%)</title><rect x="66.4220%" y="1381" width="0.0917%" height="15" fill="rgb(246,97,4)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1391.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.09%)</title><rect x="66.4220%" y="1365" width="0.0917%" height="15" fill="rgb(212,37,15)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1375.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.09%)</title><rect x="66.4220%" y="1349" width="0.0917%" height="15" fill="rgb(208,130,40)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1359.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (1 samples, 0.09%)</title><rect x="66.4220%" y="1333" width="0.0917%" height="15" fill="rgb(236,55,29)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1343.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.09%)</title><rect x="66.4220%" y="1317" width="0.0917%" height="15" fill="rgb(209,156,45)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1327.50"></text></g><g><title>std::panicking::try (1 samples, 0.09%)</title><rect x="66.4220%" y="1301" width="0.0917%" height="15" fill="rgb(249,107,4)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1311.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.09%)</title><rect x="66.4220%" y="1285" width="0.0917%" height="15" fill="rgb(227,7,13)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1295.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.09%)</title><rect x="66.4220%" y="1269" width="0.0917%" height="15" fill="rgb(250,129,14)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (1 samples, 0.09%)</title><rect x="66.4220%" y="1253" width="0.0917%" height="15" fill="rgb(229,92,13)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1263.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1 samples, 0.09%)</title><rect x="66.4220%" y="1237" width="0.0917%" height="15" fill="rgb(245,98,39)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1247.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.09%)</title><rect x="66.4220%" y="1221" width="0.0917%" height="15" fill="rgb(234,135,48)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1231.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (1 samples, 0.09%)</title><rect x="66.4220%" y="1205" width="0.0917%" height="15" fill="rgb(230,98,28)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1215.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="66.4220%" y="1189" width="0.0917%" height="15" fill="rgb(223,121,0)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1199.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="66.4220%" y="1173" width="0.0917%" height="15" fill="rgb(234,173,33)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1183.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="66.4220%" y="1157" width="0.0917%" height="15" fill="rgb(245,47,8)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1167.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="66.4220%" y="1141" width="0.0917%" height="15" fill="rgb(205,17,20)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1151.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="66.4220%" y="1125" width="0.0917%" height="15" fill="rgb(232,151,16)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1135.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="66.4220%" y="1109" width="0.0917%" height="15" fill="rgb(208,30,32)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1119.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1 samples, 0.09%)</title><rect x="66.4220%" y="1093" width="0.0917%" height="15" fill="rgb(254,26,3)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1103.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="66.4220%" y="1077" width="0.0917%" height="15" fill="rgb(240,177,30)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1087.50"></text></g><g><title>&lt;hyper::client::conn::ProtoClient&lt;T,B&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="66.4220%" y="1061" width="0.0917%" height="15" fill="rgb(248,76,44)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1071.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.09%)</title><rect x="66.4220%" y="1045" width="0.0917%" height="15" fill="rgb(241,186,54)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1055.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (1 samples, 0.09%)</title><rect x="66.4220%" y="1029" width="0.0917%" height="15" fill="rgb(249,171,29)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1039.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (1 samples, 0.09%)</title><rect x="66.4220%" y="1013" width="0.0917%" height="15" fill="rgb(237,151,44)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1023.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (1 samples, 0.09%)</title><rect x="66.4220%" y="997" width="0.0917%" height="15" fill="rgb(228,174,30)" fg:x="724" fg:w="1"/><text x="66.6720%" y="1007.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (1 samples, 0.09%)</title><rect x="66.4220%" y="981" width="0.0917%" height="15" fill="rgb(252,14,37)" fg:x="724" fg:w="1"/><text x="66.6720%" y="991.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (1 samples, 0.09%)</title><rect x="66.4220%" y="965" width="0.0917%" height="15" fill="rgb(207,111,40)" fg:x="724" fg:w="1"/><text x="66.6720%" y="975.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (1 samples, 0.09%)</title><rect x="66.4220%" y="949" width="0.0917%" height="15" fill="rgb(248,171,54)" fg:x="724" fg:w="1"/><text x="66.6720%" y="959.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (1 samples, 0.09%)</title><rect x="66.4220%" y="933" width="0.0917%" height="15" fill="rgb(211,127,2)" fg:x="724" fg:w="1"/><text x="66.6720%" y="943.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1 samples, 0.09%)</title><rect x="66.4220%" y="917" width="0.0917%" height="15" fill="rgb(236,87,47)" fg:x="724" fg:w="1"/><text x="66.6720%" y="927.50"></text></g><g><title>&lt;reqwest::connect::Conn as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="66.4220%" y="901" width="0.0917%" height="15" fill="rgb(223,190,45)" fg:x="724" fg:w="1"/><text x="66.6720%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="66.4220%" y="885" width="0.0917%" height="15" fill="rgb(215,5,16)" fg:x="724" fg:w="1"/><text x="66.6720%" y="895.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="66.4220%" y="869" width="0.0917%" height="15" fill="rgb(252,82,33)" fg:x="724" fg:w="1"/><text x="66.6720%" y="879.50"></text></g><g><title>tokio_native_tls::TlsStream&lt;S&gt;::with_context (1 samples, 0.09%)</title><rect x="66.4220%" y="853" width="0.0917%" height="15" fill="rgb(247,213,44)" fg:x="724" fg:w="1"/><text x="66.6720%" y="863.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::{{closure}} (1 samples, 0.09%)</title><rect x="66.4220%" y="837" width="0.0917%" height="15" fill="rgb(205,196,44)" fg:x="724" fg:w="1"/><text x="66.6720%" y="847.50"></text></g><g><title>&lt;native_tls::TlsStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.09%)</title><rect x="66.4220%" y="821" width="0.0917%" height="15" fill="rgb(237,96,54)" fg:x="724" fg:w="1"/><text x="66.6720%" y="831.50"></text></g><g><title>&lt;native_tls::imp::TlsStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.09%)</title><rect x="66.4220%" y="805" width="0.0917%" height="15" fill="rgb(230,113,34)" fg:x="724" fg:w="1"/><text x="66.6720%" y="815.50"></text></g><g><title>&lt;openssl::ssl::SslStream&lt;S&gt; as std::io::Read&gt;::read (1 samples, 0.09%)</title><rect x="66.4220%" y="789" width="0.0917%" height="15" fill="rgb(221,224,12)" fg:x="724" fg:w="1"/><text x="66.6720%" y="799.50"></text></g><g><title>openssl::ssl::SslStream&lt;S&gt;::ssl_read (1 samples, 0.09%)</title><rect x="66.4220%" y="773" width="0.0917%" height="15" fill="rgb(219,112,44)" fg:x="724" fg:w="1"/><text x="66.6720%" y="783.50"></text></g><g><title>SSL_read (1 samples, 0.09%)</title><rect x="66.4220%" y="757" width="0.0917%" height="15" fill="rgb(210,31,13)" fg:x="724" fg:w="1"/><text x="66.6720%" y="767.50"></text></g><g><title>[libssl.so.1.1] (1 samples, 0.09%)</title><rect x="66.4220%" y="741" width="0.0917%" height="15" fill="rgb(230,25,16)" fg:x="724" fg:w="1"/><text x="66.6720%" y="751.50"></text></g><g><title>__GI___errno_location (1 samples, 0.09%)</title><rect x="66.4220%" y="725" width="0.0917%" height="15" fill="rgb(246,108,53)" fg:x="724" fg:w="1"/><text x="66.6720%" y="735.50"></text></g><g><title>&lt;reqwest::connect::Conn as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="66.5138%" y="837" width="0.0917%" height="15" fill="rgb(241,172,50)" fg:x="725" fg:w="1"/><text x="66.7638%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="66.5138%" y="821" width="0.0917%" height="15" fill="rgb(235,141,10)" fg:x="725" fg:w="1"/><text x="66.7638%" y="831.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="66.5138%" y="805" width="0.0917%" height="15" fill="rgb(220,174,43)" fg:x="725" fg:w="1"/><text x="66.7638%" y="815.50"></text></g><g><title>[unknown] (191 samples, 17.52%)</title><rect x="49.1743%" y="1525" width="17.5229%" height="15" fill="rgb(215,181,40)" fg:x="536" fg:w="191"/><text x="49.4243%" y="1535.50">[unknown]</text></g><g><title>tokio::runtime::thread_pool::worker::run (2 samples, 0.18%)</title><rect x="66.5138%" y="1509" width="0.1835%" height="15" fill="rgb(230,97,2)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1519.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (2 samples, 0.18%)</title><rect x="66.5138%" y="1493" width="0.1835%" height="15" fill="rgb(211,25,27)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1503.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (2 samples, 0.18%)</title><rect x="66.5138%" y="1477" width="0.1835%" height="15" fill="rgb(230,87,26)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1487.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (2 samples, 0.18%)</title><rect x="66.5138%" y="1461" width="0.1835%" height="15" fill="rgb(227,160,17)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1471.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (2 samples, 0.18%)</title><rect x="66.5138%" y="1445" width="0.1835%" height="15" fill="rgb(244,85,34)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1455.50"></text></g><g><title>tokio::coop::budget (2 samples, 0.18%)</title><rect x="66.5138%" y="1429" width="0.1835%" height="15" fill="rgb(207,70,0)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1439.50"></text></g><g><title>tokio::coop::with_budget (2 samples, 0.18%)</title><rect x="66.5138%" y="1413" width="0.1835%" height="15" fill="rgb(223,129,7)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1423.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.18%)</title><rect x="66.5138%" y="1397" width="0.1835%" height="15" fill="rgb(246,105,7)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1407.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.18%)</title><rect x="66.5138%" y="1381" width="0.1835%" height="15" fill="rgb(215,154,42)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1391.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (2 samples, 0.18%)</title><rect x="66.5138%" y="1365" width="0.1835%" height="15" fill="rgb(220,215,30)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1375.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (2 samples, 0.18%)</title><rect x="66.5138%" y="1349" width="0.1835%" height="15" fill="rgb(228,81,51)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1359.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (2 samples, 0.18%)</title><rect x="66.5138%" y="1333" width="0.1835%" height="15" fill="rgb(247,71,54)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1343.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (2 samples, 0.18%)</title><rect x="66.5138%" y="1317" width="0.1835%" height="15" fill="rgb(234,176,34)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1327.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.18%)</title><rect x="66.5138%" y="1301" width="0.1835%" height="15" fill="rgb(241,103,54)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1311.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2 samples, 0.18%)</title><rect x="66.5138%" y="1285" width="0.1835%" height="15" fill="rgb(228,22,34)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1295.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2 samples, 0.18%)</title><rect x="66.5138%" y="1269" width="0.1835%" height="15" fill="rgb(241,179,48)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.18%)</title><rect x="66.5138%" y="1253" width="0.1835%" height="15" fill="rgb(235,167,37)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1263.50"></text></g><g><title>std::panicking::try (2 samples, 0.18%)</title><rect x="66.5138%" y="1237" width="0.1835%" height="15" fill="rgb(213,109,30)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.18%)</title><rect x="66.5138%" y="1221" width="0.1835%" height="15" fill="rgb(222,172,16)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1231.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.18%)</title><rect x="66.5138%" y="1205" width="0.1835%" height="15" fill="rgb(233,192,5)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2 samples, 0.18%)</title><rect x="66.5138%" y="1189" width="0.1835%" height="15" fill="rgb(247,189,41)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1199.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (2 samples, 0.18%)</title><rect x="66.5138%" y="1173" width="0.1835%" height="15" fill="rgb(218,134,47)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1183.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.18%)</title><rect x="66.5138%" y="1157" width="0.1835%" height="15" fill="rgb(216,29,3)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1167.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (2 samples, 0.18%)</title><rect x="66.5138%" y="1141" width="0.1835%" height="15" fill="rgb(246,140,12)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1151.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="66.5138%" y="1125" width="0.1835%" height="15" fill="rgb(230,136,11)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1135.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="66.5138%" y="1109" width="0.1835%" height="15" fill="rgb(247,22,47)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1119.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="66.5138%" y="1093" width="0.1835%" height="15" fill="rgb(218,84,22)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1103.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="66.5138%" y="1077" width="0.1835%" height="15" fill="rgb(216,87,39)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1087.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="66.5138%" y="1061" width="0.1835%" height="15" fill="rgb(221,178,8)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1071.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="66.5138%" y="1045" width="0.1835%" height="15" fill="rgb(230,42,11)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1055.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (2 samples, 0.18%)</title><rect x="66.5138%" y="1029" width="0.1835%" height="15" fill="rgb(237,229,4)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1039.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="66.5138%" y="1013" width="0.1835%" height="15" fill="rgb(222,31,33)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1023.50"></text></g><g><title>&lt;hyper::client::conn::ProtoClient&lt;T,B&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="66.5138%" y="997" width="0.1835%" height="15" fill="rgb(210,17,39)" fg:x="725" fg:w="2"/><text x="66.7638%" y="1007.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.18%)</title><rect x="66.5138%" y="981" width="0.1835%" height="15" fill="rgb(244,93,20)" fg:x="725" fg:w="2"/><text x="66.7638%" y="991.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (2 samples, 0.18%)</title><rect x="66.5138%" y="965" width="0.1835%" height="15" fill="rgb(210,40,47)" fg:x="725" fg:w="2"/><text x="66.7638%" y="975.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (2 samples, 0.18%)</title><rect x="66.5138%" y="949" width="0.1835%" height="15" fill="rgb(239,211,47)" fg:x="725" fg:w="2"/><text x="66.7638%" y="959.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (2 samples, 0.18%)</title><rect x="66.5138%" y="933" width="0.1835%" height="15" fill="rgb(251,223,49)" fg:x="725" fg:w="2"/><text x="66.7638%" y="943.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (2 samples, 0.18%)</title><rect x="66.5138%" y="917" width="0.1835%" height="15" fill="rgb(221,149,5)" fg:x="725" fg:w="2"/><text x="66.7638%" y="927.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (2 samples, 0.18%)</title><rect x="66.5138%" y="901" width="0.1835%" height="15" fill="rgb(219,224,51)" fg:x="725" fg:w="2"/><text x="66.7638%" y="911.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (2 samples, 0.18%)</title><rect x="66.5138%" y="885" width="0.1835%" height="15" fill="rgb(223,7,8)" fg:x="725" fg:w="2"/><text x="66.7638%" y="895.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (2 samples, 0.18%)</title><rect x="66.5138%" y="869" width="0.1835%" height="15" fill="rgb(241,217,22)" fg:x="725" fg:w="2"/><text x="66.7638%" y="879.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (2 samples, 0.18%)</title><rect x="66.5138%" y="853" width="0.1835%" height="15" fill="rgb(248,209,0)" fg:x="725" fg:w="2"/><text x="66.7638%" y="863.50"></text></g><g><title>hyper::proto::h1::io::ReadStrategy::record (1 samples, 0.09%)</title><rect x="66.6055%" y="837" width="0.0917%" height="15" fill="rgb(217,205,4)" fg:x="726" fg:w="1"/><text x="66.8555%" y="847.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (2 samples, 0.18%)</title><rect x="66.6972%" y="1285" width="0.1835%" height="15" fill="rgb(228,124,39)" fg:x="727" fg:w="2"/><text x="66.9472%" y="1295.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (2 samples, 0.18%)</title><rect x="66.6972%" y="1269" width="0.1835%" height="15" fill="rgb(250,116,42)" fg:x="727" fg:w="2"/><text x="66.9472%" y="1279.50"></text></g><g><title>core::ptr::read (2 samples, 0.18%)</title><rect x="66.6972%" y="1253" width="0.1835%" height="15" fill="rgb(223,202,9)" fg:x="727" fg:w="2"/><text x="66.9472%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="66.7890%" y="1237" width="0.0917%" height="15" fill="rgb(242,222,40)" fg:x="728" fg:w="1"/><text x="67.0390%" y="1247.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="66.8807%" y="1253" width="0.0917%" height="15" fill="rgb(229,99,46)" fg:x="729" fg:w="1"/><text x="67.1307%" y="1263.50"></text></g><g><title>std::sync::poison::Flag::borrow (1 samples, 0.09%)</title><rect x="66.8807%" y="1237" width="0.0917%" height="15" fill="rgb(225,56,46)" fg:x="729" fg:w="1"/><text x="67.1307%" y="1247.50"></text></g><g><title>std::thread::panicking (1 samples, 0.09%)</title><rect x="66.8807%" y="1221" width="0.0917%" height="15" fill="rgb(227,94,5)" fg:x="729" fg:w="1"/><text x="67.1307%" y="1231.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.09%)</title><rect x="66.8807%" y="1205" width="0.0917%" height="15" fill="rgb(205,112,38)" fg:x="729" fg:w="1"/><text x="67.1307%" y="1215.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.09%)</title><rect x="66.8807%" y="1189" width="0.0917%" height="15" fill="rgb(231,133,46)" fg:x="729" fg:w="1"/><text x="67.1307%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.09%)</title><rect x="66.8807%" y="1173" width="0.0917%" height="15" fill="rgb(217,16,9)" fg:x="729" fg:w="1"/><text x="67.1307%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="66.8807%" y="1157" width="0.0917%" height="15" fill="rgb(249,173,9)" fg:x="729" fg:w="1"/><text x="67.1307%" y="1167.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.28%)</title><rect x="66.8807%" y="1285" width="0.2752%" height="15" fill="rgb(205,163,53)" fg:x="729" fg:w="3"/><text x="67.1307%" y="1295.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.28%)</title><rect x="66.8807%" y="1269" width="0.2752%" height="15" fill="rgb(217,54,41)" fg:x="729" fg:w="3"/><text x="67.1307%" y="1279.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (2 samples, 0.18%)</title><rect x="66.9725%" y="1253" width="0.1835%" height="15" fill="rgb(228,216,12)" fg:x="730" fg:w="2"/><text x="67.2225%" y="1263.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (2 samples, 0.18%)</title><rect x="66.9725%" y="1237" width="0.1835%" height="15" fill="rgb(244,228,15)" fg:x="730" fg:w="2"/><text x="67.2225%" y="1247.50"></text></g><g><title>___pthread_mutex_lock (2 samples, 0.18%)</title><rect x="66.9725%" y="1221" width="0.1835%" height="15" fill="rgb(221,176,53)" fg:x="730" fg:w="2"/><text x="67.2225%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="67.3394%" y="949" width="0.0917%" height="15" fill="rgb(205,94,34)" fg:x="734" fg:w="1"/><text x="67.5894%" y="959.50"></text></g><g><title>__GI___inet_aton_exact (1 samples, 0.09%)</title><rect x="67.4312%" y="949" width="0.0917%" height="15" fill="rgb(213,110,48)" fg:x="735" fg:w="1"/><text x="67.6812%" y="959.50"></text></g><g><title>inet_aton_end (1 samples, 0.09%)</title><rect x="67.4312%" y="933" width="0.0917%" height="15" fill="rgb(236,142,28)" fg:x="735" fg:w="1"/><text x="67.6812%" y="943.50"></text></g><g><title>__GI__nss_files_gethostbyname4_r (1 samples, 0.09%)</title><rect x="67.5229%" y="949" width="0.0917%" height="15" fill="rgb(225,135,29)" fg:x="736" fg:w="1"/><text x="67.7729%" y="959.50"></text></g><g><title>__GI___nss_files_fopen (1 samples, 0.09%)</title><rect x="67.5229%" y="933" width="0.0917%" height="15" fill="rgb(252,45,31)" fg:x="736" fg:w="1"/><text x="67.7729%" y="943.50"></text></g><g><title>__fseeko (1 samples, 0.09%)</title><rect x="67.5229%" y="917" width="0.0917%" height="15" fill="rgb(211,187,50)" fg:x="736" fg:w="1"/><text x="67.7729%" y="927.50"></text></g><g><title>__GI__IO_file_seekoff (1 samples, 0.09%)</title><rect x="67.5229%" y="901" width="0.0917%" height="15" fill="rgb(229,109,7)" fg:x="736" fg:w="1"/><text x="67.7729%" y="911.50"></text></g><g><title>__GI__IO_doallocbuf (1 samples, 0.09%)</title><rect x="67.5229%" y="885" width="0.0917%" height="15" fill="rgb(251,131,51)" fg:x="736" fg:w="1"/><text x="67.7729%" y="895.50"></text></g><g><title>__GI__IO_file_doallocate (1 samples, 0.09%)</title><rect x="67.5229%" y="869" width="0.0917%" height="15" fill="rgb(251,180,35)" fg:x="736" fg:w="1"/><text x="67.7729%" y="879.50"></text></g><g><title>__inet_pton (1 samples, 0.09%)</title><rect x="67.6147%" y="949" width="0.0917%" height="15" fill="rgb(211,46,32)" fg:x="737" fg:w="1"/><text x="67.8647%" y="959.50"></text></g><g><title>__strlen_avx2 (1 samples, 0.09%)</title><rect x="67.6147%" y="933" width="0.0917%" height="15" fill="rgb(248,123,17)" fg:x="737" fg:w="1"/><text x="67.8647%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="67.8899%" y="725" width="0.1835%" height="15" fill="rgb(227,141,18)" fg:x="740" fg:w="2"/><text x="68.1399%" y="735.50"></text></g><g><title>_dl_add_to_namespace_list (1 samples, 0.09%)</title><rect x="68.0734%" y="725" width="0.0917%" height="15" fill="rgb(216,102,9)" fg:x="742" fg:w="1"/><text x="68.3234%" y="735.50"></text></g><g><title>___pthread_mutex_lock (1 samples, 0.09%)</title><rect x="68.0734%" y="709" width="0.0917%" height="15" fill="rgb(253,47,13)" fg:x="742" fg:w="1"/><text x="68.3234%" y="719.50"></text></g><g><title>_dl_map_object_from_fd (6 samples, 0.55%)</title><rect x="67.7064%" y="741" width="0.5505%" height="15" fill="rgb(226,93,23)" fg:x="738" fg:w="6"/><text x="67.9564%" y="751.50"></text></g><g><title>memset (1 samples, 0.09%)</title><rect x="68.1651%" y="725" width="0.0917%" height="15" fill="rgb(247,104,17)" fg:x="743" fg:w="1"/><text x="68.4151%" y="735.50"></text></g><g><title>_dl_map_object (8 samples, 0.73%)</title><rect x="67.7064%" y="757" width="0.7339%" height="15" fill="rgb(233,203,26)" fg:x="738" fg:w="8"/><text x="67.9564%" y="767.50"></text></g><g><title>open_path (2 samples, 0.18%)</title><rect x="68.2569%" y="741" width="0.1835%" height="15" fill="rgb(244,98,49)" fg:x="744" fg:w="2"/><text x="68.5069%" y="751.50"></text></g><g><title>open_verify.constprop.0 (1 samples, 0.09%)</title><rect x="68.3486%" y="725" width="0.0917%" height="15" fill="rgb(235,134,22)" fg:x="745" fg:w="1"/><text x="68.5986%" y="735.50"></text></g><g><title>__GI___open_nocancel (1 samples, 0.09%)</title><rect x="68.3486%" y="709" width="0.0917%" height="15" fill="rgb(221,70,32)" fg:x="745" fg:w="1"/><text x="68.5986%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="68.3486%" y="693" width="0.0917%" height="15" fill="rgb(238,15,50)" fg:x="745" fg:w="1"/><text x="68.5986%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="68.3486%" y="677" width="0.0917%" height="15" fill="rgb(215,221,48)" fg:x="745" fg:w="1"/><text x="68.5986%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="68.3486%" y="661" width="0.0917%" height="15" fill="rgb(236,73,3)" fg:x="745" fg:w="1"/><text x="68.5986%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="68.3486%" y="645" width="0.0917%" height="15" fill="rgb(250,107,11)" fg:x="745" fg:w="1"/><text x="68.5986%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="68.3486%" y="629" width="0.0917%" height="15" fill="rgb(242,39,14)" fg:x="745" fg:w="1"/><text x="68.5986%" y="639.50"></text></g><g><title>__nss_module_get_function (10 samples, 0.92%)</title><rect x="67.7064%" y="949" width="0.9174%" height="15" fill="rgb(248,164,37)" fg:x="738" fg:w="10"/><text x="67.9564%" y="959.50"></text></g><g><title>module_load (10 samples, 0.92%)</title><rect x="67.7064%" y="933" width="0.9174%" height="15" fill="rgb(217,60,12)" fg:x="738" fg:w="10"/><text x="67.9564%" y="943.50"></text></g><g><title>__libc_dlopen_mode (10 samples, 0.92%)</title><rect x="67.7064%" y="917" width="0.9174%" height="15" fill="rgb(240,125,29)" fg:x="738" fg:w="10"/><text x="67.9564%" y="927.50"></text></g><g><title>dlerror_run (10 samples, 0.92%)</title><rect x="67.7064%" y="901" width="0.9174%" height="15" fill="rgb(208,207,28)" fg:x="738" fg:w="10"/><text x="67.9564%" y="911.50"></text></g><g><title>__GI__dl_catch_error (10 samples, 0.92%)</title><rect x="67.7064%" y="885" width="0.9174%" height="15" fill="rgb(209,159,27)" fg:x="738" fg:w="10"/><text x="67.9564%" y="895.50"></text></g><g><title>__GI__dl_catch_exception (10 samples, 0.92%)</title><rect x="67.7064%" y="869" width="0.9174%" height="15" fill="rgb(251,176,53)" fg:x="738" fg:w="10"/><text x="67.9564%" y="879.50"></text></g><g><title>do_dlopen (10 samples, 0.92%)</title><rect x="67.7064%" y="853" width="0.9174%" height="15" fill="rgb(211,85,7)" fg:x="738" fg:w="10"/><text x="67.9564%" y="863.50"></text></g><g><title>_dl_open (10 samples, 0.92%)</title><rect x="67.7064%" y="837" width="0.9174%" height="15" fill="rgb(216,64,54)" fg:x="738" fg:w="10"/><text x="67.9564%" y="847.50"></text></g><g><title>__GI__dl_catch_exception (10 samples, 0.92%)</title><rect x="67.7064%" y="821" width="0.9174%" height="15" fill="rgb(217,54,24)" fg:x="738" fg:w="10"/><text x="67.9564%" y="831.50"></text></g><g><title>dl_open_worker (10 samples, 0.92%)</title><rect x="67.7064%" y="805" width="0.9174%" height="15" fill="rgb(208,206,53)" fg:x="738" fg:w="10"/><text x="67.9564%" y="815.50"></text></g><g><title>__GI__dl_catch_exception (10 samples, 0.92%)</title><rect x="67.7064%" y="789" width="0.9174%" height="15" fill="rgb(251,74,39)" fg:x="738" fg:w="10"/><text x="67.9564%" y="799.50"></text></g><g><title>dl_open_worker_begin (10 samples, 0.92%)</title><rect x="67.7064%" y="773" width="0.9174%" height="15" fill="rgb(226,47,5)" fg:x="738" fg:w="10"/><text x="67.9564%" y="783.50"></text></g><g><title>_dl_relocate_object (2 samples, 0.18%)</title><rect x="68.4404%" y="757" width="0.1835%" height="15" fill="rgb(234,111,33)" fg:x="746" fg:w="2"/><text x="68.6904%" y="767.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.09%)</title><rect x="68.5321%" y="741" width="0.0917%" height="15" fill="rgb(251,14,10)" fg:x="747" fg:w="1"/><text x="68.7821%" y="751.50"></text></g><g><title>do_lookup_x (1 samples, 0.09%)</title><rect x="68.5321%" y="725" width="0.0917%" height="15" fill="rgb(232,43,0)" fg:x="747" fg:w="1"/><text x="68.7821%" y="735.50"></text></g><g><title>__strchr_avx2 (1 samples, 0.09%)</title><rect x="68.6239%" y="949" width="0.0917%" height="15" fill="rgb(222,68,43)" fg:x="748" fg:w="1"/><text x="68.8739%" y="959.50"></text></g><g><title>tokio::net::addr::&lt;impl tokio::net::addr::sealed::ToSocketAddrsPriv for (&amp;str,u16)&gt;::to_socket_addrs::{{closure}} (18 samples, 1.65%)</title><rect x="67.1560%" y="1045" width="1.6514%" height="15" fill="rgb(217,24,23)" fg:x="732" fg:w="18"/><text x="67.4060%" y="1055.50"></text></g><g><title>&lt;(&amp;str,u16) as std::net::addr::ToSocketAddrs&gt;::to_socket_addrs (18 samples, 1.65%)</title><rect x="67.1560%" y="1029" width="1.6514%" height="15" fill="rgb(229,209,14)" fg:x="732" fg:w="18"/><text x="67.4060%" y="1039.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (18 samples, 1.65%)</title><rect x="67.1560%" y="1013" width="1.6514%" height="15" fill="rgb(250,149,48)" fg:x="732" fg:w="18"/><text x="67.4060%" y="1023.50"></text></g><g><title>&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from (18 samples, 1.65%)</title><rect x="67.1560%" y="997" width="1.6514%" height="15" fill="rgb(210,120,37)" fg:x="732" fg:w="18"/><text x="67.4060%" y="1007.50"></text></g><g><title>__GI_getaddrinfo (18 samples, 1.65%)</title><rect x="67.1560%" y="981" width="1.6514%" height="15" fill="rgb(210,21,8)" fg:x="732" fg:w="18"/><text x="67.4060%" y="991.50"></text></g><g><title>gaih_inet.constprop.0 (18 samples, 1.65%)</title><rect x="67.1560%" y="965" width="1.6514%" height="15" fill="rgb(243,145,7)" fg:x="732" fg:w="18"/><text x="67.4060%" y="975.50"></text></g><g><title>_nss_mymachines_gethostbyname4_r (1 samples, 0.09%)</title><rect x="68.7156%" y="949" width="0.0917%" height="15" fill="rgb(238,178,32)" fg:x="749" fg:w="1"/><text x="68.9656%" y="959.50"></text></g><g><title>[libnss_mymachines.so.2] (1 samples, 0.09%)</title><rect x="68.7156%" y="933" width="0.0917%" height="15" fill="rgb(222,4,10)" fg:x="749" fg:w="1"/><text x="68.9656%" y="943.50"></text></g><g><title>__GI_sigemptyset (1 samples, 0.09%)</title><rect x="68.7156%" y="917" width="0.0917%" height="15" fill="rgb(239,7,37)" fg:x="749" fg:w="1"/><text x="68.9656%" y="927.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::maintenance (1 samples, 0.09%)</title><rect x="69.4495%" y="965" width="0.0917%" height="15" fill="rgb(215,31,37)" fg:x="757" fg:w="1"/><text x="69.6995%" y="975.50"></text></g><g><title>tokio::loom::std::thread::yield_now (1 samples, 0.09%)</title><rect x="70.2752%" y="901" width="0.0917%" height="15" fill="rgb(224,83,33)" fg:x="766" fg:w="1"/><text x="70.5252%" y="911.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.09%)</title><rect x="70.2752%" y="885" width="0.0917%" height="15" fill="rgb(239,55,3)" fg:x="766" fg:w="1"/><text x="70.5252%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.09%)</title><rect x="70.2752%" y="869" width="0.0917%" height="15" fill="rgb(247,92,11)" fg:x="766" fg:w="1"/><text x="70.5252%" y="879.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.09%)</title><rect x="70.5505%" y="853" width="0.0917%" height="15" fill="rgb(239,200,7)" fg:x="769" fg:w="1"/><text x="70.8005%" y="863.50"></text></g><g><title>std::thread::panicking (1 samples, 0.09%)</title><rect x="70.5505%" y="837" width="0.0917%" height="15" fill="rgb(227,115,8)" fg:x="769" fg:w="1"/><text x="70.8005%" y="847.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.09%)</title><rect x="70.5505%" y="821" width="0.0917%" height="15" fill="rgb(215,189,27)" fg:x="769" fg:w="1"/><text x="70.8005%" y="831.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.09%)</title><rect x="70.5505%" y="805" width="0.0917%" height="15" fill="rgb(251,216,39)" fg:x="769" fg:w="1"/><text x="70.8005%" y="815.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (19 samples, 1.74%)</title><rect x="70.7339%" y="821" width="1.7431%" height="15" fill="rgb(207,29,47)" fg:x="771" fg:w="19"/><text x="70.9839%" y="831.50"></text></g><g><title>__GI___lll_lock_wake (16 samples, 1.47%)</title><rect x="71.0092%" y="805" width="1.4679%" height="15" fill="rgb(210,71,34)" fg:x="774" fg:w="16"/><text x="71.2592%" y="815.50"></text></g><g><title>[unknown] (16 samples, 1.47%)</title><rect x="71.0092%" y="789" width="1.4679%" height="15" fill="rgb(253,217,51)" fg:x="774" fg:w="16"/><text x="71.2592%" y="799.50"></text></g><g><title>[unknown] (16 samples, 1.47%)</title><rect x="71.0092%" y="773" width="1.4679%" height="15" fill="rgb(222,117,46)" fg:x="774" fg:w="16"/><text x="71.2592%" y="783.50"></text></g><g><title>[unknown] (14 samples, 1.28%)</title><rect x="71.1927%" y="757" width="1.2844%" height="15" fill="rgb(226,132,6)" fg:x="776" fg:w="14"/><text x="71.4427%" y="767.50"></text></g><g><title>[unknown] (11 samples, 1.01%)</title><rect x="71.4679%" y="741" width="1.0092%" height="15" fill="rgb(254,145,51)" fg:x="779" fg:w="11"/><text x="71.7179%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="72.3853%" y="725" width="0.0917%" height="15" fill="rgb(231,199,27)" fg:x="789" fg:w="1"/><text x="72.6353%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (26 samples, 2.39%)</title><rect x="70.5505%" y="885" width="2.3853%" height="15" fill="rgb(245,158,14)" fg:x="769" fg:w="26"/><text x="70.8005%" y="895.50">co..</text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.39%)</title><rect x="70.5505%" y="869" width="2.3853%" height="15" fill="rgb(240,113,14)" fg:x="769" fg:w="26"/><text x="70.8005%" y="879.50">&lt;s..</text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (25 samples, 2.29%)</title><rect x="70.6422%" y="853" width="2.2936%" height="15" fill="rgb(210,20,13)" fg:x="770" fg:w="25"/><text x="70.8922%" y="863.50">s..</text></g><g><title>std::sys::unix::mutex::Mutex::unlock (25 samples, 2.29%)</title><rect x="70.6422%" y="837" width="2.2936%" height="15" fill="rgb(241,144,13)" fg:x="770" fg:w="25"/><text x="70.8922%" y="847.50">s..</text></g><g><title>___pthread_mutex_unlock (5 samples, 0.46%)</title><rect x="72.4771%" y="821" width="0.4587%" height="15" fill="rgb(235,43,34)" fg:x="790" fg:w="5"/><text x="72.7271%" y="831.50"></text></g><g><title>std::sync::poison::Flag::get (7 samples, 0.64%)</title><rect x="72.9358%" y="869" width="0.6422%" height="15" fill="rgb(208,36,20)" fg:x="795" fg:w="7"/><text x="73.1858%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (7 samples, 0.64%)</title><rect x="72.9358%" y="853" width="0.6422%" height="15" fill="rgb(239,204,10)" fg:x="795" fg:w="7"/><text x="73.1858%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="73.4862%" y="837" width="0.0917%" height="15" fill="rgb(217,84,43)" fg:x="801" fg:w="1"/><text x="73.7362%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="74.5872%" y="821" width="0.0917%" height="15" fill="rgb(241,170,50)" fg:x="813" fg:w="1"/><text x="74.8372%" y="831.50"></text></g><g><title>__condvar_dec_grefs (5 samples, 0.46%)</title><rect x="74.6789%" y="821" width="0.4587%" height="15" fill="rgb(226,205,29)" fg:x="814" fg:w="5"/><text x="74.9289%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="74.9541%" y="805" width="0.1835%" height="15" fill="rgb(233,113,1)" fg:x="817" fg:w="2"/><text x="75.2041%" y="815.50"></text></g><g><title>__futex_abstimed_wait_common (5 samples, 0.46%)</title><rect x="75.1376%" y="821" width="0.4587%" height="15" fill="rgb(253,98,13)" fg:x="819" fg:w="5"/><text x="75.3876%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.28%)</title><rect x="75.3211%" y="805" width="0.2752%" height="15" fill="rgb(211,115,12)" fg:x="821" fg:w="3"/><text x="75.5711%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.28%)</title><rect x="75.3211%" y="789" width="0.2752%" height="15" fill="rgb(208,12,16)" fg:x="821" fg:w="3"/><text x="75.5711%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.28%)</title><rect x="75.3211%" y="773" width="0.2752%" height="15" fill="rgb(237,193,54)" fg:x="821" fg:w="3"/><text x="75.5711%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="75.4128%" y="757" width="0.1835%" height="15" fill="rgb(243,22,42)" fg:x="822" fg:w="2"/><text x="75.6628%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="75.4128%" y="741" width="0.1835%" height="15" fill="rgb(233,151,36)" fg:x="822" fg:w="2"/><text x="75.6628%" y="751.50"></text></g><g><title>__pthread_cleanup_pop (1 samples, 0.09%)</title><rect x="75.5963%" y="821" width="0.0917%" height="15" fill="rgb(237,57,45)" fg:x="824" fg:w="1"/><text x="75.8463%" y="831.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (27 samples, 2.48%)</title><rect x="73.5780%" y="853" width="2.4771%" height="15" fill="rgb(221,88,17)" fg:x="802" fg:w="27"/><text x="73.8280%" y="863.50">st..</text></g><g><title>__GI___pthread_cond_wait (27 samples, 2.48%)</title><rect x="73.5780%" y="837" width="2.4771%" height="15" fill="rgb(230,79,15)" fg:x="802" fg:w="27"/><text x="73.8280%" y="847.50">__..</text></g><g><title>__pthread_mutex_cond_lock (4 samples, 0.37%)</title><rect x="75.6881%" y="821" width="0.3670%" height="15" fill="rgb(213,57,13)" fg:x="825" fg:w="4"/><text x="75.9381%" y="831.50"></text></g><g><title>tokio::runtime::park::Inner::park_condvar (64 samples, 5.87%)</title><rect x="70.3670%" y="901" width="5.8716%" height="15" fill="rgb(222,116,39)" fg:x="767" fg:w="64"/><text x="70.6170%" y="911.50">tokio::..</text></g><g><title>std::sync::condvar::Condvar::wait (36 samples, 3.30%)</title><rect x="72.9358%" y="885" width="3.3028%" height="15" fill="rgb(245,107,2)" fg:x="795" fg:w="36"/><text x="73.1858%" y="895.50">std..</text></g><g><title>std::sys_common::condvar::Condvar::wait (29 samples, 2.66%)</title><rect x="73.5780%" y="869" width="2.6606%" height="15" fill="rgb(238,1,10)" fg:x="802" fg:w="29"/><text x="73.8280%" y="879.50">st..</text></g><g><title>std::sys_common::condvar::check::SameMutexCheck::verify (2 samples, 0.18%)</title><rect x="76.0550%" y="853" width="0.1835%" height="15" fill="rgb(249,4,48)" fg:x="829" fg:w="2"/><text x="76.3050%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw (2 samples, 0.18%)</title><rect x="76.0550%" y="837" width="0.1835%" height="15" fill="rgb(223,151,18)" fg:x="829" fg:w="2"/><text x="76.3050%" y="847.50"></text></g><g><title>core::mem::drop (1 samples, 0.09%)</title><rect x="76.6972%" y="821" width="0.0917%" height="15" fill="rgb(227,65,43)" fg:x="836" fg:w="1"/><text x="76.9472%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::time::driver::InnerState&gt;&gt; (1 samples, 0.09%)</title><rect x="76.6972%" y="805" width="0.0917%" height="15" fill="rgb(218,40,45)" fg:x="836" fg:w="1"/><text x="76.9472%" y="815.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="76.6972%" y="789" width="0.0917%" height="15" fill="rgb(252,121,31)" fg:x="836" fg:w="1"/><text x="76.9472%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.09%)</title><rect x="76.6972%" y="773" width="0.0917%" height="15" fill="rgb(219,158,43)" fg:x="836" fg:w="1"/><text x="76.9472%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.09%)</title><rect x="76.6972%" y="757" width="0.0917%" height="15" fill="rgb(231,162,42)" fg:x="836" fg:w="1"/><text x="76.9472%" y="767.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="76.6972%" y="741" width="0.0917%" height="15" fill="rgb(217,179,25)" fg:x="836" fg:w="1"/><text x="76.9472%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;mio::event::events::Events&gt;&gt; (1 samples, 0.09%)</title><rect x="78.2569%" y="805" width="0.0917%" height="15" fill="rgb(206,212,31)" fg:x="853" fg:w="1"/><text x="78.5069%" y="815.50"></text></g><g><title>mio::event::event::Event::token (4 samples, 0.37%)</title><rect x="78.3486%" y="805" width="0.3670%" height="15" fill="rgb(235,144,12)" fg:x="854" fg:w="4"/><text x="78.5986%" y="815.50"></text></g><g><title>mio::event::events::Events::iter (25 samples, 2.29%)</title><rect x="78.7156%" y="805" width="2.2936%" height="15" fill="rgb(213,51,10)" fg:x="858" fg:w="25"/><text x="78.9656%" y="815.50">m..</text></g><g><title>[unknown] (3 samples, 0.28%)</title><rect x="80.7339%" y="789" width="0.2752%" height="15" fill="rgb(231,145,14)" fg:x="880" fg:w="3"/><text x="80.9839%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="82.3853%" y="773" width="0.1835%" height="15" fill="rgb(235,15,28)" fg:x="898" fg:w="2"/><text x="82.6353%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="82.9358%" y="757" width="0.0917%" height="15" fill="rgb(237,206,10)" fg:x="904" fg:w="1"/><text x="83.1858%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="82.9358%" y="741" width="0.0917%" height="15" fill="rgb(236,227,27)" fg:x="904" fg:w="1"/><text x="83.1858%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="82.9358%" y="725" width="0.0917%" height="15" fill="rgb(246,83,35)" fg:x="904" fg:w="1"/><text x="83.1858%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="82.9358%" y="709" width="0.0917%" height="15" fill="rgb(220,136,24)" fg:x="904" fg:w="1"/><text x="83.1858%" y="719.50"></text></g><g><title>mio::poll::Poll::poll (30 samples, 2.75%)</title><rect x="81.0092%" y="805" width="2.7523%" height="15" fill="rgb(217,3,25)" fg:x="883" fg:w="30"/><text x="81.2592%" y="815.50">mi..</text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (27 samples, 2.48%)</title><rect x="81.2844%" y="789" width="2.4771%" height="15" fill="rgb(239,24,14)" fg:x="886" fg:w="27"/><text x="81.5344%" y="799.50">mi..</text></g><g><title>epoll_wait (13 samples, 1.19%)</title><rect x="82.5688%" y="773" width="1.1927%" height="15" fill="rgb(244,16,53)" fg:x="900" fg:w="13"/><text x="82.8188%" y="783.50"></text></g><g><title>__GI___pthread_disable_asynccancel (8 samples, 0.73%)</title><rect x="83.0275%" y="757" width="0.7339%" height="15" fill="rgb(208,175,44)" fg:x="905" fg:w="8"/><text x="83.2775%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.09%)</title><rect x="83.7615%" y="789" width="0.0917%" height="15" fill="rgb(252,18,48)" fg:x="913" fg:w="1"/><text x="84.0115%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.28%)</title><rect x="83.8532%" y="789" width="0.2752%" height="15" fill="rgb(234,199,32)" fg:x="914" fg:w="3"/><text x="84.1032%" y="799.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::set_readiness (2 samples, 0.18%)</title><rect x="84.1284%" y="789" width="0.1835%" height="15" fill="rgb(225,77,54)" fg:x="917" fg:w="2"/><text x="84.3784%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.18%)</title><rect x="84.1284%" y="773" width="0.1835%" height="15" fill="rgb(225,42,25)" fg:x="917" fg:w="2"/><text x="84.3784%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.18%)</title><rect x="84.1284%" y="757" width="0.1835%" height="15" fill="rgb(242,227,46)" fg:x="917" fg:w="2"/><text x="84.3784%" y="767.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.09%)</title><rect x="84.6789%" y="709" width="0.0917%" height="15" fill="rgb(246,197,35)" fg:x="923" fg:w="1"/><text x="84.9289%" y="719.50"></text></g><g><title>std::thread::panicking (1 samples, 0.09%)</title><rect x="84.6789%" y="693" width="0.0917%" height="15" fill="rgb(215,159,26)" fg:x="923" fg:w="1"/><text x="84.9289%" y="703.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.09%)</title><rect x="84.6789%" y="677" width="0.0917%" height="15" fill="rgb(212,194,50)" fg:x="923" fg:w="1"/><text x="84.9289%" y="687.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.09%)</title><rect x="84.6789%" y="661" width="0.0917%" height="15" fill="rgb(246,132,1)" fg:x="923" fg:w="1"/><text x="84.9289%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.09%)</title><rect x="84.6789%" y="645" width="0.0917%" height="15" fill="rgb(217,71,7)" fg:x="923" fg:w="1"/><text x="84.9289%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="84.6789%" y="629" width="0.0917%" height="15" fill="rgb(252,59,32)" fg:x="923" fg:w="1"/><text x="84.9289%" y="639.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="84.7706%" y="677" width="0.0917%" height="15" fill="rgb(253,204,25)" fg:x="924" fg:w="1"/><text x="85.0206%" y="687.50"></text></g><g><title>core::mem::drop (3 samples, 0.28%)</title><rect x="84.6789%" y="757" width="0.2752%" height="15" fill="rgb(232,21,16)" fg:x="923" fg:w="3"/><text x="84.9289%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::io::driver::scheduled_io::Waiters&gt;&gt; (3 samples, 0.28%)</title><rect x="84.6789%" y="741" width="0.2752%" height="15" fill="rgb(248,90,29)" fg:x="923" fg:w="3"/><text x="84.9289%" y="751.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.28%)</title><rect x="84.6789%" y="725" width="0.2752%" height="15" fill="rgb(249,223,7)" fg:x="923" fg:w="3"/><text x="84.9289%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (2 samples, 0.18%)</title><rect x="84.7706%" y="709" width="0.1835%" height="15" fill="rgb(231,119,42)" fg:x="924" fg:w="2"/><text x="85.0206%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (2 samples, 0.18%)</title><rect x="84.7706%" y="693" width="0.1835%" height="15" fill="rgb(215,41,35)" fg:x="924" fg:w="2"/><text x="85.0206%" y="703.50"></text></g><g><title>___pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="84.8624%" y="677" width="0.0917%" height="15" fill="rgb(220,44,45)" fg:x="925" fg:w="1"/><text x="85.1124%" y="687.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.55%)</title><rect x="84.9541%" y="757" width="0.5505%" height="15" fill="rgb(253,197,36)" fg:x="926" fg:w="6"/><text x="85.2041%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.55%)</title><rect x="84.9541%" y="741" width="0.5505%" height="15" fill="rgb(245,225,54)" fg:x="926" fg:w="6"/><text x="85.2041%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (6 samples, 0.55%)</title><rect x="84.9541%" y="725" width="0.5505%" height="15" fill="rgb(239,94,37)" fg:x="926" fg:w="6"/><text x="85.2041%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (6 samples, 0.55%)</title><rect x="84.9541%" y="709" width="0.5505%" height="15" fill="rgb(242,217,10)" fg:x="926" fg:w="6"/><text x="85.2041%" y="719.50"></text></g><g><title>___pthread_mutex_lock (6 samples, 0.55%)</title><rect x="84.9541%" y="693" width="0.5505%" height="15" fill="rgb(250,193,7)" fg:x="926" fg:w="6"/><text x="85.2041%" y="703.50"></text></g><g><title>__GI___pthread_cond_signal (1 samples, 0.09%)</title><rect x="85.5046%" y="709" width="0.0917%" height="15" fill="rgb(230,104,19)" fg:x="932" fg:w="1"/><text x="85.7546%" y="719.50"></text></g><g><title>tokio::park::thread::Inner::from_raw (4 samples, 0.37%)</title><rect x="85.5963%" y="709" width="0.3670%" height="15" fill="rgb(230,181,4)" fg:x="933" fg:w="4"/><text x="85.8463%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (4 samples, 0.37%)</title><rect x="85.5963%" y="693" width="0.3670%" height="15" fill="rgb(216,219,49)" fg:x="933" fg:w="4"/><text x="85.8463%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.37%)</title><rect x="85.5963%" y="677" width="0.3670%" height="15" fill="rgb(254,144,0)" fg:x="933" fg:w="4"/><text x="85.8463%" y="687.50"></text></g><g><title>tokio::park::thread::wake (7 samples, 0.64%)</title><rect x="85.5046%" y="725" width="0.6422%" height="15" fill="rgb(205,209,38)" fg:x="932" fg:w="7"/><text x="85.7546%" y="735.50"></text></g><g><title>tokio::park::thread::Inner::unpark (2 samples, 0.18%)</title><rect x="85.9633%" y="709" width="0.1835%" height="15" fill="rgb(240,21,42)" fg:x="937" fg:w="2"/><text x="86.2133%" y="719.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.09%)</title><rect x="86.0550%" y="693" width="0.0917%" height="15" fill="rgb(241,132,3)" fg:x="938" fg:w="1"/><text x="86.3050%" y="703.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.09%)</title><rect x="86.0550%" y="677" width="0.0917%" height="15" fill="rgb(225,14,2)" fg:x="938" fg:w="1"/><text x="86.3050%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.09%)</title><rect x="86.0550%" y="661" width="0.0917%" height="15" fill="rgb(210,141,35)" fg:x="938" fg:w="1"/><text x="86.3050%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.09%)</title><rect x="86.0550%" y="645" width="0.0917%" height="15" fill="rgb(251,14,44)" fg:x="938" fg:w="1"/><text x="86.3050%" y="655.50"></text></g><g><title>___pthread_mutex_lock (1 samples, 0.09%)</title><rect x="86.0550%" y="629" width="0.0917%" height="15" fill="rgb(247,48,18)" fg:x="938" fg:w="1"/><text x="86.3050%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::get_new_task (3 samples, 0.28%)</title><rect x="86.4220%" y="693" width="0.2752%" height="15" fill="rgb(225,0,40)" fg:x="942" fg:w="3"/><text x="86.6720%" y="703.50"></text></g><g><title>tokio::runtime::task::Task&lt;S&gt;::from_raw (3 samples, 0.28%)</title><rect x="86.4220%" y="677" width="0.2752%" height="15" fill="rgb(221,31,33)" fg:x="942" fg:w="3"/><text x="86.6720%" y="687.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::from_raw (3 samples, 0.28%)</title><rect x="86.4220%" y="661" width="0.2752%" height="15" fill="rgb(237,42,40)" fg:x="942" fg:w="3"/><text x="86.6720%" y="671.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (1 samples, 0.09%)</title><rect x="86.6972%" y="693" width="0.0917%" height="15" fill="rgb(233,51,29)" fg:x="945" fg:w="1"/><text x="86.9472%" y="703.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1 samples, 0.09%)</title><rect x="86.6972%" y="677" width="0.0917%" height="15" fill="rgb(226,58,20)" fg:x="945" fg:w="1"/><text x="86.9472%" y="687.50"></text></g><g><title>tokio::runtime::task::state::State::load (1 samples, 0.09%)</title><rect x="86.6972%" y="661" width="0.0917%" height="15" fill="rgb(208,98,7)" fg:x="945" fg:w="1"/><text x="86.9472%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.09%)</title><rect x="86.6972%" y="645" width="0.0917%" height="15" fill="rgb(228,143,44)" fg:x="945" fg:w="1"/><text x="86.9472%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="86.6972%" y="629" width="0.0917%" height="15" fill="rgb(246,55,38)" fg:x="945" fg:w="1"/><text x="86.9472%" y="639.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::wake (29 samples, 2.66%)</title><rect x="84.3119%" y="789" width="2.6606%" height="15" fill="rgb(247,87,16)" fg:x="919" fg:w="29"/><text x="84.5619%" y="799.50">to..</text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::wake0 (29 samples, 2.66%)</title><rect x="84.3119%" y="773" width="2.6606%" height="15" fill="rgb(234,129,42)" fg:x="919" fg:w="29"/><text x="84.5619%" y="783.50">to..</text></g><g><title>tokio::util::wake_list::WakeList::wake_all (16 samples, 1.47%)</title><rect x="85.5046%" y="757" width="1.4679%" height="15" fill="rgb(220,82,16)" fg:x="932" fg:w="16"/><text x="85.7546%" y="767.50"></text></g><g><title>core::task::wake::Waker::wake (16 samples, 1.47%)</title><rect x="85.5046%" y="741" width="1.4679%" height="15" fill="rgb(211,88,4)" fg:x="932" fg:w="16"/><text x="85.7546%" y="751.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (9 samples, 0.83%)</title><rect x="86.1468%" y="725" width="0.8257%" height="15" fill="rgb(248,151,21)" fg:x="939" fg:w="9"/><text x="86.3968%" y="735.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (6 samples, 0.55%)</title><rect x="86.4220%" y="709" width="0.5505%" height="15" fill="rgb(238,163,6)" fg:x="942" fg:w="6"/><text x="86.6720%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (2 samples, 0.18%)</title><rect x="86.7890%" y="693" width="0.1835%" height="15" fill="rgb(209,183,11)" fg:x="946" fg:w="2"/><text x="87.0390%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (1 samples, 0.09%)</title><rect x="86.8807%" y="677" width="0.0917%" height="15" fill="rgb(219,37,20)" fg:x="947" fg:w="1"/><text x="87.1307%" y="687.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.09%)</title><rect x="86.8807%" y="661" width="0.0917%" height="15" fill="rgb(210,158,4)" fg:x="947" fg:w="1"/><text x="87.1307%" y="671.50"></text></g><g><title>tokio::io::driver::Driver::dispatch (36 samples, 3.30%)</title><rect x="83.7615%" y="805" width="3.3028%" height="15" fill="rgb(221,167,53)" fg:x="913" fg:w="36"/><text x="84.0115%" y="815.50">tok..</text></g><g><title>tokio::util::slab::Slab&lt;T&gt;::get (1 samples, 0.09%)</title><rect x="86.9725%" y="789" width="0.0917%" height="15" fill="rgb(237,151,45)" fg:x="948" fg:w="1"/><text x="87.2225%" y="799.50"></text></g><g><title>mio::event::event::Event::is_read_closed (3 samples, 0.28%)</title><rect x="87.0642%" y="789" width="0.2752%" height="15" fill="rgb(231,39,3)" fg:x="949" fg:w="3"/><text x="87.3142%" y="799.50"></text></g><g><title>mio::sys::unix::selector::epoll::event::is_read_closed (3 samples, 0.28%)</title><rect x="87.0642%" y="773" width="0.2752%" height="15" fill="rgb(212,167,28)" fg:x="949" fg:w="3"/><text x="87.3142%" y="783.50"></text></g><g><title>mio::event::event::Event::is_readable (2 samples, 0.18%)</title><rect x="87.3394%" y="789" width="0.1835%" height="15" fill="rgb(232,178,8)" fg:x="952" fg:w="2"/><text x="87.5894%" y="799.50"></text></g><g><title>mio::sys::unix::selector::epoll::event::is_readable (2 samples, 0.18%)</title><rect x="87.3394%" y="773" width="0.1835%" height="15" fill="rgb(225,151,20)" fg:x="952" fg:w="2"/><text x="87.5894%" y="783.50"></text></g><g><title>tokio::io::driver::Driver::turn (118 samples, 10.83%)</title><rect x="76.7890%" y="821" width="10.8257%" height="15" fill="rgb(238,3,37)" fg:x="837" fg:w="118"/><text x="77.0390%" y="831.50">tokio::io::drive..</text></g><g><title>tokio::io::driver::ready::Ready::from_mio (6 samples, 0.55%)</title><rect x="87.0642%" y="805" width="0.5505%" height="15" fill="rgb(251,147,42)" fg:x="949" fg:w="6"/><text x="87.3142%" y="815.50"></text></g><g><title>mio::event::event::Event::is_write_closed (1 samples, 0.09%)</title><rect x="87.5229%" y="789" width="0.0917%" height="15" fill="rgb(208,173,10)" fg:x="954" fg:w="1"/><text x="87.7729%" y="799.50"></text></g><g><title>mio::sys::unix::selector::epoll::event::is_write_closed (1 samples, 0.09%)</title><rect x="87.5229%" y="773" width="0.0917%" height="15" fill="rgb(246,225,4)" fg:x="954" fg:w="1"/><text x="87.7729%" y="783.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.09%)</title><rect x="87.6147%" y="821" width="0.0917%" height="15" fill="rgb(248,102,6)" fg:x="955" fg:w="1"/><text x="87.8647%" y="831.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.09%)</title><rect x="87.6147%" y="805" width="0.0917%" height="15" fill="rgb(232,6,21)" fg:x="955" fg:w="1"/><text x="87.8647%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.09%)</title><rect x="87.6147%" y="789" width="0.0917%" height="15" fill="rgb(221,179,22)" fg:x="955" fg:w="1"/><text x="87.8647%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.09%)</title><rect x="87.6147%" y="773" width="0.0917%" height="15" fill="rgb(252,50,20)" fg:x="955" fg:w="1"/><text x="87.8647%" y="783.50"></text></g><g><title>___pthread_mutex_lock (1 samples, 0.09%)</title><rect x="87.6147%" y="757" width="0.0917%" height="15" fill="rgb(222,56,38)" fg:x="955" fg:w="1"/><text x="87.8647%" y="767.50"></text></g><g><title>tokio::coop::CURRENT::__getit (4 samples, 0.37%)</title><rect x="88.6239%" y="725" width="0.3670%" height="15" fill="rgb(206,193,29)" fg:x="966" fg:w="4"/><text x="88.8739%" y="735.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (4 samples, 0.37%)</title><rect x="88.6239%" y="709" width="0.3670%" height="15" fill="rgb(239,192,45)" fg:x="966" fg:w="4"/><text x="88.8739%" y="719.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (4 samples, 0.37%)</title><rect x="88.6239%" y="693" width="0.3670%" height="15" fill="rgb(254,18,36)" fg:x="966" fg:w="4"/><text x="88.8739%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (4 samples, 0.37%)</title><rect x="88.6239%" y="677" width="0.3670%" height="15" fill="rgb(221,127,11)" fg:x="966" fg:w="4"/><text x="88.8739%" y="687.50"></text></g><g><title>tokio::coop::poll_proceed (5 samples, 0.46%)</title><rect x="88.6239%" y="773" width="0.4587%" height="15" fill="rgb(234,146,35)" fg:x="966" fg:w="5"/><text x="88.8739%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.46%)</title><rect x="88.6239%" y="757" width="0.4587%" height="15" fill="rgb(254,201,37)" fg:x="966" fg:w="5"/><text x="88.8739%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.46%)</title><rect x="88.6239%" y="741" width="0.4587%" height="15" fill="rgb(211,202,23)" fg:x="966" fg:w="5"/><text x="88.8739%" y="751.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (1 samples, 0.09%)</title><rect x="88.9908%" y="725" width="0.0917%" height="15" fill="rgb(237,91,2)" fg:x="970" fg:w="1"/><text x="89.2408%" y="735.50"></text></g><g><title>tokio::io::driver::Direction::mask (1 samples, 0.09%)</title><rect x="89.2661%" y="757" width="0.0917%" height="15" fill="rgb(226,228,36)" fg:x="973" fg:w="1"/><text x="89.5161%" y="767.50"></text></g><g><title>tokio::signal::unix::driver::Driver::process (21 samples, 1.93%)</title><rect x="87.7064%" y="821" width="1.9266%" height="15" fill="rgb(213,63,50)" fg:x="956" fg:w="21"/><text x="87.9564%" y="831.50">t..</text></g><g><title>tokio::io::driver::registration::Registration::poll_read_ready (19 samples, 1.74%)</title><rect x="87.8899%" y="805" width="1.7431%" height="15" fill="rgb(235,194,19)" fg:x="958" fg:w="19"/><text x="88.1399%" y="815.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (19 samples, 1.74%)</title><rect x="87.8899%" y="789" width="1.7431%" height="15" fill="rgb(207,204,18)" fg:x="958" fg:w="19"/><text x="88.1399%" y="799.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (6 samples, 0.55%)</title><rect x="89.0826%" y="773" width="0.5505%" height="15" fill="rgb(248,8,7)" fg:x="971" fg:w="6"/><text x="89.3326%" y="783.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.28%)</title><rect x="89.3578%" y="757" width="0.2752%" height="15" fill="rgb(223,145,47)" fg:x="974" fg:w="3"/><text x="89.6078%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.28%)</title><rect x="89.3578%" y="741" width="0.2752%" height="15" fill="rgb(228,84,11)" fg:x="974" fg:w="3"/><text x="89.6078%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (3 samples, 0.28%)</title><rect x="89.3578%" y="725" width="0.2752%" height="15" fill="rgb(218,76,45)" fg:x="974" fg:w="3"/><text x="89.6078%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (3 samples, 0.28%)</title><rect x="89.3578%" y="709" width="0.2752%" height="15" fill="rgb(223,80,15)" fg:x="974" fg:w="3"/><text x="89.6078%" y="719.50"></text></g><g><title>___pthread_mutex_lock (3 samples, 0.28%)</title><rect x="89.3578%" y="693" width="0.2752%" height="15" fill="rgb(219,218,33)" fg:x="974" fg:w="3"/><text x="89.6078%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (5 samples, 0.46%)</title><rect x="89.6330%" y="789" width="0.4587%" height="15" fill="rgb(208,51,11)" fg:x="977" fg:w="5"/><text x="89.8830%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (1 samples, 0.09%)</title><rect x="90.0000%" y="773" width="0.0917%" height="15" fill="rgb(229,165,39)" fg:x="981" fg:w="1"/><text x="90.2500%" y="783.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.09%)</title><rect x="90.0917%" y="789" width="0.0917%" height="15" fill="rgb(241,100,24)" fg:x="982" fg:w="1"/><text x="90.3417%" y="799.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1 samples, 0.09%)</title><rect x="90.0917%" y="773" width="0.0917%" height="15" fill="rgb(228,14,23)" fg:x="982" fg:w="1"/><text x="90.3417%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (1 samples, 0.09%)</title><rect x="90.0917%" y="757" width="0.0917%" height="15" fill="rgb(247,116,52)" fg:x="982" fg:w="1"/><text x="90.3417%" y="767.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (1 samples, 0.09%)</title><rect x="90.0917%" y="741" width="0.0917%" height="15" fill="rgb(216,149,33)" fg:x="982" fg:w="1"/><text x="90.3417%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (1 samples, 0.09%)</title><rect x="90.0917%" y="725" width="0.0917%" height="15" fill="rgb(238,142,29)" fg:x="982" fg:w="1"/><text x="90.3417%" y="735.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.09%)</title><rect x="90.0917%" y="709" width="0.0917%" height="15" fill="rgb(224,83,40)" fg:x="982" fg:w="1"/><text x="90.3417%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.09%)</title><rect x="90.0917%" y="693" width="0.0917%" height="15" fill="rgb(234,165,11)" fg:x="982" fg:w="1"/><text x="90.3417%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.09%)</title><rect x="90.0917%" y="677" width="0.0917%" height="15" fill="rgb(215,96,23)" fg:x="982" fg:w="1"/><text x="90.3417%" y="687.50"></text></g><g><title>tokio::time::driver::Inner::lock (1 samples, 0.09%)</title><rect x="90.1835%" y="789" width="0.0917%" height="15" fill="rgb(233,179,26)" fg:x="983" fg:w="1"/><text x="90.4335%" y="799.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.09%)</title><rect x="90.1835%" y="773" width="0.0917%" height="15" fill="rgb(225,129,33)" fg:x="983" fg:w="1"/><text x="90.4335%" y="783.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.09%)</title><rect x="90.1835%" y="757" width="0.0917%" height="15" fill="rgb(237,49,13)" fg:x="983" fg:w="1"/><text x="90.4335%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.09%)</title><rect x="90.1835%" y="741" width="0.0917%" height="15" fill="rgb(211,3,31)" fg:x="983" fg:w="1"/><text x="90.4335%" y="751.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.09%)</title><rect x="90.1835%" y="725" width="0.0917%" height="15" fill="rgb(216,152,19)" fg:x="983" fg:w="1"/><text x="90.4335%" y="735.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (12 samples, 1.10%)</title><rect x="89.6330%" y="805" width="1.1009%" height="15" fill="rgb(251,121,35)" fg:x="977" fg:w="12"/><text x="89.8830%" y="815.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::poll (5 samples, 0.46%)</title><rect x="90.2752%" y="789" width="0.4587%" height="15" fill="rgb(210,217,47)" fg:x="984" fg:w="5"/><text x="90.5252%" y="799.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::next_expiration (5 samples, 0.46%)</title><rect x="90.2752%" y="773" width="0.4587%" height="15" fill="rgb(244,116,22)" fg:x="984" fg:w="5"/><text x="90.5252%" y="783.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::next_expiration (5 samples, 0.46%)</title><rect x="90.2752%" y="757" width="0.4587%" height="15" fill="rgb(228,17,21)" fg:x="984" fg:w="5"/><text x="90.5252%" y="767.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::next_occupied_slot (3 samples, 0.28%)</title><rect x="90.4587%" y="741" width="0.2752%" height="15" fill="rgb(240,149,34)" fg:x="986" fg:w="3"/><text x="90.7087%" y="751.50"></text></g><g><title>tokio::time::driver::wheel::level::slot_range (1 samples, 0.09%)</title><rect x="90.6422%" y="725" width="0.0917%" height="15" fill="rgb(208,125,47)" fg:x="988" fg:w="1"/><text x="90.8922%" y="735.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (1 samples, 0.09%)</title><rect x="90.6422%" y="709" width="0.0917%" height="15" fill="rgb(249,186,39)" fg:x="988" fg:w="1"/><text x="90.8922%" y="719.50"></text></g><g><title>tokio::time::clock::Clock::now (18 samples, 1.65%)</title><rect x="90.7339%" y="789" width="1.6514%" height="15" fill="rgb(240,220,33)" fg:x="989" fg:w="18"/><text x="90.9839%" y="799.50"></text></g><g><title>tokio::time::clock::now (18 samples, 1.65%)</title><rect x="90.7339%" y="773" width="1.6514%" height="15" fill="rgb(243,110,23)" fg:x="989" fg:w="18"/><text x="90.9839%" y="783.50"></text></g><g><title>std::time::Instant::now (18 samples, 1.65%)</title><rect x="90.7339%" y="757" width="1.6514%" height="15" fill="rgb(219,163,46)" fg:x="989" fg:w="18"/><text x="90.9839%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (18 samples, 1.65%)</title><rect x="90.7339%" y="741" width="1.6514%" height="15" fill="rgb(216,126,30)" fg:x="989" fg:w="18"/><text x="90.9839%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::now (18 samples, 1.65%)</title><rect x="90.7339%" y="725" width="1.6514%" height="15" fill="rgb(208,139,11)" fg:x="989" fg:w="18"/><text x="90.9839%" y="735.50"></text></g><g><title>__clock_gettime_2 (16 samples, 1.47%)</title><rect x="90.9174%" y="709" width="1.4679%" height="15" fill="rgb(213,118,36)" fg:x="991" fg:w="16"/><text x="91.1674%" y="719.50"></text></g><g><title>__vdso_clock_gettime (9 samples, 0.83%)</title><rect x="91.5596%" y="693" width="0.8257%" height="15" fill="rgb(226,43,17)" fg:x="998" fg:w="9"/><text x="91.8096%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="92.2936%" y="677" width="0.0917%" height="15" fill="rgb(254,217,4)" fg:x="1006" fg:w="1"/><text x="92.5436%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="92.2936%" y="661" width="0.0917%" height="15" fill="rgb(210,134,47)" fg:x="1006" fg:w="1"/><text x="92.5436%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="92.2936%" y="645" width="0.0917%" height="15" fill="rgb(237,24,49)" fg:x="1006" fg:w="1"/><text x="92.5436%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="92.2936%" y="629" width="0.0917%" height="15" fill="rgb(251,39,46)" fg:x="1006" fg:w="1"/><text x="92.5436%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="92.2936%" y="613" width="0.0917%" height="15" fill="rgb(251,220,3)" fg:x="1006" fg:w="1"/><text x="92.5436%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="92.2936%" y="597" width="0.0917%" height="15" fill="rgb(228,105,12)" fg:x="1006" fg:w="1"/><text x="92.5436%" y="607.50"></text></g><g><title>tokio::time::driver::ClockTime::instant_to_tick (1 samples, 0.09%)</title><rect x="92.3853%" y="789" width="0.0917%" height="15" fill="rgb(215,196,1)" fg:x="1007" fg:w="1"/><text x="92.6353%" y="799.50"></text></g><g><title>tokio::time::instant::Instant::checked_duration_since (1 samples, 0.09%)</title><rect x="92.3853%" y="773" width="0.0917%" height="15" fill="rgb(214,33,39)" fg:x="1007" fg:w="1"/><text x="92.6353%" y="783.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.09%)</title><rect x="92.3853%" y="757" width="0.0917%" height="15" fill="rgb(220,19,52)" fg:x="1007" fg:w="1"/><text x="92.6353%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.09%)</title><rect x="92.3853%" y="741" width="0.0917%" height="15" fill="rgb(221,78,38)" fg:x="1007" fg:w="1"/><text x="92.6353%" y="751.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.09%)</title><rect x="92.3853%" y="725" width="0.0917%" height="15" fill="rgb(253,30,16)" fg:x="1007" fg:w="1"/><text x="92.6353%" y="735.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::process (33 samples, 3.03%)</title><rect x="89.6330%" y="821" width="3.0275%" height="15" fill="rgb(242,65,0)" fg:x="977" fg:w="33"/><text x="89.8830%" y="831.50">tok..</text></g><g><title>tokio::time::driver::ClockTime::now (21 samples, 1.93%)</title><rect x="90.7339%" y="805" width="1.9266%" height="15" fill="rgb(235,201,12)" fg:x="989" fg:w="21"/><text x="90.9839%" y="815.50">t..</text></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_internal (2 samples, 0.18%)</title><rect x="92.4771%" y="789" width="0.1835%" height="15" fill="rgb(233,161,9)" fg:x="1008" fg:w="2"/><text x="92.7271%" y="799.50"></text></g><g><title>&lt;tokio::time::driver::Driver&lt;P&gt; as tokio::park::Park&gt;::park (182 samples, 16.70%)</title><rect x="76.3303%" y="853" width="16.6972%" height="15" fill="rgb(241,207,41)" fg:x="832" fg:w="182"/><text x="76.5803%" y="863.50">&lt;tokio::time::driver::Driv..</text></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_internal (182 samples, 16.70%)</title><rect x="76.3303%" y="837" width="16.6972%" height="15" fill="rgb(212,69,46)" fg:x="832" fg:w="182"/><text x="76.5803%" y="847.50">tokio::time::driver::Drive..</text></g><g><title>tokio::time::driver::ClockTime::now (4 samples, 0.37%)</title><rect x="92.6606%" y="821" width="0.3670%" height="15" fill="rgb(239,69,45)" fg:x="1010" fg:w="4"/><text x="92.9106%" y="831.50"></text></g><g><title>tokio::time::clock::Clock::now (4 samples, 0.37%)</title><rect x="92.6606%" y="805" width="0.3670%" height="15" fill="rgb(242,117,48)" fg:x="1010" fg:w="4"/><text x="92.9106%" y="815.50"></text></g><g><title>tokio::time::clock::now (4 samples, 0.37%)</title><rect x="92.6606%" y="789" width="0.3670%" height="15" fill="rgb(228,41,36)" fg:x="1010" fg:w="4"/><text x="92.9106%" y="799.50"></text></g><g><title>std::time::Instant::now (4 samples, 0.37%)</title><rect x="92.6606%" y="773" width="0.3670%" height="15" fill="rgb(212,3,32)" fg:x="1010" fg:w="4"/><text x="92.9106%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (4 samples, 0.37%)</title><rect x="92.6606%" y="757" width="0.3670%" height="15" fill="rgb(233,41,49)" fg:x="1010" fg:w="4"/><text x="92.9106%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::now (4 samples, 0.37%)</title><rect x="92.6606%" y="741" width="0.3670%" height="15" fill="rgb(252,170,49)" fg:x="1010" fg:w="4"/><text x="92.9106%" y="751.50"></text></g><g><title>__clock_gettime_2 (4 samples, 0.37%)</title><rect x="92.6606%" y="725" width="0.3670%" height="15" fill="rgb(229,53,26)" fg:x="1010" fg:w="4"/><text x="92.9106%" y="735.50"></text></g><g><title>__vdso_clock_gettime (4 samples, 0.37%)</title><rect x="92.6606%" y="709" width="0.3670%" height="15" fill="rgb(217,157,12)" fg:x="1010" fg:w="4"/><text x="92.9106%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="92.8440%" y="693" width="0.1835%" height="15" fill="rgb(227,17,9)" fg:x="1012" fg:w="2"/><text x="93.0940%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="92.8440%" y="677" width="0.1835%" height="15" fill="rgb(218,84,12)" fg:x="1012" fg:w="2"/><text x="93.0940%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="92.8440%" y="661" width="0.1835%" height="15" fill="rgb(212,79,24)" fg:x="1012" fg:w="2"/><text x="93.0940%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="92.9358%" y="645" width="0.0917%" height="15" fill="rgb(217,222,37)" fg:x="1013" fg:w="1"/><text x="93.1858%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="92.9358%" y="629" width="0.0917%" height="15" fill="rgb(246,208,8)" fg:x="1013" fg:w="1"/><text x="93.1858%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="92.9358%" y="613" width="0.0917%" height="15" fill="rgb(244,133,10)" fg:x="1013" fg:w="1"/><text x="93.1858%" y="623.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (252 samples, 23.12%)</title><rect x="70.0000%" y="933" width="23.1193%" height="15" fill="rgb(209,219,41)" fg:x="763" fg:w="252"/><text x="70.2500%" y="943.50">&lt;tokio::runtime::park::Parker as toki..</text></g><g><title>tokio::runtime::park::Inner::park (250 samples, 22.94%)</title><rect x="70.1835%" y="917" width="22.9358%" height="15" fill="rgb(253,175,45)" fg:x="765" fg:w="250"/><text x="70.4335%" y="927.50">tokio::runtime::park::Inner::park</text></g><g><title>tokio::runtime::park::Inner::park_driver (184 samples, 16.88%)</title><rect x="76.2385%" y="901" width="16.8807%" height="15" fill="rgb(235,100,37)" fg:x="831" fg:w="184"/><text x="76.4885%" y="911.50">tokio::runtime::park::Inne..</text></g><g><title>&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park (183 samples, 16.79%)</title><rect x="76.3303%" y="885" width="16.7890%" height="15" fill="rgb(225,87,19)" fg:x="832" fg:w="183"/><text x="76.5803%" y="895.50">&lt;tokio::runtime::driver::D..</text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (183 samples, 16.79%)</title><rect x="76.3303%" y="869" width="16.7890%" height="15" fill="rgb(217,152,17)" fg:x="832" fg:w="183"/><text x="76.5803%" y="879.50">&lt;tokio::park::either::Eith..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.09%)</title><rect x="93.0275%" y="853" width="0.0917%" height="15" fill="rgb(235,72,13)" fg:x="1014" fg:w="1"/><text x="93.2775%" y="863.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (1 samples, 0.09%)</title><rect x="93.1193%" y="933" width="0.0917%" height="15" fill="rgb(233,140,18)" fg:x="1015" fg:w="1"/><text x="93.3693%" y="943.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (255 samples, 23.39%)</title><rect x="69.9083%" y="949" width="23.3945%" height="15" fill="rgb(207,212,28)" fg:x="762" fg:w="255"/><text x="70.1583%" y="959.50">tokio::runtime::thread_pool::worker::..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (1 samples, 0.09%)</title><rect x="93.2110%" y="933" width="0.0917%" height="15" fill="rgb(220,130,25)" fg:x="1016" fg:w="1"/><text x="93.4610%" y="943.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (1 samples, 0.09%)</title><rect x="93.2110%" y="917" width="0.0917%" height="15" fill="rgb(205,55,34)" fg:x="1016" fg:w="1"/><text x="93.4610%" y="927.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="93.7615%" y="853" width="0.0917%" height="15" fill="rgb(237,54,35)" fg:x="1022" fg:w="1"/><text x="94.0115%" y="863.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::maintenance (8 samples, 0.73%)</title><rect x="93.3028%" y="949" width="0.7339%" height="15" fill="rgb(208,67,23)" fg:x="1017" fg:w="8"/><text x="93.5528%" y="959.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::is_closed (3 samples, 0.28%)</title><rect x="93.7615%" y="933" width="0.2752%" height="15" fill="rgb(206,207,50)" fg:x="1022" fg:w="3"/><text x="94.0115%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::task::inject::Pointers&gt;&gt; (3 samples, 0.28%)</title><rect x="93.7615%" y="917" width="0.2752%" height="15" fill="rgb(213,211,42)" fg:x="1022" fg:w="3"/><text x="94.0115%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.28%)</title><rect x="93.7615%" y="901" width="0.2752%" height="15" fill="rgb(252,197,50)" fg:x="1022" fg:w="3"/><text x="94.0115%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (3 samples, 0.28%)</title><rect x="93.7615%" y="885" width="0.2752%" height="15" fill="rgb(251,211,41)" fg:x="1022" fg:w="3"/><text x="94.0115%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (3 samples, 0.28%)</title><rect x="93.7615%" y="869" width="0.2752%" height="15" fill="rgb(229,211,5)" fg:x="1022" fg:w="3"/><text x="94.0115%" y="879.50"></text></g><g><title>___pthread_mutex_unlock (2 samples, 0.18%)</title><rect x="93.8532%" y="853" width="0.1835%" height="15" fill="rgb(239,36,31)" fg:x="1023" fg:w="2"/><text x="94.1032%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;usize&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="94.0367%" y="917" width="0.0917%" height="15" fill="rgb(248,67,31)" fg:x="1025" fg:w="1"/><text x="94.2867%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="94.0367%" y="901" width="0.0917%" height="15" fill="rgb(249,55,44)" fg:x="1025" fg:w="1"/><text x="94.2867%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.09%)</title><rect x="94.0367%" y="885" width="0.0917%" height="15" fill="rgb(216,82,12)" fg:x="1025" fg:w="1"/><text x="94.2867%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.09%)</title><rect x="94.0367%" y="869" width="0.0917%" height="15" fill="rgb(242,174,1)" fg:x="1025" fg:w="1"/><text x="94.2867%" y="879.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::is_parked (3 samples, 0.28%)</title><rect x="94.0367%" y="933" width="0.2752%" height="15" fill="rgb(208,120,29)" fg:x="1025" fg:w="3"/><text x="94.2867%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (2 samples, 0.18%)</title><rect x="94.1284%" y="917" width="0.1835%" height="15" fill="rgb(221,105,43)" fg:x="1026" fg:w="2"/><text x="94.3784%" y="927.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (2 samples, 0.18%)</title><rect x="94.1284%" y="901" width="0.1835%" height="15" fill="rgb(234,124,22)" fg:x="1026" fg:w="2"/><text x="94.3784%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (2 samples, 0.18%)</title><rect x="94.1284%" y="885" width="0.1835%" height="15" fill="rgb(212,23,30)" fg:x="1026" fg:w="2"/><text x="94.3784%" y="895.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_parked (4 samples, 0.37%)</title><rect x="94.0367%" y="949" width="0.3670%" height="15" fill="rgb(219,122,53)" fg:x="1025" fg:w="4"/><text x="94.2867%" y="959.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::unpark_worker_by_id (1 samples, 0.09%)</title><rect x="94.3119%" y="933" width="0.0917%" height="15" fill="rgb(248,84,24)" fg:x="1028" fg:w="1"/><text x="94.5619%" y="943.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (272 samples, 24.95%)</title><rect x="69.5413%" y="965" width="24.9541%" height="15" fill="rgb(245,115,18)" fg:x="758" fg:w="272"/><text x="69.7913%" y="975.50">tokio::runtime::thread_pool::worker::Con..</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_to_parked (1 samples, 0.09%)</title><rect x="94.4037%" y="949" width="0.0917%" height="15" fill="rgb(227,176,51)" fg:x="1029" fg:w="1"/><text x="94.6537%" y="959.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_if_work_pending (1 samples, 0.09%)</title><rect x="94.4037%" y="933" width="0.0917%" height="15" fill="rgb(229,63,42)" fg:x="1029" fg:w="1"/><text x="94.6537%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="94.4037%" y="917" width="0.0917%" height="15" fill="rgb(247,202,24)" fg:x="1029" fg:w="1"/><text x="94.6537%" y="927.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (1 samples, 0.09%)</title><rect x="94.4954%" y="965" width="0.0917%" height="15" fill="rgb(244,173,20)" fg:x="1030" fg:w="1"/><text x="94.7454%" y="975.50"></text></g><g><title>__free (2 samples, 0.18%)</title><rect x="94.6789%" y="789" width="0.1835%" height="15" fill="rgb(242,81,47)" fg:x="1032" fg:w="2"/><text x="94.9289%" y="799.50"></text></g><g><title>_int_free (2 samples, 0.18%)</title><rect x="94.6789%" y="773" width="0.1835%" height="15" fill="rgb(231,185,54)" fg:x="1032" fg:w="2"/><text x="94.9289%" y="783.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.09%)</title><rect x="94.8624%" y="789" width="0.0917%" height="15" fill="rgb(243,55,32)" fg:x="1034" fg:w="1"/><text x="95.1124%" y="799.50"></text></g><g><title>std::panicking::try (1 samples, 0.09%)</title><rect x="94.8624%" y="773" width="0.0917%" height="15" fill="rgb(208,167,19)" fg:x="1034" fg:w="1"/><text x="95.1124%" y="783.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.09%)</title><rect x="94.8624%" y="757" width="0.0917%" height="15" fill="rgb(231,72,35)" fg:x="1034" fg:w="1"/><text x="95.1124%" y="767.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.09%)</title><rect x="94.8624%" y="741" width="0.0917%" height="15" fill="rgb(250,173,51)" fg:x="1034" fg:w="1"/><text x="95.1124%" y="751.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.09%)</title><rect x="94.8624%" y="725" width="0.0917%" height="15" fill="rgb(209,5,22)" fg:x="1034" fg:w="1"/><text x="95.1124%" y="735.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete::{{closure}} (1 samples, 0.09%)</title><rect x="94.8624%" y="709" width="0.0917%" height="15" fill="rgb(250,174,19)" fg:x="1034" fg:w="1"/><text x="95.1124%" y="719.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::drop_future_or_output (1 samples, 0.09%)</title><rect x="94.8624%" y="693" width="0.0917%" height="15" fill="rgb(217,3,49)" fg:x="1034" fg:w="1"/><text x="95.1124%" y="703.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage (1 samples, 0.09%)</title><rect x="94.8624%" y="677" width="0.0917%" height="15" fill="rgb(218,225,5)" fg:x="1034" fg:w="1"/><text x="95.1124%" y="687.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="94.8624%" y="661" width="0.0917%" height="15" fill="rgb(236,89,11)" fg:x="1034" fg:w="1"/><text x="95.1124%" y="671.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (1 samples, 0.09%)</title><rect x="94.9541%" y="789" width="0.0917%" height="15" fill="rgb(206,33,28)" fg:x="1035" fg:w="1"/><text x="95.2041%" y="799.50"></text></g><g><title>core::mem::drop (1 samples, 0.09%)</title><rect x="94.9541%" y="773" width="0.0917%" height="15" fill="rgb(241,56,42)" fg:x="1035" fg:w="1"/><text x="95.2041%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_core::postgres::database::Postgres&gt;::return_to_pool::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="94.9541%" y="757" width="0.0917%" height="15" fill="rgb(222,44,11)" fg:x="1035" fg:w="1"/><text x="95.2041%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_core::postgres::database::Postgres&gt;::return_to_pool::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="94.9541%" y="741" width="0.0917%" height="15" fill="rgb(234,111,20)" fg:x="1035" fg:w="1"/><text x="95.2041%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;sqlx_core::pool::connection::PoolConnection&lt;sqlx_core::postgres::database::Postgres&gt;::return_to_pool::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="94.9541%" y="725" width="0.0917%" height="15" fill="rgb(237,77,6)" fg:x="1035" fg:w="1"/><text x="95.2041%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt; (1 samples, 0.09%)</title><rect x="94.9541%" y="709" width="0.0917%" height="15" fill="rgb(235,111,23)" fg:x="1035" fg:w="1"/><text x="95.2041%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="94.9541%" y="693" width="0.0917%" height="15" fill="rgb(251,135,29)" fg:x="1035" fg:w="1"/><text x="95.2041%" y="703.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (1 samples, 0.09%)</title><rect x="95.0459%" y="773" width="0.0917%" height="15" fill="rgb(217,57,1)" fg:x="1036" fg:w="1"/><text x="95.2959%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::task::list::OwnedTasksInner&lt;alloc::sync::Arc&lt;tokio::runtime::basic_scheduler::Shared&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="95.0459%" y="757" width="0.0917%" height="15" fill="rgb(249,119,31)" fg:x="1036" fg:w="1"/><text x="95.2959%" y="767.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="95.0459%" y="741" width="0.0917%" height="15" fill="rgb(233,164,33)" fg:x="1036" fg:w="1"/><text x="95.2959%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.09%)</title><rect x="95.0459%" y="725" width="0.0917%" height="15" fill="rgb(250,217,43)" fg:x="1036" fg:w="1"/><text x="95.2959%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.09%)</title><rect x="95.0459%" y="709" width="0.0917%" height="15" fill="rgb(232,154,50)" fg:x="1036" fg:w="1"/><text x="95.2959%" y="719.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="95.0459%" y="693" width="0.0917%" height="15" fill="rgb(227,190,8)" fg:x="1036" fg:w="1"/><text x="95.2959%" y="703.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::release (2 samples, 0.18%)</title><rect x="95.0459%" y="789" width="0.1835%" height="15" fill="rgb(209,217,32)" fg:x="1036" fg:w="2"/><text x="95.2959%" y="799.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::release (1 samples, 0.09%)</title><rect x="95.1376%" y="773" width="0.0917%" height="15" fill="rgb(243,203,50)" fg:x="1037" fg:w="1"/><text x="95.3876%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (9 samples, 0.83%)</title><rect x="94.5872%" y="805" width="0.8257%" height="15" fill="rgb(232,152,27)" fg:x="1031" fg:w="9"/><text x="94.8372%" y="815.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_complete (2 samples, 0.18%)</title><rect x="95.2294%" y="789" width="0.1835%" height="15" fill="rgb(240,34,29)" fg:x="1038" fg:w="2"/><text x="95.4794%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_xor (2 samples, 0.18%)</title><rect x="95.2294%" y="773" width="0.1835%" height="15" fill="rgb(215,185,52)" fg:x="1038" fg:w="2"/><text x="95.4794%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_xor (2 samples, 0.18%)</title><rect x="95.2294%" y="757" width="0.1835%" height="15" fill="rgb(240,89,49)" fg:x="1038" fg:w="2"/><text x="95.4794%" y="767.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (2 samples, 0.18%)</title><rect x="95.7798%" y="421" width="0.1835%" height="15" fill="rgb(225,12,52)" fg:x="1044" fg:w="2"/><text x="96.0298%" y="431.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::require_empty_read (2 samples, 0.18%)</title><rect x="95.7798%" y="405" width="0.1835%" height="15" fill="rgb(239,128,45)" fg:x="1044" fg:w="2"/><text x="96.0298%" y="415.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (2 samples, 0.18%)</title><rect x="95.7798%" y="389" width="0.1835%" height="15" fill="rgb(211,78,47)" fg:x="1044" fg:w="2"/><text x="96.0298%" y="399.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1 samples, 0.09%)</title><rect x="95.8716%" y="373" width="0.0917%" height="15" fill="rgb(232,31,21)" fg:x="1045" fg:w="1"/><text x="96.1216%" y="383.50"></text></g><g><title>&lt;reqwest::connect::Conn as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="95.8716%" y="357" width="0.0917%" height="15" fill="rgb(222,168,14)" fg:x="1045" fg:w="1"/><text x="96.1216%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="95.8716%" y="341" width="0.0917%" height="15" fill="rgb(209,128,24)" fg:x="1045" fg:w="1"/><text x="96.1216%" y="351.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.09%)</title><rect x="95.8716%" y="325" width="0.0917%" height="15" fill="rgb(249,35,13)" fg:x="1045" fg:w="1"/><text x="96.1216%" y="335.50"></text></g><g><title>tokio_native_tls::TlsStream&lt;S&gt;::with_context (1 samples, 0.09%)</title><rect x="95.8716%" y="309" width="0.0917%" height="15" fill="rgb(218,7,2)" fg:x="1045" fg:w="1"/><text x="96.1216%" y="319.50"></text></g><g><title>&lt;tokio_native_tls::TlsStream&lt;S&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read::{{closure}} (1 samples, 0.09%)</title><rect x="95.8716%" y="293" width="0.0917%" height="15" fill="rgb(238,107,27)" fg:x="1045" fg:w="1"/><text x="96.1216%" y="303.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (3 samples, 0.28%)</title><rect x="95.7798%" y="437" width="0.2752%" height="15" fill="rgb(217,88,38)" fg:x="1044" fg:w="3"/><text x="96.0298%" y="447.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (1 samples, 0.09%)</title><rect x="95.9633%" y="421" width="0.0917%" height="15" fill="rgb(230,207,0)" fg:x="1046" fg:w="1"/><text x="96.2133%" y="431.50"></text></g><g><title>hyper::body::body::Body::new_channel (1 samples, 0.09%)</title><rect x="95.9633%" y="405" width="0.0917%" height="15" fill="rgb(249,64,54)" fg:x="1046" fg:w="1"/><text x="96.2133%" y="415.50"></text></g><g><title>futures_channel::mpsc::channel (1 samples, 0.09%)</title><rect x="95.9633%" y="389" width="0.0917%" height="15" fill="rgb(231,7,11)" fg:x="1046" fg:w="1"/><text x="96.2133%" y="399.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Client&lt;B&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (1 samples, 0.09%)</title><rect x="96.0550%" y="421" width="0.0917%" height="15" fill="rgb(205,149,21)" fg:x="1047" fg:w="1"/><text x="96.3050%" y="431.50"></text></g><g><title>hyper::client::dispatch::Receiver&lt;T,U&gt;::poll_recv (1 samples, 0.09%)</title><rect x="96.0550%" y="405" width="0.0917%" height="15" fill="rgb(215,126,34)" fg:x="1047" fg:w="1"/><text x="96.3050%" y="415.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::can_write_head (1 samples, 0.09%)</title><rect x="96.1468%" y="421" width="0.0917%" height="15" fill="rgb(241,132,45)" fg:x="1048" fg:w="1"/><text x="96.3968%" y="431.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::can_headers_buf (1 samples, 0.09%)</title><rect x="96.1468%" y="405" width="0.0917%" height="15" fill="rgb(252,69,32)" fg:x="1048" fg:w="1"/><text x="96.3968%" y="415.50"></text></g><g><title>bytes::buf::buf_impl::Buf::has_remaining (1 samples, 0.09%)</title><rect x="96.1468%" y="389" width="0.0917%" height="15" fill="rgb(232,204,19)" fg:x="1048" fg:w="1"/><text x="96.3968%" y="399.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (8 samples, 0.73%)</title><rect x="95.6881%" y="613" width="0.7339%" height="15" fill="rgb(249,15,47)" fg:x="1043" fg:w="8"/><text x="95.9381%" y="623.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (8 samples, 0.73%)</title><rect x="95.6881%" y="597" width="0.7339%" height="15" fill="rgb(209,227,23)" fg:x="1043" fg:w="8"/><text x="95.9381%" y="607.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (8 samples, 0.73%)</title><rect x="95.6881%" y="581" width="0.7339%" height="15" fill="rgb(248,92,24)" fg:x="1043" fg:w="8"/><text x="95.9381%" y="591.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (8 samples, 0.73%)</title><rect x="95.6881%" y="565" width="0.7339%" height="15" fill="rgb(247,59,2)" fg:x="1043" fg:w="8"/><text x="95.9381%" y="575.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (8 samples, 0.73%)</title><rect x="95.6881%" y="549" width="0.7339%" height="15" fill="rgb(221,30,5)" fg:x="1043" fg:w="8"/><text x="95.9381%" y="559.50"></text></g><g><title>&lt;hyper::client::conn::Connection&lt;T,B&gt; as core::future::future::Future&gt;::poll (8 samples, 0.73%)</title><rect x="95.6881%" y="533" width="0.7339%" height="15" fill="rgb(208,108,53)" fg:x="1043" fg:w="8"/><text x="95.9381%" y="543.50"></text></g><g><title>&lt;hyper::client::conn::ProtoClient&lt;T,B&gt; as core::future::future::Future&gt;::poll (8 samples, 0.73%)</title><rect x="95.6881%" y="517" width="0.7339%" height="15" fill="rgb(211,183,26)" fg:x="1043" fg:w="8"/><text x="95.9381%" y="527.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.73%)</title><rect x="95.6881%" y="501" width="0.7339%" height="15" fill="rgb(232,132,4)" fg:x="1043" fg:w="8"/><text x="95.9381%" y="511.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (8 samples, 0.73%)</title><rect x="95.6881%" y="485" width="0.7339%" height="15" fill="rgb(253,128,37)" fg:x="1043" fg:w="8"/><text x="95.9381%" y="495.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (7 samples, 0.64%)</title><rect x="95.7798%" y="469" width="0.6422%" height="15" fill="rgb(221,58,24)" fg:x="1044" fg:w="7"/><text x="96.0298%" y="479.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (7 samples, 0.64%)</title><rect x="95.7798%" y="453" width="0.6422%" height="15" fill="rgb(230,54,45)" fg:x="1044" fg:w="7"/><text x="96.0298%" y="463.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (4 samples, 0.37%)</title><rect x="96.0550%" y="437" width="0.3670%" height="15" fill="rgb(254,21,18)" fg:x="1047" fg:w="4"/><text x="96.3050%" y="447.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_head (2 samples, 0.18%)</title><rect x="96.2385%" y="421" width="0.1835%" height="15" fill="rgb(221,108,0)" fg:x="1049" fg:w="2"/><text x="96.4885%" y="431.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (2 samples, 0.18%)</title><rect x="96.2385%" y="405" width="0.1835%" height="15" fill="rgb(206,95,1)" fg:x="1049" fg:w="2"/><text x="96.4885%" y="415.50"></text></g><g><title>hyper::proto::h1::role::encode_headers (2 samples, 0.18%)</title><rect x="96.2385%" y="389" width="0.1835%" height="15" fill="rgb(237,52,5)" fg:x="1049" fg:w="2"/><text x="96.4885%" y="399.50"></text></g><g><title>&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::encode (2 samples, 0.18%)</title><rect x="96.2385%" y="373" width="0.1835%" height="15" fill="rgb(218,150,34)" fg:x="1049" fg:w="2"/><text x="96.4885%" y="383.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (9 samples, 0.83%)</title><rect x="95.6881%" y="789" width="0.8257%" height="15" fill="rgb(235,194,28)" fg:x="1043" fg:w="9"/><text x="95.9381%" y="799.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.83%)</title><rect x="95.6881%" y="773" width="0.8257%" height="15" fill="rgb(245,92,18)" fg:x="1043" fg:w="9"/><text x="95.9381%" y="783.50"></text></g><g><title>std::panicking::try (9 samples, 0.83%)</title><rect x="95.6881%" y="757" width="0.8257%" height="15" fill="rgb(253,203,53)" fg:x="1043" fg:w="9"/><text x="95.9381%" y="767.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.83%)</title><rect x="95.6881%" y="741" width="0.8257%" height="15" fill="rgb(249,185,47)" fg:x="1043" fg:w="9"/><text x="95.9381%" y="751.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.83%)</title><rect x="95.6881%" y="725" width="0.8257%" height="15" fill="rgb(252,194,52)" fg:x="1043" fg:w="9"/><text x="95.9381%" y="735.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (9 samples, 0.83%)</title><rect x="95.6881%" y="709" width="0.8257%" height="15" fill="rgb(210,53,36)" fg:x="1043" fg:w="9"/><text x="95.9381%" y="719.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (9 samples, 0.83%)</title><rect x="95.6881%" y="693" width="0.8257%" height="15" fill="rgb(237,37,25)" fg:x="1043" fg:w="9"/><text x="95.9381%" y="703.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (9 samples, 0.83%)</title><rect x="95.6881%" y="677" width="0.8257%" height="15" fill="rgb(242,116,27)" fg:x="1043" fg:w="9"/><text x="95.9381%" y="687.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (9 samples, 0.83%)</title><rect x="95.6881%" y="661" width="0.8257%" height="15" fill="rgb(213,185,26)" fg:x="1043" fg:w="9"/><text x="95.9381%" y="671.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (9 samples, 0.83%)</title><rect x="95.6881%" y="645" width="0.8257%" height="15" fill="rgb(225,204,8)" fg:x="1043" fg:w="9"/><text x="95.9381%" y="655.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (9 samples, 0.83%)</title><rect x="95.6881%" y="629" width="0.8257%" height="15" fill="rgb(254,111,37)" fg:x="1043" fg:w="9"/><text x="95.9381%" y="639.50"></text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project_replace (1 samples, 0.09%)</title><rect x="96.4220%" y="613" width="0.0917%" height="15" fill="rgb(242,35,9)" fg:x="1051" fg:w="1"/><text x="96.6720%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;(pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;futures_util::future::poll_fn::PollFn&lt;hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;::send_request::{{closure}}::{{closure}}&gt;&gt;,())&gt; (1 samples, 0.09%)</title><rect x="96.4220%" y="597" width="0.0917%" height="15" fill="rgb(232,138,49)" fg:x="1051" fg:w="1"/><text x="96.6720%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;futures_util::future::poll_fn::PollFn&lt;hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;::send_request::{{closure}}::{{closure}}&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="96.4220%" y="581" width="0.0917%" height="15" fill="rgb(247,56,4)" fg:x="1051" fg:w="1"/><text x="96.6720%" y="591.50"></text></g><g><title>&lt;pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="96.4220%" y="565" width="0.0917%" height="15" fill="rgb(226,179,17)" fg:x="1051" fg:w="1"/><text x="96.6720%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::poll_fn::PollFn&lt;hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;::send_request::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.09%)</title><rect x="96.4220%" y="549" width="0.0917%" height="15" fill="rgb(216,163,45)" fg:x="1051" fg:w="1"/><text x="96.6720%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;::send_request::{{closure}}::{{closure}}&gt; (1 samples, 0.09%)</title><rect x="96.4220%" y="533" width="0.0917%" height="15" fill="rgb(211,157,3)" fg:x="1051" fg:w="1"/><text x="96.6720%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::pool::Pooled&lt;hyper::client::client::PoolClient&lt;reqwest::async_impl::body::ImplStream&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="96.4220%" y="517" width="0.0917%" height="15" fill="rgb(234,44,20)" fg:x="1051" fg:w="1"/><text x="96.6720%" y="527.50"></text></g><g><title>&lt;hyper::client::pool::Pooled&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="96.4220%" y="501" width="0.0917%" height="15" fill="rgb(254,138,23)" fg:x="1051" fg:w="1"/><text x="96.6720%" y="511.50"></text></g><g><title>hyper::client::pool::PoolInner&lt;T&gt;::put (1 samples, 0.09%)</title><rect x="96.4220%" y="485" width="0.0917%" height="15" fill="rgb(206,119,39)" fg:x="1051" fg:w="1"/><text x="96.6720%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.09%)</title><rect x="96.4220%" y="469" width="0.0917%" height="15" fill="rgb(231,105,52)" fg:x="1051" fg:w="1"/><text x="96.6720%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.09%)</title><rect x="96.4220%" y="453" width="0.0917%" height="15" fill="rgb(250,20,5)" fg:x="1051" fg:w="1"/><text x="96.6720%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.09%)</title><rect x="96.4220%" y="437" width="0.0917%" height="15" fill="rgb(215,198,30)" fg:x="1051" fg:w="1"/><text x="96.6720%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="96.4220%" y="421" width="0.0917%" height="15" fill="rgb(246,142,8)" fg:x="1051" fg:w="1"/><text x="96.6720%" y="431.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="96.4220%" y="405" width="0.0917%" height="15" fill="rgb(243,26,38)" fg:x="1051" fg:w="1"/><text x="96.6720%" y="415.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="96.4220%" y="389" width="0.0917%" height="15" fill="rgb(205,133,28)" fg:x="1051" fg:w="1"/><text x="96.6720%" y="399.50"></text></g><g><title>tokio::coop::budget (24 samples, 2.20%)</title><rect x="94.5872%" y="949" width="2.2018%" height="15" fill="rgb(212,34,0)" fg:x="1031" fg:w="24"/><text x="94.8372%" y="959.50">t..</text></g><g><title>tokio::coop::with_budget (24 samples, 2.20%)</title><rect x="94.5872%" y="933" width="2.2018%" height="15" fill="rgb(251,226,22)" fg:x="1031" fg:w="24"/><text x="94.8372%" y="943.50">t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (24 samples, 2.20%)</title><rect x="94.5872%" y="917" width="2.2018%" height="15" fill="rgb(252,119,9)" fg:x="1031" fg:w="24"/><text x="94.8372%" y="927.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24 samples, 2.20%)</title><rect x="94.5872%" y="901" width="2.2018%" height="15" fill="rgb(213,150,50)" fg:x="1031" fg:w="24"/><text x="94.8372%" y="911.50">s..</text></g><g><title>tokio::coop::with_budget::{{closure}} (24 samples, 2.20%)</title><rect x="94.5872%" y="885" width="2.2018%" height="15" fill="rgb(212,24,39)" fg:x="1031" fg:w="24"/><text x="94.8372%" y="895.50">t..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (24 samples, 2.20%)</title><rect x="94.5872%" y="869" width="2.2018%" height="15" fill="rgb(213,46,39)" fg:x="1031" fg:w="24"/><text x="94.8372%" y="879.50">t..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (24 samples, 2.20%)</title><rect x="94.5872%" y="853" width="2.2018%" height="15" fill="rgb(239,106,12)" fg:x="1031" fg:w="24"/><text x="94.8372%" y="863.50">t..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (24 samples, 2.20%)</title><rect x="94.5872%" y="837" width="2.2018%" height="15" fill="rgb(249,229,21)" fg:x="1031" fg:w="24"/><text x="94.8372%" y="847.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (24 samples, 2.20%)</title><rect x="94.5872%" y="821" width="2.2018%" height="15" fill="rgb(212,158,3)" fg:x="1031" fg:w="24"/><text x="94.8372%" y="831.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (15 samples, 1.38%)</title><rect x="95.4128%" y="805" width="1.3761%" height="15" fill="rgb(253,26,48)" fg:x="1040" fg:w="15"/><text x="95.6628%" y="815.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (3 samples, 0.28%)</title><rect x="96.5138%" y="789" width="0.2752%" height="15" fill="rgb(238,178,20)" fg:x="1052" fg:w="3"/><text x="96.7638%" y="799.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1 samples, 0.09%)</title><rect x="96.6972%" y="773" width="0.0917%" height="15" fill="rgb(208,86,15)" fg:x="1054" fg:w="1"/><text x="96.9472%" y="783.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running::{{closure}} (1 samples, 0.09%)</title><rect x="96.6972%" y="757" width="0.0917%" height="15" fill="rgb(239,42,53)" fg:x="1054" fg:w="1"/><text x="96.9472%" y="767.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (4 samples, 0.37%)</title><rect x="96.7890%" y="901" width="0.3670%" height="15" fill="rgb(245,226,8)" fg:x="1055" fg:w="4"/><text x="97.0390%" y="911.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (1 samples, 0.09%)</title><rect x="97.0642%" y="885" width="0.0917%" height="15" fill="rgb(216,176,32)" fg:x="1058" fg:w="1"/><text x="97.3142%" y="895.50"></text></g><g><title>__GI___pthread_cond_signal (4 samples, 0.37%)</title><rect x="97.1560%" y="901" width="0.3670%" height="15" fill="rgb(231,186,21)" fg:x="1059" fg:w="4"/><text x="97.4060%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.4312%" y="885" width="0.0917%" height="15" fill="rgb(205,95,49)" fg:x="1062" fg:w="1"/><text x="97.6812%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.4312%" y="869" width="0.0917%" height="15" fill="rgb(217,145,8)" fg:x="1062" fg:w="1"/><text x="97.6812%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="97.4312%" y="853" width="0.0917%" height="15" fill="rgb(239,144,48)" fg:x="1062" fg:w="1"/><text x="97.6812%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.09%)</title><rect x="97.5229%" y="885" width="0.0917%" height="15" fill="rgb(214,189,23)" fg:x="1063" fg:w="1"/><text x="97.7729%" y="895.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (35 samples, 3.21%)</title><rect x="94.5872%" y="965" width="3.2110%" height="15" fill="rgb(229,157,17)" fg:x="1031" fg:w="35"/><text x="94.8372%" y="975.50">tok..</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_searching (11 samples, 1.01%)</title><rect x="96.7890%" y="949" width="1.0092%" height="15" fill="rgb(230,5,48)" fg:x="1055" fg:w="11"/><text x="97.0390%" y="959.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::transition_worker_from_searching (11 samples, 1.01%)</title><rect x="96.7890%" y="933" width="1.0092%" height="15" fill="rgb(224,156,48)" fg:x="1055" fg:w="11"/><text x="97.0390%" y="943.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (11 samples, 1.01%)</title><rect x="96.7890%" y="917" width="1.0092%" height="15" fill="rgb(223,14,29)" fg:x="1055" fg:w="11"/><text x="97.0390%" y="927.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (3 samples, 0.28%)</title><rect x="97.5229%" y="901" width="0.2752%" height="15" fill="rgb(229,96,36)" fg:x="1063" fg:w="3"/><text x="97.7729%" y="911.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (2 samples, 0.18%)</title><rect x="97.6147%" y="885" width="0.1835%" height="15" fill="rgb(231,102,53)" fg:x="1064" fg:w="2"/><text x="97.8647%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.18%)</title><rect x="97.6147%" y="869" width="0.1835%" height="15" fill="rgb(210,77,38)" fg:x="1064" fg:w="2"/><text x="97.8647%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.18%)</title><rect x="97.6147%" y="853" width="0.1835%" height="15" fill="rgb(235,131,6)" fg:x="1064" fg:w="2"/><text x="97.8647%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="97.7982%" y="901" width="0.0917%" height="15" fill="rgb(252,55,38)" fg:x="1066" fg:w="1"/><text x="98.0482%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (2 samples, 0.18%)</title><rect x="97.7982%" y="949" width="0.1835%" height="15" fill="rgb(246,38,14)" fg:x="1066" fg:w="2"/><text x="98.0482%" y="959.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task::{{closure}} (2 samples, 0.18%)</title><rect x="97.7982%" y="933" width="0.1835%" height="15" fill="rgb(242,27,5)" fg:x="1066" fg:w="2"/><text x="98.0482%" y="943.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::pop (2 samples, 0.18%)</title><rect x="97.7982%" y="917" width="0.1835%" height="15" fill="rgb(228,65,35)" fg:x="1066" fg:w="2"/><text x="98.0482%" y="927.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::is_empty (1 samples, 0.09%)</title><rect x="97.8899%" y="901" width="0.0917%" height="15" fill="rgb(245,93,11)" fg:x="1067" fg:w="1"/><text x="98.1399%" y="911.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::len (1 samples, 0.09%)</title><rect x="97.8899%" y="885" width="0.0917%" height="15" fill="rgb(213,1,31)" fg:x="1067" fg:w="1"/><text x="98.1399%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.09%)</title><rect x="97.8899%" y="869" width="0.0917%" height="15" fill="rgb(237,205,14)" fg:x="1067" fg:w="1"/><text x="98.1399%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="97.8899%" y="853" width="0.0917%" height="15" fill="rgb(232,118,45)" fg:x="1067" fg:w="1"/><text x="98.1399%" y="863.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task (4 samples, 0.37%)</title><rect x="97.7982%" y="965" width="0.3670%" height="15" fill="rgb(218,5,6)" fg:x="1066" fg:w="4"/><text x="98.0482%" y="975.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task (2 samples, 0.18%)</title><rect x="97.9817%" y="949" width="0.1835%" height="15" fill="rgb(251,87,51)" fg:x="1068" fg:w="2"/><text x="98.2317%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (2 samples, 0.18%)</title><rect x="97.9817%" y="933" width="0.1835%" height="15" fill="rgb(207,225,20)" fg:x="1068" fg:w="2"/><text x="98.2317%" y="943.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task::{{closure}} (2 samples, 0.18%)</title><rect x="97.9817%" y="917" width="0.1835%" height="15" fill="rgb(222,78,54)" fg:x="1068" fg:w="2"/><text x="98.2317%" y="927.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::pop (2 samples, 0.18%)</title><rect x="97.9817%" y="901" width="0.1835%" height="15" fill="rgb(232,85,16)" fg:x="1068" fg:w="2"/><text x="98.2317%" y="911.50"></text></g><g><title>tokio::runtime::queue::unpack (2 samples, 0.18%)</title><rect x="97.9817%" y="885" width="0.1835%" height="15" fill="rgb(244,25,33)" fg:x="1068" fg:w="2"/><text x="98.2317%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.09%)</title><rect x="98.1651%" y="917" width="0.0917%" height="15" fill="rgb(233,24,36)" fg:x="1070" fg:w="1"/><text x="98.4151%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="98.1651%" y="901" width="0.0917%" height="15" fill="rgb(253,49,54)" fg:x="1070" fg:w="1"/><text x="98.4151%" y="911.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (325 samples, 29.82%)</title><rect x="68.8073%" y="1013" width="29.8165%" height="15" fill="rgb(245,12,22)" fg:x="750" fg:w="325"/><text x="69.0573%" y="1023.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (325 samples, 29.82%)</title><rect x="68.8073%" y="997" width="29.8165%" height="15" fill="rgb(253,141,28)" fg:x="750" fg:w="325"/><text x="69.0573%" y="1007.50">tokio::runtime::thread_pool::worker::run::{{clos..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (325 samples, 29.82%)</title><rect x="68.8073%" y="981" width="29.8165%" height="15" fill="rgb(225,207,27)" fg:x="750" fg:w="325"/><text x="69.0573%" y="991.50">tokio::runtime::thread_pool::worker::Context::run</text></g><g><title>tokio::runtime::thread_pool::worker::Core::steal_work (5 samples, 0.46%)</title><rect x="98.1651%" y="965" width="0.4587%" height="15" fill="rgb(220,84,2)" fg:x="1070" fg:w="5"/><text x="98.4151%" y="975.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into (5 samples, 0.46%)</title><rect x="98.1651%" y="949" width="0.4587%" height="15" fill="rgb(224,37,37)" fg:x="1070" fg:w="5"/><text x="98.4151%" y="959.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into2 (5 samples, 0.46%)</title><rect x="98.1651%" y="933" width="0.4587%" height="15" fill="rgb(220,143,18)" fg:x="1070" fg:w="5"/><text x="98.4151%" y="943.50"></text></g><g><title>tokio::runtime::queue::unpack (4 samples, 0.37%)</title><rect x="98.2569%" y="917" width="0.3670%" height="15" fill="rgb(210,88,33)" fg:x="1071" fg:w="4"/><text x="98.5069%" y="927.50"></text></g><g><title>std::panic::catch_unwind (349 samples, 32.02%)</title><rect x="66.6972%" y="1413" width="32.0183%" height="15" fill="rgb(219,87,51)" fg:x="727" fg:w="349"/><text x="66.9472%" y="1423.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (349 samples, 32.02%)</title><rect x="66.6972%" y="1397" width="32.0183%" height="15" fill="rgb(211,7,35)" fg:x="727" fg:w="349"/><text x="66.9472%" y="1407.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (349 samples, 32.02%)</title><rect x="66.6972%" y="1381" width="32.0183%" height="15" fill="rgb(232,77,2)" fg:x="727" fg:w="349"/><text x="66.9472%" y="1391.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (349 samples, 32.02%)</title><rect x="66.6972%" y="1365" width="32.0183%" height="15" fill="rgb(249,94,25)" fg:x="727" fg:w="349"/><text x="66.9472%" y="1375.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as co..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (349 samples, 32.02%)</title><rect x="66.6972%" y="1349" width="32.0183%" height="15" fill="rgb(215,112,2)" fg:x="727" fg:w="349"/><text x="66.9472%" y="1359.50">std::thread::Builder::spawn_unchecked::{{closure}}::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (349 samples, 32.02%)</title><rect x="66.6972%" y="1333" width="32.0183%" height="15" fill="rgb(226,115,48)" fg:x="727" fg:w="349"/><text x="66.9472%" y="1343.50">std::sys_common::backtrace::__rust_begin_short_backt..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (349 samples, 32.02%)</title><rect x="66.6972%" y="1317" width="32.0183%" height="15" fill="rgb(249,196,10)" fg:x="727" fg:w="349"/><text x="66.9472%" y="1327.50">tokio::runtime::blocking::pool::Spawner::spawn_threa..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (349 samples, 32.02%)</title><rect x="66.6972%" y="1301" width="32.0183%" height="15" fill="rgb(237,109,14)" fg:x="727" fg:w="349"/><text x="66.9472%" y="1311.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (344 samples, 31.56%)</title><rect x="67.1560%" y="1285" width="31.5596%" height="15" fill="rgb(217,103,53)" fg:x="732" fg:w="344"/><text x="67.4060%" y="1295.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (344 samples, 31.56%)</title><rect x="67.1560%" y="1269" width="31.5596%" height="15" fill="rgb(244,137,9)" fg:x="732" fg:w="344"/><text x="67.4060%" y="1279.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (344 samples, 31.56%)</title><rect x="67.1560%" y="1253" width="31.5596%" height="15" fill="rgb(227,201,3)" fg:x="732" fg:w="344"/><text x="67.4060%" y="1263.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (344 samples, 31.56%)</title><rect x="67.1560%" y="1237" width="31.5596%" height="15" fill="rgb(243,94,6)" fg:x="732" fg:w="344"/><text x="67.4060%" y="1247.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (344 samples, 31.56%)</title><rect x="67.1560%" y="1221" width="31.5596%" height="15" fill="rgb(235,118,5)" fg:x="732" fg:w="344"/><text x="67.4060%" y="1231.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_i..</text></g><g><title>tokio::runtime::task::harness::poll_future (344 samples, 31.56%)</title><rect x="67.1560%" y="1205" width="31.5596%" height="15" fill="rgb(247,10,30)" fg:x="732" fg:w="344"/><text x="67.4060%" y="1215.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (344 samples, 31.56%)</title><rect x="67.1560%" y="1189" width="31.5596%" height="15" fill="rgb(205,26,28)" fg:x="732" fg:w="344"/><text x="67.4060%" y="1199.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (344 samples, 31.56%)</title><rect x="67.1560%" y="1173" width="31.5596%" height="15" fill="rgb(206,99,35)" fg:x="732" fg:w="344"/><text x="67.4060%" y="1183.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (344 samples, 31.56%)</title><rect x="67.1560%" y="1157" width="31.5596%" height="15" fill="rgb(238,130,40)" fg:x="732" fg:w="344"/><text x="67.4060%" y="1167.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (344 samples, 31.56%)</title><rect x="67.1560%" y="1141" width="31.5596%" height="15" fill="rgb(224,126,31)" fg:x="732" fg:w="344"/><text x="67.4060%" y="1151.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as c..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (344 samples, 31.56%)</title><rect x="67.1560%" y="1125" width="31.5596%" height="15" fill="rgb(254,105,17)" fg:x="732" fg:w="344"/><text x="67.4060%" y="1135.50">tokio::runtime::task::harness::poll_future::{{closu..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (344 samples, 31.56%)</title><rect x="67.1560%" y="1109" width="31.5596%" height="15" fill="rgb(216,87,36)" fg:x="732" fg:w="344"/><text x="67.4060%" y="1119.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (344 samples, 31.56%)</title><rect x="67.1560%" y="1093" width="31.5596%" height="15" fill="rgb(240,21,12)" fg:x="732" fg:w="344"/><text x="67.4060%" y="1103.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (344 samples, 31.56%)</title><rect x="67.1560%" y="1077" width="31.5596%" height="15" fill="rgb(245,192,34)" fg:x="732" fg:w="344"/><text x="67.4060%" y="1087.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{c..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (344 samples, 31.56%)</title><rect x="67.1560%" y="1061" width="31.5596%" height="15" fill="rgb(226,100,49)" fg:x="732" fg:w="344"/><text x="67.4060%" y="1071.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (326 samples, 29.91%)</title><rect x="68.8073%" y="1045" width="29.9083%" height="15" fill="rgb(245,188,27)" fg:x="750" fg:w="326"/><text x="69.0573%" y="1055.50">tokio::runtime::thread_pool::worker::Launch::lau..</text></g><g><title>tokio::runtime::thread_pool::worker::run (326 samples, 29.91%)</title><rect x="68.8073%" y="1029" width="29.9083%" height="15" fill="rgb(212,170,8)" fg:x="750" fg:w="326"/><text x="69.0573%" y="1039.50">tokio::runtime::thread_pool::worker::run</text></g><g><title>tokio::runtime::enter::enter (1 samples, 0.09%)</title><rect x="98.6239%" y="1013" width="0.0917%" height="15" fill="rgb(217,113,29)" fg:x="1075" fg:w="1"/><text x="98.8739%" y="1023.50"></text></g><g><title>tokio::runtime::enter::try_enter (1 samples, 0.09%)</title><rect x="98.6239%" y="997" width="0.0917%" height="15" fill="rgb(237,30,3)" fg:x="1075" fg:w="1"/><text x="98.8739%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.09%)</title><rect x="98.6239%" y="981" width="0.0917%" height="15" fill="rgb(227,19,28)" fg:x="1075" fg:w="1"/><text x="98.8739%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.09%)</title><rect x="98.6239%" y="965" width="0.0917%" height="15" fill="rgb(239,172,45)" fg:x="1075" fg:w="1"/><text x="98.8739%" y="975.50"></text></g><g><title>tokio::runtime::enter::ENTERED::__getit (1 samples, 0.09%)</title><rect x="98.6239%" y="949" width="0.0917%" height="15" fill="rgb(254,55,39)" fg:x="1075" fg:w="1"/><text x="98.8739%" y="959.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.09%)</title><rect x="98.6239%" y="933" width="0.0917%" height="15" fill="rgb(249,208,12)" fg:x="1075" fg:w="1"/><text x="98.8739%" y="943.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.09%)</title><rect x="98.6239%" y="917" width="0.0917%" height="15" fill="rgb(240,52,13)" fg:x="1075" fg:w="1"/><text x="98.8739%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.09%)</title><rect x="98.6239%" y="901" width="0.0917%" height="15" fill="rgb(252,149,13)" fg:x="1075" fg:w="1"/><text x="98.8739%" y="911.50"></text></g><g><title>_int_malloc (2 samples, 0.18%)</title><rect x="98.9908%" y="1349" width="0.1835%" height="15" fill="rgb(232,81,48)" fg:x="1079" fg:w="2"/><text x="99.2408%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.5413%" y="1317" width="0.0917%" height="15" fill="rgb(222,144,2)" fg:x="1085" fg:w="1"/><text x="99.7913%" y="1327.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.83%)</title><rect x="98.8991%" y="1381" width="0.8257%" height="15" fill="rgb(216,81,32)" fg:x="1078" fg:w="9"/><text x="99.1491%" y="1391.50"></text></g><g><title>tcache_init.part.0 (8 samples, 0.73%)</title><rect x="98.9908%" y="1365" width="0.7339%" height="15" fill="rgb(244,78,51)" fg:x="1079" fg:w="8"/><text x="99.2408%" y="1375.50"></text></g><g><title>arena_get2.part.0 (6 samples, 0.55%)</title><rect x="99.1743%" y="1349" width="0.5505%" height="15" fill="rgb(217,66,21)" fg:x="1081" fg:w="6"/><text x="99.4243%" y="1359.50"></text></g><g><title>alloc_new_heap (5 samples, 0.46%)</title><rect x="99.2661%" y="1333" width="0.4587%" height="15" fill="rgb(247,101,42)" fg:x="1082" fg:w="5"/><text x="99.5161%" y="1343.50"></text></g><g><title>__GI___mprotect (1 samples, 0.09%)</title><rect x="99.6330%" y="1317" width="0.0917%" height="15" fill="rgb(227,81,39)" fg:x="1086" fg:w="1"/><text x="99.8830%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.6330%" y="1301" width="0.0917%" height="15" fill="rgb(220,223,44)" fg:x="1086" fg:w="1"/><text x="99.8830%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.6330%" y="1285" width="0.0917%" height="15" fill="rgb(205,218,2)" fg:x="1086" fg:w="1"/><text x="99.8830%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.6330%" y="1269" width="0.0917%" height="15" fill="rgb(212,207,28)" fg:x="1086" fg:w="1"/><text x="99.8830%" y="1279.50"></text></g><g><title>__GI___pthread_attr_init (1 samples, 0.09%)</title><rect x="99.7248%" y="1381" width="0.0917%" height="15" fill="rgb(224,12,41)" fg:x="1087" fg:w="1"/><text x="99.9748%" y="1391.50"></text></g><g><title>all (1,090 samples, 100%)</title><rect x="0.0000%" y="1557" width="100.0000%" height="15" fill="rgb(216,118,12)" fg:x="0" fg:w="1090"/><text x="0.2500%" y="1567.50"></text></g><g><title>rocket-worker-t (556 samples, 51.01%)</title><rect x="48.9908%" y="1541" width="51.0092%" height="15" fill="rgb(252,97,46)" fg:x="534" fg:w="556"/><text x="49.2408%" y="1551.50">rocket-worker-t</text></g><g><title>__GI___clone (363 samples, 33.30%)</title><rect x="66.6972%" y="1525" width="33.3028%" height="15" fill="rgb(244,206,19)" fg:x="727" fg:w="363"/><text x="66.9472%" y="1535.50">__GI___clone</text></g><g><title>start_thread (363 samples, 33.30%)</title><rect x="66.6972%" y="1509" width="33.3028%" height="15" fill="rgb(231,84,31)" fg:x="727" fg:w="363"/><text x="66.9472%" y="1519.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (363 samples, 33.30%)</title><rect x="66.6972%" y="1493" width="33.3028%" height="15" fill="rgb(244,133,0)" fg:x="727" fg:w="363"/><text x="66.9472%" y="1503.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (363 samples, 33.30%)</title><rect x="66.6972%" y="1477" width="33.3028%" height="15" fill="rgb(223,15,50)" fg:x="727" fg:w="363"/><text x="66.9472%" y="1487.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (363 samples, 33.30%)</title><rect x="66.6972%" y="1461" width="33.3028%" height="15" fill="rgb(250,118,49)" fg:x="727" fg:w="363"/><text x="66.9472%" y="1471.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (363 samples, 33.30%)</title><rect x="66.6972%" y="1445" width="33.3028%" height="15" fill="rgb(248,25,38)" fg:x="727" fg:w="363"/><text x="66.9472%" y="1455.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (363 samples, 33.30%)</title><rect x="66.6972%" y="1429" width="33.3028%" height="15" fill="rgb(215,70,14)" fg:x="727" fg:w="363"/><text x="66.9472%" y="1439.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (14 samples, 1.28%)</title><rect x="98.7156%" y="1413" width="1.2844%" height="15" fill="rgb(215,28,15)" fg:x="1076" fg:w="14"/><text x="98.9656%" y="1423.50"></text></g><g><title>__pthread_getattr_np (13 samples, 1.19%)</title><rect x="98.8073%" y="1397" width="1.1927%" height="15" fill="rgb(243,6,28)" fg:x="1077" fg:w="13"/><text x="99.0573%" y="1407.50"></text></g><g><title>__pthread_getaffinity_alias (2 samples, 0.18%)</title><rect x="99.8165%" y="1381" width="0.1835%" height="15" fill="rgb(222,130,1)" fg:x="1088" fg:w="2"/><text x="100.0665%" y="1391.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="99.8165%" y="1365" width="0.1835%" height="15" fill="rgb(236,166,44)" fg:x="1088" fg:w="2"/><text x="100.0665%" y="1375.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="99.8165%" y="1349" width="0.1835%" height="15" fill="rgb(221,108,14)" fg:x="1088" fg:w="2"/><text x="100.0665%" y="1359.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="99.8165%" y="1333" width="0.1835%" height="15" fill="rgb(252,3,45)" fg:x="1088" fg:w="2"/><text x="100.0665%" y="1343.50"></text></g></svg></svg>